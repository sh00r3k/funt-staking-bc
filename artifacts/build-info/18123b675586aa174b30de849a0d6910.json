{"id":"18123b675586aa174b30de849a0d6910","_format":"hh-sol-build-info-1","solcVersion":"0.8.18","solcLongVersion":"0.8.18+commit.87f61d96","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"},"contracts/Stacking.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n\ncontract Stacking is Ownable, ReentrancyGuard {\n  using SafeMath for uint256;\n\n  struct Plan {\n    uint256 time;\n    uint256 percent;\n  }\n\n  struct Deposit {\n    uint8 plan;\n    uint256 amount;\n    uint256 start;\n    bool isTaken;\n  }\n\n  struct User {\n    Deposit[] deposits;\n    uint256 seedLoss;\n    uint256 withdrawn;\n  }\n\n  uint256 public constant MIN_AMOUNT = 1e15; // 0.001 token\n  uint256 public constant PERCENT_DIVIDER = 10000;\n  uint256 public constant TIME_STEP = 1 days;\n  uint256 public constant ONE_YEAR = 365 * TIME_STEP;\n  uint256 public constant PENALTY_PERCENT = 6660;\n\n  mapping(address => User) public users;\n  Plan[] public plans;\n  IERC20 public token;\n  uint256 public totalStacked;\n  uint256 public adminTokens;\n  uint256[] public usersDeposits;\n\n  event Newbie(address user);\n  event NewDeposit(address indexed user, uint8 plan, uint256 amount);\n  event Withdrawn(address indexed user, uint256 amount);\n\n  constructor(address _tokenAddress) Ownable() {\n    token = IERC20(_tokenAddress);\n\n    plans.push(Plan(3 * 30, 11));\n    plans.push(Plan(6 * 30, 22));\n    plans.push(Plan(12 * 30, 66));\n    plans.push(Plan(5* 12 * 30, 120));\n  }\n\n  function deposit(uint8 plan, uint256 amounts) public nonReentrant {\n    require(amounts >= MIN_AMOUNT, \"min limit 0.001 is required\");\n    require(plan < plans.length, \"Invalid plan\");\n    token.transferFrom(msg.sender, address(this), amounts);\n\n    User storage user = users[msg.sender];\n\n    if (user.deposits.length == 0) {\n      emit Newbie(msg.sender);\n    }\n\n    users[msg.sender].deposits.push(Deposit(plan, amounts, block.timestamp, false));\n    totalStacked = totalStacked.add(amounts);\n    emit NewDeposit(msg.sender, plan, amounts);\n  }\n\n  function withdraw(uint256 depositId) public nonReentrant {\n    uint256 negativeDividens = getUserNegativeDividends(msg.sender, depositId);\n\n    User storage user = users[msg.sender];\n    Deposit storage _deposit = user.deposits[depositId];\n    require(_deposit.isTaken == false, \"deposit is already taken\");\n\n    uint256 totalAmount;\n    uint256 finish = _deposit.start.add(plans[_deposit.plan].time.mul(TIME_STEP));\n    if (finish > block.timestamp) {\n      totalAmount = _deposit.amount.sub(_deposit.amount.mul(PENALTY_PERCENT).div(PERCENT_DIVIDER));\n      adminTokens = adminTokens.add(_deposit.amount.sub(totalAmount));\n    } else {\n      totalAmount = _deposit.amount.sub(negativeDividens);\n      user.seedLoss = user.seedLoss.add(negativeDividens);\n    }\n\n    require(getContractBalance() >= totalAmount, \"Tokens are not available, please contact admin\");\n\n    user.withdrawn = user.withdrawn.add(totalAmount);\n    token.transfer(msg.sender, totalAmount);\n    _deposit.isTaken = true;\n\n    emit Withdrawn(msg.sender, totalAmount);\n  }\n\n  function withdrawTokens(uint256 amounts) public onlyOwner nonReentrant {\n    require(adminTokens >= amounts, \"Admin can withdraw less than adminTokens amount\");\n    token.transfer(msg.sender, amounts);\n    adminTokens = adminTokens.sub(amounts);\n  }\n\n  function getUserNegativeDividends(address userAddress, uint256 depositId) public view returns (uint256) {\n    require(depositId < getUserAmountOfDeposits(userAddress), \"Invalid depositId\");\n\n    User storage user = users[userAddress];\n    Deposit storage _deposit = user.deposits[depositId];\n\n    uint256 finish = _deposit.start.add(plans[_deposit.plan].time.mul(TIME_STEP));\n    uint256 share = _deposit.amount.mul(plans[_deposit.plan].percent).div(PERCENT_DIVIDER);\n    uint256 to = block.timestamp > finish ? finish : block.timestamp;\n    uint256 from = _deposit.start;\n\n    return share.mul(to.sub(from)).div(ONE_YEAR);\n  }\n\n  function getContractBalance() public view returns (uint256) {\n    return token.balanceOf(address(this));\n  }\n\n  function getPlanInfo(uint8 plan) public view returns (uint256 time, uint256 percent) {\n    time = plans[plan].time;\n    percent = plans[plan].percent;\n  }\n\n  function getUserAmountOfDeposits(address userAddress) public view returns (uint256) {\n    return users[userAddress].deposits.length;\n  }\n\n  function getUserTotalDeposits(address userAddress) public view returns (uint256 amount) {\n    for (uint256 i = 0; i < users[userAddress].deposits.length; i++) {\n      amount = amount.add(users[userAddress].deposits[i].amount);\n    }\n  }\n\n  function getUserDepositInfo(\n    address userAddress,\n    uint256 depositId\n  ) public view returns (uint8 plan, uint256 percent, uint256 amount, uint256 start, uint256 finish, bool isTaken) {\n    User storage user = users[userAddress];\n    Deposit storage _deposit = user.deposits[depositId];\n\n    plan = _deposit.plan;\n    percent = plans[plan].percent;\n    amount = _deposit.amount;\n    start = _deposit.start;\n    finish = _deposit.start.add(plans[_deposit.plan].time.mul(TIME_STEP));\n    isTaken = _deposit.isTaken;\n  }\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[277],"Ownable":[112]},"id":113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":113,"sourceUnit":278,"src":"127:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nameLocations":["683:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":277,"src":"683:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"683:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"159:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":112,"linearizedBaseContracts":[112,277],"name":"Ownable","nameLocation":"672:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nameLocation":"713:6:0","nodeType":"VariableDeclaration","scope":112,"src":"697:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":13,"name":"OwnershipTransferred","nameLocation":"732:20:0","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:0","nodeType":"VariableDeclaration","scope":13,"src":"753:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:0","nodeType":"VariableDeclaration","scope":13,"src":"784:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:0"},"src":"726:84:0"},{"body":{"id":22,"nodeType":"Block","src":"926:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":267,"src":"955:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"936:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"936:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"936:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"816:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"923:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"926:0:0"},"scope":112,"src":"912:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1084:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":26,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1094:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1094:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28,"nodeType":"ExpressionStatement","src":"1094:13:0"},{"id":29,"nodeType":"PlaceholderStatement","src":"1117:1:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"981:77:0","text":" @dev Throws if called by any account other than the owner."},"id":31,"name":"onlyOwner","nameLocation":"1072:9:0","nodeType":"ModifierDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1081:2:0"},"src":"1063:62:0","virtual":false,"visibility":"internal"},{"body":{"id":39,"nodeType":"Block","src":"1256:30:0","statements":[{"expression":{"id":37,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1273:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":36,"id":38,"nodeType":"Return","src":"1266:13:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1131:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":40,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:0","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"1215:2:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40,"src":"1247:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:0"},"scope":112,"src":"1201:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":53,"nodeType":"Block","src":"1404:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":45,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1422:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1422:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":47,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":267,"src":"1433:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1433:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":44,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1414:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1414:68:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1292:62:0","text":" @dev Throws if the sender is not the owner."},"id":54,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[],"src":"1379:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"1404:0:0"},"scope":112,"src":"1359:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1878:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1907:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1907:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1888:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1888:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1888:30:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1495:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":68,"implemented":true,"kind":"function","modifiers":[{"id":58,"kind":"modifierInvocation","modifierName":{"id":57,"name":"onlyOwner","nameLocations":["1868:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1868:9:0"},"nodeType":"ModifierInvocation","src":"1868:9:0"}],"name":"renounceOwnership","nameLocation":"1833:17:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1850:2:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1878:0:0"},"scope":112,"src":"1824:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":90,"nodeType":"Block","src":"2144:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2162:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2182:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":79,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2174:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"2174:7:0","typeDescriptions":{}}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2174:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2162:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2186:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":76,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2154:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2154:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"2154:73:0"},{"expression":{"arguments":[{"id":87,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2256:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2237:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2237:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"2237:28:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1931:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":91,"implemented":true,"kind":"function","modifiers":[{"id":74,"kind":"modifierInvocation","modifierName":{"id":73,"name":"onlyOwner","nameLocations":["2134:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2134:9:0"},"nodeType":"ModifierInvocation","src":"2134:9:0"}],"name":"transferOwnership","nameLocation":"2083:17:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"newOwner","nameLocation":"2109:8:0","nodeType":"VariableDeclaration","scope":91,"src":"2101:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2101:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2100:18:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"2144:0:0"},"scope":112,"src":"2074:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":110,"nodeType":"Block","src":"2489:124:0","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"oldOwner","nameLocation":"2507:8:0","nodeType":"VariableDeclaration","scope":110,"src":"2499:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":100,"initialValue":{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2518:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2499:25:0"},{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2534:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2543:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2534:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"2534:17:0"},{"eventCall":{"arguments":[{"id":106,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2587:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":107,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2597:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2566:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2566:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"EmitStatement","src":"2561:45:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"2278:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":111,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2435:18:0","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"newOwner","nameLocation":"2462:8:0","nodeType":"VariableDeclaration","scope":111,"src":"2454:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2454:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2453:18:0"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"2489:0:0"},"scope":112,"src":"2426:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":113,"src":"654:1961:0","usedErrors":[]}],"src":"102:2514:0"},"id":0},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[177]},"id":178,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":114,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:1"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"137:750:1","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":177,"linearizedBaseContracts":[177],"name":"ReentrancyGuard","nameLocation":"906:15:1","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":118,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1701:12:1","nodeType":"VariableDeclaration","scope":177,"src":"1676:41:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":116,"name":"uint256","nodeType":"ElementaryTypeName","src":"1676:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1716:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":121,"mutability":"constant","name":"_ENTERED","nameLocation":"1748:8:1","nodeType":"VariableDeclaration","scope":177,"src":"1723:37:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":119,"name":"uint256","nodeType":"ElementaryTypeName","src":"1723:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1759:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":123,"mutability":"mutable","name":"_status","nameLocation":"1783:7:1","nodeType":"VariableDeclaration","scope":177,"src":"1767:23:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":122,"name":"uint256","nodeType":"ElementaryTypeName","src":"1767:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":130,"nodeType":"Block","src":"1811:39:1","statements":[{"expression":{"id":128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":126,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"1821:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":127,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"1831:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1821:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":129,"nodeType":"ExpressionStatement","src":"1821:22:1"}]},"id":131,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":124,"nodeType":"ParameterList","parameters":[],"src":"1808:2:1"},"returnParameters":{"id":125,"nodeType":"ParameterList","parameters":[],"src":"1811:0:1"},"scope":177,"src":"1797:53:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":141,"nodeType":"Block","src":"2251:79:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":134,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"2261:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2261:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":136,"nodeType":"ExpressionStatement","src":"2261:21:1"},{"id":137,"nodeType":"PlaceholderStatement","src":"2292:1:1"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":138,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":165,"src":"2303:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2303:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":140,"nodeType":"ExpressionStatement","src":"2303:20:1"}]},"documentation":{"id":132,"nodeType":"StructuredDocumentation","src":"1856:366:1","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":142,"name":"nonReentrant","nameLocation":"2236:12:1","nodeType":"ModifierDefinition","parameters":{"id":133,"nodeType":"ParameterList","parameters":[],"src":"2248:2:1"},"src":"2227:103:1","virtual":false,"visibility":"internal"},{"body":{"id":156,"nodeType":"Block","src":"2375:248:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":146,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"2468:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":147,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":121,"src":"2479:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2468:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2489:33:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":145,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2460:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2460:63:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":151,"nodeType":"ExpressionStatement","src":"2460:63:1"},{"expression":{"id":154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":152,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"2598:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":153,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":121,"src":"2608:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2598:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":155,"nodeType":"ExpressionStatement","src":"2598:18:1"}]},"id":157,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2345:19:1","nodeType":"FunctionDefinition","parameters":{"id":143,"nodeType":"ParameterList","parameters":[],"src":"2364:2:1"},"returnParameters":{"id":144,"nodeType":"ParameterList","parameters":[],"src":"2375:0:1"},"scope":177,"src":"2336:287:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":164,"nodeType":"Block","src":"2667:171:1","statements":[{"expression":{"id":162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":160,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"2809:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":161,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"2819:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2809:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":163,"nodeType":"ExpressionStatement","src":"2809:22:1"}]},"id":165,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2638:18:1","nodeType":"FunctionDefinition","parameters":{"id":158,"nodeType":"ParameterList","parameters":[],"src":"2656:2:1"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[],"src":"2667:0:1"},"scope":177,"src":"2629:209:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":175,"nodeType":"Block","src":"3081:43:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":171,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"3098:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":172,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":121,"src":"3109:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3098:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":170,"id":174,"nodeType":"Return","src":"3091:26:1"}]},"documentation":{"id":166,"nodeType":"StructuredDocumentation","src":"2844:168:1","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":176,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3026:23:1","nodeType":"FunctionDefinition","parameters":{"id":167,"nodeType":"ParameterList","parameters":[],"src":"3049:2:1"},"returnParameters":{"id":170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":176,"src":"3075:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":168,"name":"bool","nodeType":"ElementaryTypeName","src":"3075:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3074:6:1"},"scope":177,"src":"3017:107:1","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":178,"src":"888:2238:1","usedErrors":[]}],"src":"112:3015:1"},"id":1},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[255]},"id":256,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":179,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":180,"nodeType":"StructuredDocumentation","src":"131:70:2","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":255,"linearizedBaseContracts":[255],"name":"IERC20","nameLocation":"212:6:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":181,"nodeType":"StructuredDocumentation","src":"225:158:2","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":189,"name":"Transfer","nameLocation":"394:8:2","nodeType":"EventDefinition","parameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":183,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:2","nodeType":"VariableDeclaration","scope":189,"src":"403:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":182,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":185,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:2","nodeType":"VariableDeclaration","scope":189,"src":"425:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":184,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":187,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:2","nodeType":"VariableDeclaration","scope":189,"src":"445:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":186,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:2"},"src":"388:72:2"},{"anonymous":false,"documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"466:148:2","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":198,"name":"Approval","nameLocation":"625:8:2","nodeType":"EventDefinition","parameters":{"id":197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:2","nodeType":"VariableDeclaration","scope":198,"src":"634:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":191,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":194,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:2","nodeType":"VariableDeclaration","scope":198,"src":"657:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":193,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":196,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:2","nodeType":"VariableDeclaration","scope":198,"src":"682:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":195,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:2"},"src":"619:78:2"},{"documentation":{"id":199,"nodeType":"StructuredDocumentation","src":"703:66:2","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":204,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:2","nodeType":"FunctionDefinition","parameters":{"id":200,"nodeType":"ParameterList","parameters":[],"src":"794:2:2"},"returnParameters":{"id":203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":202,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":204,"src":"820:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":201,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:2"},"scope":255,"src":"774:55:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":205,"nodeType":"StructuredDocumentation","src":"835:72:2","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":212,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:2","nodeType":"FunctionDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":207,"mutability":"mutable","name":"account","nameLocation":"939:7:2","nodeType":"VariableDeclaration","scope":212,"src":"931:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":206,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:2"},"returnParameters":{"id":211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":210,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":212,"src":"971:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":209,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:2"},"scope":255,"src":"912:68:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":213,"nodeType":"StructuredDocumentation","src":"986:202:2","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":222,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:2","nodeType":"FunctionDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":215,"mutability":"mutable","name":"to","nameLocation":"1219:2:2","nodeType":"VariableDeclaration","scope":222,"src":"1211:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":214,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":217,"mutability":"mutable","name":"amount","nameLocation":"1231:6:2","nodeType":"VariableDeclaration","scope":222,"src":"1223:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":216,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:2"},"returnParameters":{"id":221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":220,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":222,"src":"1257:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":219,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:2"},"scope":255,"src":"1193:70:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":223,"nodeType":"StructuredDocumentation","src":"1269:264:2","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":232,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:2","nodeType":"FunctionDefinition","parameters":{"id":228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":225,"mutability":"mutable","name":"owner","nameLocation":"1565:5:2","nodeType":"VariableDeclaration","scope":232,"src":"1557:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":224,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":227,"mutability":"mutable","name":"spender","nameLocation":"1580:7:2","nodeType":"VariableDeclaration","scope":232,"src":"1572:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":226,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:2"},"returnParameters":{"id":231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":232,"src":"1612:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":229,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:2"},"scope":255,"src":"1538:83:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":233,"nodeType":"StructuredDocumentation","src":"1627:642:2","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":242,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:2","nodeType":"FunctionDefinition","parameters":{"id":238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":235,"mutability":"mutable","name":"spender","nameLocation":"2299:7:2","nodeType":"VariableDeclaration","scope":242,"src":"2291:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":234,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":237,"mutability":"mutable","name":"amount","nameLocation":"2316:6:2","nodeType":"VariableDeclaration","scope":242,"src":"2308:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":236,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:2"},"returnParameters":{"id":241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":240,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":242,"src":"2342:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":239,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:2"},"scope":255,"src":"2274:74:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":243,"nodeType":"StructuredDocumentation","src":"2354:287:2","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":254,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:2","nodeType":"FunctionDefinition","parameters":{"id":250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":245,"mutability":"mutable","name":"from","nameLocation":"2676:4:2","nodeType":"VariableDeclaration","scope":254,"src":"2668:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":244,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":247,"mutability":"mutable","name":"to","nameLocation":"2690:2:2","nodeType":"VariableDeclaration","scope":254,"src":"2682:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":246,"name":"address","nodeType":"ElementaryTypeName","src":"2682:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":249,"mutability":"mutable","name":"amount","nameLocation":"2702:6:2","nodeType":"VariableDeclaration","scope":254,"src":"2694:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":248,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:42:2"},"returnParameters":{"id":253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":254,"src":"2728:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":251,"name":"bool","nodeType":"ElementaryTypeName","src":"2728:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2727:6:2"},"scope":255,"src":"2646:88:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":256,"src":"202:2534:2","usedErrors":[]}],"src":"106:2631:2"},"id":2},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[277]},"id":278,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":257,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:3"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":258,"nodeType":"StructuredDocumentation","src":"111:496:3","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":277,"linearizedBaseContracts":[277],"name":"Context","nameLocation":"626:7:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":266,"nodeType":"Block","src":"702:34:3","statements":[{"expression":{"expression":{"id":263,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:3","memberName":"sender","nodeType":"MemberAccess","src":"719:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":262,"id":265,"nodeType":"Return","src":"712:17:3"}]},"id":267,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:3","nodeType":"FunctionDefinition","parameters":{"id":259,"nodeType":"ParameterList","parameters":[],"src":"659:2:3"},"returnParameters":{"id":262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":261,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":267,"src":"693:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":260,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:3"},"scope":277,"src":"640:96:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":275,"nodeType":"Block","src":"809:32:3","statements":[{"expression":{"expression":{"id":272,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:3","memberName":"data","nodeType":"MemberAccess","src":"826:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":271,"id":274,"nodeType":"Return","src":"819:15:3"}]},"id":276,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:3","nodeType":"FunctionDefinition","parameters":{"id":268,"nodeType":"ParameterList","parameters":[],"src":"759:2:3"},"returnParameters":{"id":271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":270,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":276,"src":"793:14:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":269,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:3"},"scope":277,"src":"742:99:3","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":278,"src":"608:235:3","usedErrors":[]}],"src":"86:758:3"},"id":3},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","exportedSymbols":{"SafeMath":[589]},"id":590,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":279,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:4"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeMath","contractDependencies":[],"contractKind":"library","documentation":{"id":280,"nodeType":"StructuredDocumentation","src":"285:196:4","text":" @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."},"fullyImplemented":true,"id":589,"linearizedBaseContracts":[589],"name":"SafeMath","nameLocation":"490:8:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":311,"nodeType":"Block","src":"717:140:4","statements":[{"id":310,"nodeType":"UncheckedBlock","src":"727:124:4","statements":[{"assignments":[293],"declarations":[{"constant":false,"id":293,"mutability":"mutable","name":"c","nameLocation":"759:1:4","nodeType":"VariableDeclaration","scope":310,"src":"751:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":292,"name":"uint256","nodeType":"ElementaryTypeName","src":"751:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":297,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":294,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"763:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":295,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":285,"src":"767:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"763:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"751:17:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":298,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":293,"src":"786:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":299,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"790:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"786:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":305,"nodeType":"IfStatement","src":"782:28:4","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"801:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"808:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":303,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"800:10:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":291,"id":304,"nodeType":"Return","src":"793:17:4"}},{"expression":{"components":[{"hexValue":"74727565","id":306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"832:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":307,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":293,"src":"838:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":308,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"831:9:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":291,"id":309,"nodeType":"Return","src":"824:16:4"}]}]},"documentation":{"id":281,"nodeType":"StructuredDocumentation","src":"505:131:4","text":" @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":312,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"650:6:4","nodeType":"FunctionDefinition","parameters":{"id":286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":283,"mutability":"mutable","name":"a","nameLocation":"665:1:4","nodeType":"VariableDeclaration","scope":312,"src":"657:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":282,"name":"uint256","nodeType":"ElementaryTypeName","src":"657:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":285,"mutability":"mutable","name":"b","nameLocation":"676:1:4","nodeType":"VariableDeclaration","scope":312,"src":"668:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":284,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"656:22:4"},"returnParameters":{"id":291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":288,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":312,"src":"702:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":287,"name":"bool","nodeType":"ElementaryTypeName","src":"702:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":290,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":312,"src":"708:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":289,"name":"uint256","nodeType":"ElementaryTypeName","src":"708:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"701:15:4"},"scope":589,"src":"641:216:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":339,"nodeType":"Block","src":"1078:113:4","statements":[{"id":338,"nodeType":"UncheckedBlock","src":"1088:97:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":324,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"1116:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":325,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"1120:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1116:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":331,"nodeType":"IfStatement","src":"1112:28:4","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1131:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1138:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":329,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1130:10:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":323,"id":330,"nodeType":"Return","src":"1123:17:4"}},{"expression":{"components":[{"hexValue":"74727565","id":332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1162:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":333,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"1168:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":334,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"1172:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1168:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":336,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1161:13:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":323,"id":337,"nodeType":"Return","src":"1154:20:4"}]}]},"documentation":{"id":313,"nodeType":"StructuredDocumentation","src":"863:134:4","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":340,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"1011:6:4","nodeType":"FunctionDefinition","parameters":{"id":318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":315,"mutability":"mutable","name":"a","nameLocation":"1026:1:4","nodeType":"VariableDeclaration","scope":340,"src":"1018:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":314,"name":"uint256","nodeType":"ElementaryTypeName","src":"1018:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":317,"mutability":"mutable","name":"b","nameLocation":"1037:1:4","nodeType":"VariableDeclaration","scope":340,"src":"1029:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":316,"name":"uint256","nodeType":"ElementaryTypeName","src":"1029:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1017:22:4"},"returnParameters":{"id":323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":340,"src":"1063:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":319,"name":"bool","nodeType":"ElementaryTypeName","src":"1063:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":322,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":340,"src":"1069:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":321,"name":"uint256","nodeType":"ElementaryTypeName","src":"1069:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1062:15:4"},"scope":589,"src":"1002:189:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":381,"nodeType":"Block","src":"1415:417:4","statements":[{"id":380,"nodeType":"UncheckedBlock","src":"1425:401:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":352,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":343,"src":"1683:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1688:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1683:6:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":359,"nodeType":"IfStatement","src":"1679:28:4","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1699:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1705:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":357,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1698:9:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":351,"id":358,"nodeType":"Return","src":"1691:16:4"}},{"assignments":[361],"declarations":[{"constant":false,"id":361,"mutability":"mutable","name":"c","nameLocation":"1729:1:4","nodeType":"VariableDeclaration","scope":380,"src":"1721:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":360,"name":"uint256","nodeType":"ElementaryTypeName","src":"1721:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":365,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":362,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":343,"src":"1733:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":363,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"1737:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1733:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1721:17:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":366,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"1756:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":367,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":343,"src":"1760:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1756:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":369,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"1765:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1756:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":375,"nodeType":"IfStatement","src":"1752:33:4","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1776:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1783:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":373,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1775:10:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":351,"id":374,"nodeType":"Return","src":"1768:17:4"}},{"expression":{"components":[{"hexValue":"74727565","id":376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1807:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":377,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"1813:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":378,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1806:9:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":351,"id":379,"nodeType":"Return","src":"1799:16:4"}]}]},"documentation":{"id":341,"nodeType":"StructuredDocumentation","src":"1197:137:4","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":382,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1348:6:4","nodeType":"FunctionDefinition","parameters":{"id":346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":343,"mutability":"mutable","name":"a","nameLocation":"1363:1:4","nodeType":"VariableDeclaration","scope":382,"src":"1355:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":342,"name":"uint256","nodeType":"ElementaryTypeName","src":"1355:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":345,"mutability":"mutable","name":"b","nameLocation":"1374:1:4","nodeType":"VariableDeclaration","scope":382,"src":"1366:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":344,"name":"uint256","nodeType":"ElementaryTypeName","src":"1366:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1354:22:4"},"returnParameters":{"id":351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":382,"src":"1400:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":347,"name":"bool","nodeType":"ElementaryTypeName","src":"1400:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":350,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":382,"src":"1406:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":349,"name":"uint256","nodeType":"ElementaryTypeName","src":"1406:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1399:15:4"},"scope":589,"src":"1339:493:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":409,"nodeType":"Block","src":"2057:114:4","statements":[{"id":408,"nodeType":"UncheckedBlock","src":"2067:98:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":394,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"2095:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2100:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2095:6:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":401,"nodeType":"IfStatement","src":"2091:29:4","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2111:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2118:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":399,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2110:10:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":393,"id":400,"nodeType":"Return","src":"2103:17:4"}},{"expression":{"components":[{"hexValue":"74727565","id":402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2142:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":403,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"2148:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":404,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"2152:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2148:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":406,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2141:13:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":393,"id":407,"nodeType":"Return","src":"2134:20:4"}]}]},"documentation":{"id":383,"nodeType":"StructuredDocumentation","src":"1838:138:4","text":" @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":410,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1990:6:4","nodeType":"FunctionDefinition","parameters":{"id":388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":385,"mutability":"mutable","name":"a","nameLocation":"2005:1:4","nodeType":"VariableDeclaration","scope":410,"src":"1997:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":384,"name":"uint256","nodeType":"ElementaryTypeName","src":"1997:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":387,"mutability":"mutable","name":"b","nameLocation":"2016:1:4","nodeType":"VariableDeclaration","scope":410,"src":"2008:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":386,"name":"uint256","nodeType":"ElementaryTypeName","src":"2008:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1996:22:4"},"returnParameters":{"id":393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":390,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":410,"src":"2042:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":389,"name":"bool","nodeType":"ElementaryTypeName","src":"2042:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":392,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":410,"src":"2048:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":391,"name":"uint256","nodeType":"ElementaryTypeName","src":"2048:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2041:15:4"},"scope":589,"src":"1981:190:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":437,"nodeType":"Block","src":"2406:114:4","statements":[{"id":436,"nodeType":"UncheckedBlock","src":"2416:98:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":422,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"2444:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2449:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2444:6:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":429,"nodeType":"IfStatement","src":"2440:29:4","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2460:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2467:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":427,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2459:10:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":421,"id":428,"nodeType":"Return","src":"2452:17:4"}},{"expression":{"components":[{"hexValue":"74727565","id":430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2491:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":431,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"2497:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":432,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"2501:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2497:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":434,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2490:13:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":421,"id":435,"nodeType":"Return","src":"2483:20:4"}]}]},"documentation":{"id":411,"nodeType":"StructuredDocumentation","src":"2177:148:4","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":438,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2339:6:4","nodeType":"FunctionDefinition","parameters":{"id":416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":413,"mutability":"mutable","name":"a","nameLocation":"2354:1:4","nodeType":"VariableDeclaration","scope":438,"src":"2346:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":412,"name":"uint256","nodeType":"ElementaryTypeName","src":"2346:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":415,"mutability":"mutable","name":"b","nameLocation":"2365:1:4","nodeType":"VariableDeclaration","scope":438,"src":"2357:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":414,"name":"uint256","nodeType":"ElementaryTypeName","src":"2357:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2345:22:4"},"returnParameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":418,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":438,"src":"2391:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":417,"name":"bool","nodeType":"ElementaryTypeName","src":"2391:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":438,"src":"2397:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":419,"name":"uint256","nodeType":"ElementaryTypeName","src":"2397:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2390:15:4"},"scope":589,"src":"2330:190:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":452,"nodeType":"Block","src":"2822:29:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":448,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":441,"src":"2839:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":449,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"2843:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2839:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":447,"id":451,"nodeType":"Return","src":"2832:12:4"}]},"documentation":{"id":439,"nodeType":"StructuredDocumentation","src":"2526:224:4","text":" @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."},"id":453,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"2764:3:4","nodeType":"FunctionDefinition","parameters":{"id":444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":441,"mutability":"mutable","name":"a","nameLocation":"2776:1:4","nodeType":"VariableDeclaration","scope":453,"src":"2768:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":440,"name":"uint256","nodeType":"ElementaryTypeName","src":"2768:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":443,"mutability":"mutable","name":"b","nameLocation":"2787:1:4","nodeType":"VariableDeclaration","scope":453,"src":"2779:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":442,"name":"uint256","nodeType":"ElementaryTypeName","src":"2779:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2767:22:4"},"returnParameters":{"id":447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":446,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":453,"src":"2813:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":445,"name":"uint256","nodeType":"ElementaryTypeName","src":"2813:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2812:9:4"},"scope":589,"src":"2755:96:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":467,"nodeType":"Block","src":"3189:29:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":463,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":456,"src":"3206:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":464,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"3210:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3206:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":462,"id":466,"nodeType":"Return","src":"3199:12:4"}]},"documentation":{"id":454,"nodeType":"StructuredDocumentation","src":"2857:260:4","text":" @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":468,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"3131:3:4","nodeType":"FunctionDefinition","parameters":{"id":459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":456,"mutability":"mutable","name":"a","nameLocation":"3143:1:4","nodeType":"VariableDeclaration","scope":468,"src":"3135:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":455,"name":"uint256","nodeType":"ElementaryTypeName","src":"3135:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":458,"mutability":"mutable","name":"b","nameLocation":"3154:1:4","nodeType":"VariableDeclaration","scope":468,"src":"3146:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":457,"name":"uint256","nodeType":"ElementaryTypeName","src":"3146:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3134:22:4"},"returnParameters":{"id":462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":461,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":468,"src":"3180:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":460,"name":"uint256","nodeType":"ElementaryTypeName","src":"3180:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3179:9:4"},"scope":589,"src":"3122:96:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":482,"nodeType":"Block","src":"3532:29:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":478,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":471,"src":"3549:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":479,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"3553:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3549:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":477,"id":481,"nodeType":"Return","src":"3542:12:4"}]},"documentation":{"id":469,"nodeType":"StructuredDocumentation","src":"3224:236:4","text":" @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."},"id":483,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nameLocation":"3474:3:4","nodeType":"FunctionDefinition","parameters":{"id":474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":471,"mutability":"mutable","name":"a","nameLocation":"3486:1:4","nodeType":"VariableDeclaration","scope":483,"src":"3478:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":470,"name":"uint256","nodeType":"ElementaryTypeName","src":"3478:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":473,"mutability":"mutable","name":"b","nameLocation":"3497:1:4","nodeType":"VariableDeclaration","scope":483,"src":"3489:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":472,"name":"uint256","nodeType":"ElementaryTypeName","src":"3489:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3477:22:4"},"returnParameters":{"id":477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":476,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":483,"src":"3523:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":475,"name":"uint256","nodeType":"ElementaryTypeName","src":"3523:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3522:9:4"},"scope":589,"src":"3465:96:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":497,"nodeType":"Block","src":"3917:29:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":493,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"3934:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":494,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":488,"src":"3938:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3934:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":492,"id":496,"nodeType":"Return","src":"3927:12:4"}]},"documentation":{"id":484,"nodeType":"StructuredDocumentation","src":"3567:278:4","text":" @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."},"id":498,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"3859:3:4","nodeType":"FunctionDefinition","parameters":{"id":489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":486,"mutability":"mutable","name":"a","nameLocation":"3871:1:4","nodeType":"VariableDeclaration","scope":498,"src":"3863:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":485,"name":"uint256","nodeType":"ElementaryTypeName","src":"3863:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":488,"mutability":"mutable","name":"b","nameLocation":"3882:1:4","nodeType":"VariableDeclaration","scope":498,"src":"3874:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":487,"name":"uint256","nodeType":"ElementaryTypeName","src":"3874:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3862:22:4"},"returnParameters":{"id":492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":491,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":498,"src":"3908:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":490,"name":"uint256","nodeType":"ElementaryTypeName","src":"3908:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3907:9:4"},"scope":589,"src":"3850:96:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":512,"nodeType":"Block","src":"4466:29:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":508,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"4483:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":509,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"4487:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4483:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":507,"id":511,"nodeType":"Return","src":"4476:12:4"}]},"documentation":{"id":499,"nodeType":"StructuredDocumentation","src":"3952:442:4","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":513,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"4408:3:4","nodeType":"FunctionDefinition","parameters":{"id":504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":501,"mutability":"mutable","name":"a","nameLocation":"4420:1:4","nodeType":"VariableDeclaration","scope":513,"src":"4412:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":500,"name":"uint256","nodeType":"ElementaryTypeName","src":"4412:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":503,"mutability":"mutable","name":"b","nameLocation":"4431:1:4","nodeType":"VariableDeclaration","scope":513,"src":"4423:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":502,"name":"uint256","nodeType":"ElementaryTypeName","src":"4423:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4411:22:4"},"returnParameters":{"id":507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":506,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":513,"src":"4457:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":505,"name":"uint256","nodeType":"ElementaryTypeName","src":"4457:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4456:9:4"},"scope":589,"src":"4399:96:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":537,"nodeType":"Block","src":"5054:106:4","statements":[{"id":536,"nodeType":"UncheckedBlock","src":"5064:90:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":526,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"5096:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":527,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"5101:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5096:6:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":529,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"5104:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":525,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5088:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5088:29:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":531,"nodeType":"ExpressionStatement","src":"5088:29:4"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":532,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"5138:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":533,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"5142:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5138:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":524,"id":535,"nodeType":"Return","src":"5131:12:4"}]}]},"documentation":{"id":514,"nodeType":"StructuredDocumentation","src":"4501:453:4","text":" @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":538,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"4968:3:4","nodeType":"FunctionDefinition","parameters":{"id":521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":516,"mutability":"mutable","name":"a","nameLocation":"4980:1:4","nodeType":"VariableDeclaration","scope":538,"src":"4972:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":515,"name":"uint256","nodeType":"ElementaryTypeName","src":"4972:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":518,"mutability":"mutable","name":"b","nameLocation":"4991:1:4","nodeType":"VariableDeclaration","scope":538,"src":"4983:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":517,"name":"uint256","nodeType":"ElementaryTypeName","src":"4983:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":520,"mutability":"mutable","name":"errorMessage","nameLocation":"5008:12:4","nodeType":"VariableDeclaration","scope":538,"src":"4994:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":519,"name":"string","nodeType":"ElementaryTypeName","src":"4994:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4971:50:4"},"returnParameters":{"id":524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":523,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":538,"src":"5045:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":522,"name":"uint256","nodeType":"ElementaryTypeName","src":"5045:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5044:9:4"},"scope":589,"src":"4959:201:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":562,"nodeType":"Block","src":"5739:105:4","statements":[{"id":561,"nodeType":"UncheckedBlock","src":"5749:89:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":551,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"5781:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5785:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5781:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":554,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"5788:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":550,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5773:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5773:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":556,"nodeType":"ExpressionStatement","src":"5773:28:4"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":557,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"5822:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":558,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"5826:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5822:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":549,"id":560,"nodeType":"Return","src":"5815:12:4"}]}]},"documentation":{"id":539,"nodeType":"StructuredDocumentation","src":"5166:473:4","text":" @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":563,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"5653:3:4","nodeType":"FunctionDefinition","parameters":{"id":546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":541,"mutability":"mutable","name":"a","nameLocation":"5665:1:4","nodeType":"VariableDeclaration","scope":563,"src":"5657:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":540,"name":"uint256","nodeType":"ElementaryTypeName","src":"5657:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":543,"mutability":"mutable","name":"b","nameLocation":"5676:1:4","nodeType":"VariableDeclaration","scope":563,"src":"5668:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":542,"name":"uint256","nodeType":"ElementaryTypeName","src":"5668:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":545,"mutability":"mutable","name":"errorMessage","nameLocation":"5693:12:4","nodeType":"VariableDeclaration","scope":563,"src":"5679:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":544,"name":"string","nodeType":"ElementaryTypeName","src":"5679:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5656:50:4"},"returnParameters":{"id":549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":548,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":563,"src":"5730:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":547,"name":"uint256","nodeType":"ElementaryTypeName","src":"5730:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5729:9:4"},"scope":589,"src":"5644:200:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":587,"nodeType":"Block","src":"6585:105:4","statements":[{"id":586,"nodeType":"UncheckedBlock","src":"6595:89:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":576,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"6627:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6627:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":579,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"6634:12:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":575,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6619:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6619:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":581,"nodeType":"ExpressionStatement","src":"6619:28:4"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":582,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"6668:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":583,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"6672:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6668:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":574,"id":585,"nodeType":"Return","src":"6661:12:4"}]}]},"documentation":{"id":564,"nodeType":"StructuredDocumentation","src":"5850:635:4","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":588,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"6499:3:4","nodeType":"FunctionDefinition","parameters":{"id":571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":566,"mutability":"mutable","name":"a","nameLocation":"6511:1:4","nodeType":"VariableDeclaration","scope":588,"src":"6503:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":565,"name":"uint256","nodeType":"ElementaryTypeName","src":"6503:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":568,"mutability":"mutable","name":"b","nameLocation":"6522:1:4","nodeType":"VariableDeclaration","scope":588,"src":"6514:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":567,"name":"uint256","nodeType":"ElementaryTypeName","src":"6514:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":570,"mutability":"mutable","name":"errorMessage","nameLocation":"6539:12:4","nodeType":"VariableDeclaration","scope":588,"src":"6525:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":569,"name":"string","nodeType":"ElementaryTypeName","src":"6525:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6502:50:4"},"returnParameters":{"id":574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":573,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":588,"src":"6576:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":572,"name":"uint256","nodeType":"ElementaryTypeName","src":"6576:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6575:9:4"},"scope":589,"src":"6490:200:4","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":590,"src":"482:6210:4","usedErrors":[]}],"src":"107:6586:4"},"id":4},"contracts/Stacking.sol":{"ast":{"absolutePath":"contracts/Stacking.sol","exportedSymbols":{"Context":[277],"IERC20":[255],"Ownable":[112],"ReentrancyGuard":[177],"SafeMath":[589],"Stacking":[1262]},"id":1263,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":591,"literals":["solidity","^","0.8",".18"],"nodeType":"PragmaDirective","src":"32:24:5"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":592,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1263,"sourceUnit":113,"src":"58:52:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":593,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1263,"sourceUnit":256,"src":"111:56:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","file":"@openzeppelin/contracts/security/ReentrancyGuard.sol","id":594,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1263,"sourceUnit":178,"src":"168:62:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","file":"@openzeppelin/contracts/utils/math/SafeMath.sol","id":595,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1263,"sourceUnit":590,"src":"231:57:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":596,"name":"Ownable","nameLocations":["311:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":112,"src":"311:7:5"},"id":597,"nodeType":"InheritanceSpecifier","src":"311:7:5"},{"baseName":{"id":598,"name":"ReentrancyGuard","nameLocations":["320:15:5"],"nodeType":"IdentifierPath","referencedDeclaration":177,"src":"320:15:5"},"id":599,"nodeType":"InheritanceSpecifier","src":"320:15:5"}],"canonicalName":"Stacking","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1262,"linearizedBaseContracts":[1262,177,112,277],"name":"Stacking","nameLocation":"299:8:5","nodeType":"ContractDefinition","nodes":[{"global":false,"id":602,"libraryName":{"id":600,"name":"SafeMath","nameLocations":["346:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":589,"src":"346:8:5"},"nodeType":"UsingForDirective","src":"340:27:5","typeName":{"id":601,"name":"uint256","nodeType":"ElementaryTypeName","src":"359:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"canonicalName":"Stacking.Plan","id":607,"members":[{"constant":false,"id":604,"mutability":"mutable","name":"time","nameLocation":"397:4:5","nodeType":"VariableDeclaration","scope":607,"src":"389:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":603,"name":"uint256","nodeType":"ElementaryTypeName","src":"389:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":606,"mutability":"mutable","name":"percent","nameLocation":"415:7:5","nodeType":"VariableDeclaration","scope":607,"src":"407:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":605,"name":"uint256","nodeType":"ElementaryTypeName","src":"407:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Plan","nameLocation":"378:4:5","nodeType":"StructDefinition","scope":1262,"src":"371:56:5","visibility":"public"},{"canonicalName":"Stacking.Deposit","id":616,"members":[{"constant":false,"id":609,"mutability":"mutable","name":"plan","nameLocation":"458:4:5","nodeType":"VariableDeclaration","scope":616,"src":"452:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":608,"name":"uint8","nodeType":"ElementaryTypeName","src":"452:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":611,"mutability":"mutable","name":"amount","nameLocation":"476:6:5","nodeType":"VariableDeclaration","scope":616,"src":"468:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":610,"name":"uint256","nodeType":"ElementaryTypeName","src":"468:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":613,"mutability":"mutable","name":"start","nameLocation":"496:5:5","nodeType":"VariableDeclaration","scope":616,"src":"488:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":612,"name":"uint256","nodeType":"ElementaryTypeName","src":"488:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":615,"mutability":"mutable","name":"isTaken","nameLocation":"512:7:5","nodeType":"VariableDeclaration","scope":616,"src":"507:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":614,"name":"bool","nodeType":"ElementaryTypeName","src":"507:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Deposit","nameLocation":"438:7:5","nodeType":"StructDefinition","scope":1262,"src":"431:93:5","visibility":"public"},{"canonicalName":"Stacking.User","id":625,"members":[{"constant":false,"id":620,"mutability":"mutable","name":"deposits","nameLocation":"556:8:5","nodeType":"VariableDeclaration","scope":625,"src":"546:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Deposit_$616_storage_$dyn_storage_ptr","typeString":"struct Stacking.Deposit[]"},"typeName":{"baseType":{"id":618,"nodeType":"UserDefinedTypeName","pathNode":{"id":617,"name":"Deposit","nameLocations":["546:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":616,"src":"546:7:5"},"referencedDeclaration":616,"src":"546:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$616_storage_ptr","typeString":"struct Stacking.Deposit"}},"id":619,"nodeType":"ArrayTypeName","src":"546:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Deposit_$616_storage_$dyn_storage_ptr","typeString":"struct Stacking.Deposit[]"}},"visibility":"internal"},{"constant":false,"id":622,"mutability":"mutable","name":"seedLoss","nameLocation":"578:8:5","nodeType":"VariableDeclaration","scope":625,"src":"570:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":621,"name":"uint256","nodeType":"ElementaryTypeName","src":"570:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":624,"mutability":"mutable","name":"withdrawn","nameLocation":"600:9:5","nodeType":"VariableDeclaration","scope":625,"src":"592:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":623,"name":"uint256","nodeType":"ElementaryTypeName","src":"592:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"User","nameLocation":"535:4:5","nodeType":"StructDefinition","scope":1262,"src":"528:86:5","visibility":"public"},{"constant":true,"functionSelector":"ddbcb5fa","id":628,"mutability":"constant","name":"MIN_AMOUNT","nameLocation":"642:10:5","nodeType":"VariableDeclaration","scope":1262,"src":"618:41:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":626,"name":"uint256","nodeType":"ElementaryTypeName","src":"618:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31653135","id":627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"655:4:5","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000_by_1","typeString":"int_const 1000000000000000"},"value":"1e15"},"visibility":"public"},{"constant":true,"functionSelector":"29fc7bd8","id":631,"mutability":"constant","name":"PERCENT_DIVIDER","nameLocation":"702:15:5","nodeType":"VariableDeclaration","scope":1262,"src":"678:47:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":629,"name":"uint256","nodeType":"ElementaryTypeName","src":"678:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130303030","id":630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"720:5:5","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"visibility":"public"},{"constant":true,"functionSelector":"32bc298c","id":634,"mutability":"constant","name":"TIME_STEP","nameLocation":"753:9:5","nodeType":"VariableDeclaration","scope":1262,"src":"729:42:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":632,"name":"uint256","nodeType":"ElementaryTypeName","src":"729:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"765:6:5","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"},"value":"1"},"visibility":"public"},{"constant":true,"functionSelector":"16d3bfbb","id":639,"mutability":"constant","name":"ONE_YEAR","nameLocation":"799:8:5","nodeType":"VariableDeclaration","scope":1262,"src":"775:50:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":635,"name":"uint256","nodeType":"ElementaryTypeName","src":"775:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"333635","id":636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"810:3:5","typeDescriptions":{"typeIdentifier":"t_rational_365_by_1","typeString":"int_const 365"},"value":"365"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":637,"name":"TIME_STEP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"816:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"810:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":true,"functionSelector":"8fa04016","id":642,"mutability":"constant","name":"PENALTY_PERCENT","nameLocation":"853:15:5","nodeType":"VariableDeclaration","scope":1262,"src":"829:46:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":640,"name":"uint256","nodeType":"ElementaryTypeName","src":"829:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"36363630","id":641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"871:4:5","typeDescriptions":{"typeIdentifier":"t_rational_6660_by_1","typeString":"int_const 6660"},"value":"6660"},"visibility":"public"},{"constant":false,"functionSelector":"a87430ba","id":647,"mutability":"mutable","name":"users","nameLocation":"912:5:5","nodeType":"VariableDeclaration","scope":1262,"src":"880:37:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$625_storage_$","typeString":"mapping(address => struct Stacking.User)"},"typeName":{"id":646,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":643,"name":"address","nodeType":"ElementaryTypeName","src":"888:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"880:24:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$625_storage_$","typeString":"mapping(address => struct Stacking.User)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":645,"nodeType":"UserDefinedTypeName","pathNode":{"id":644,"name":"User","nameLocations":["899:4:5"],"nodeType":"IdentifierPath","referencedDeclaration":625,"src":"899:4:5"},"referencedDeclaration":625,"src":"899:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_User_$625_storage_ptr","typeString":"struct Stacking.User"}}},"visibility":"public"},{"constant":false,"functionSelector":"b1620616","id":651,"mutability":"mutable","name":"plans","nameLocation":"935:5:5","nodeType":"VariableDeclaration","scope":1262,"src":"921:19:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Plan_$607_storage_$dyn_storage","typeString":"struct Stacking.Plan[]"},"typeName":{"baseType":{"id":649,"nodeType":"UserDefinedTypeName","pathNode":{"id":648,"name":"Plan","nameLocations":["921:4:5"],"nodeType":"IdentifierPath","referencedDeclaration":607,"src":"921:4:5"},"referencedDeclaration":607,"src":"921:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_Plan_$607_storage_ptr","typeString":"struct Stacking.Plan"}},"id":650,"nodeType":"ArrayTypeName","src":"921:6:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Plan_$607_storage_$dyn_storage_ptr","typeString":"struct Stacking.Plan[]"}},"visibility":"public"},{"constant":false,"functionSelector":"fc0c546a","id":654,"mutability":"mutable","name":"token","nameLocation":"958:5:5","nodeType":"VariableDeclaration","scope":1262,"src":"944:19:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"},"typeName":{"id":653,"nodeType":"UserDefinedTypeName","pathNode":{"id":652,"name":"IERC20","nameLocations":["944:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":255,"src":"944:6:5"},"referencedDeclaration":255,"src":"944:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"functionSelector":"29eae70d","id":656,"mutability":"mutable","name":"totalStacked","nameLocation":"982:12:5","nodeType":"VariableDeclaration","scope":1262,"src":"967:27:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":655,"name":"uint256","nodeType":"ElementaryTypeName","src":"967:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"f02bde54","id":658,"mutability":"mutable","name":"adminTokens","nameLocation":"1013:11:5","nodeType":"VariableDeclaration","scope":1262,"src":"998:26:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":657,"name":"uint256","nodeType":"ElementaryTypeName","src":"998:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"89f98fe2","id":661,"mutability":"mutable","name":"usersDeposits","nameLocation":"1045:13:5","nodeType":"VariableDeclaration","scope":1262,"src":"1028:30:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[]"},"typeName":{"baseType":{"id":659,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":660,"nodeType":"ArrayTypeName","src":"1028:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"public"},{"anonymous":false,"eventSelector":"9fd565cd14c3c391679eb0cad12a14dcf7534e9d3462bcb9b67a098a9bbbc24a","id":665,"name":"Newbie","nameLocation":"1069:6:5","nodeType":"EventDefinition","parameters":{"id":664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":663,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"1084:4:5","nodeType":"VariableDeclaration","scope":665,"src":"1076:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":662,"name":"address","nodeType":"ElementaryTypeName","src":"1076:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1075:14:5"},"src":"1063:27:5"},{"anonymous":false,"eventSelector":"3a89eb89956dcf6537585a2372d4e629e18622cce06c2b4fee6301ae0840e241","id":673,"name":"NewDeposit","nameLocation":"1099:10:5","nodeType":"EventDefinition","parameters":{"id":672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":667,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1126:4:5","nodeType":"VariableDeclaration","scope":673,"src":"1110:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":666,"name":"address","nodeType":"ElementaryTypeName","src":"1110:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":669,"indexed":false,"mutability":"mutable","name":"plan","nameLocation":"1138:4:5","nodeType":"VariableDeclaration","scope":673,"src":"1132:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":668,"name":"uint8","nodeType":"ElementaryTypeName","src":"1132:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":671,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1152:6:5","nodeType":"VariableDeclaration","scope":673,"src":"1144:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":670,"name":"uint256","nodeType":"ElementaryTypeName","src":"1144:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1109:50:5"},"src":"1093:67:5"},{"anonymous":false,"eventSelector":"7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5","id":679,"name":"Withdrawn","nameLocation":"1169:9:5","nodeType":"EventDefinition","parameters":{"id":678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":675,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1195:4:5","nodeType":"VariableDeclaration","scope":679,"src":"1179:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":674,"name":"address","nodeType":"ElementaryTypeName","src":"1179:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":677,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1209:6:5","nodeType":"VariableDeclaration","scope":679,"src":"1201:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":676,"name":"uint256","nodeType":"ElementaryTypeName","src":"1201:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1178:38:5"},"src":"1163:54:5"},{"body":{"id":738,"nodeType":"Block","src":"1266:183:5","statements":[{"expression":{"id":690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":686,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":654,"src":"1272:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":688,"name":"_tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"1287:13:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":687,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"1280:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$255_$","typeString":"type(contract IERC20)"}},"id":689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1280:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"}},"src":"1272:29:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"}},"id":691,"nodeType":"ExpressionStatement","src":"1272:29:5"},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_rational_90_by_1","typeString":"int_const 90"},"id":698,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1324:1:5","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3330","id":697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1328:2:5","typeDescriptions":{"typeIdentifier":"t_rational_30_by_1","typeString":"int_const 30"},"value":"30"},"src":"1324:6:5","typeDescriptions":{"typeIdentifier":"t_rational_90_by_1","typeString":"int_const 90"}},{"hexValue":"3131","id":699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1332:2:5","typeDescriptions":{"typeIdentifier":"t_rational_11_by_1","typeString":"int_const 11"},"value":"11"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_90_by_1","typeString":"int_const 90"},{"typeIdentifier":"t_rational_11_by_1","typeString":"int_const 11"}],"id":695,"name":"Plan","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"1319:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Plan_$607_storage_ptr_$","typeString":"type(struct Stacking.Plan storage pointer)"}},"id":700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1319:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Plan_$607_memory_ptr","typeString":"struct Stacking.Plan memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Plan_$607_memory_ptr","typeString":"struct Stacking.Plan memory"}],"expression":{"id":692,"name":"plans","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"1308:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Plan_$607_storage_$dyn_storage","typeString":"struct Stacking.Plan storage ref[] storage ref"}},"id":694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1314:4:5","memberName":"push","nodeType":"MemberAccess","src":"1308:10:5","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Plan_$607_storage_$dyn_storage_ptr_$_t_struct$_Plan_$607_storage_$returns$__$attached_to$_t_array$_t_struct$_Plan_$607_storage_$dyn_storage_ptr_$","typeString":"function (struct Stacking.Plan storage ref[] storage pointer,struct Stacking.Plan storage ref)"}},"id":701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1308:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":702,"nodeType":"ExpressionStatement","src":"1308:28:5"},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_rational_180_by_1","typeString":"int_const 180"},"id":709,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"36","id":707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1358:1:5","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3330","id":708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1362:2:5","typeDescriptions":{"typeIdentifier":"t_rational_30_by_1","typeString":"int_const 30"},"value":"30"},"src":"1358:6:5","typeDescriptions":{"typeIdentifier":"t_rational_180_by_1","typeString":"int_const 180"}},{"hexValue":"3232","id":710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1366:2:5","typeDescriptions":{"typeIdentifier":"t_rational_22_by_1","typeString":"int_const 22"},"value":"22"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_180_by_1","typeString":"int_const 180"},{"typeIdentifier":"t_rational_22_by_1","typeString":"int_const 22"}],"id":706,"name":"Plan","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"1353:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Plan_$607_storage_ptr_$","typeString":"type(struct Stacking.Plan storage pointer)"}},"id":711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1353:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Plan_$607_memory_ptr","typeString":"struct Stacking.Plan memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Plan_$607_memory_ptr","typeString":"struct Stacking.Plan memory"}],"expression":{"id":703,"name":"plans","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"1342:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Plan_$607_storage_$dyn_storage","typeString":"struct Stacking.Plan storage ref[] storage ref"}},"id":705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1348:4:5","memberName":"push","nodeType":"MemberAccess","src":"1342:10:5","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Plan_$607_storage_$dyn_storage_ptr_$_t_struct$_Plan_$607_storage_$returns$__$attached_to$_t_array$_t_struct$_Plan_$607_storage_$dyn_storage_ptr_$","typeString":"function (struct Stacking.Plan storage ref[] storage pointer,struct Stacking.Plan storage ref)"}},"id":712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":713,"nodeType":"ExpressionStatement","src":"1342:28:5"},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_rational_360_by_1","typeString":"int_const 360"},"id":720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3132","id":718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1392:2:5","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"12"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3330","id":719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1397:2:5","typeDescriptions":{"typeIdentifier":"t_rational_30_by_1","typeString":"int_const 30"},"value":"30"},"src":"1392:7:5","typeDescriptions":{"typeIdentifier":"t_rational_360_by_1","typeString":"int_const 360"}},{"hexValue":"3636","id":721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1401:2:5","typeDescriptions":{"typeIdentifier":"t_rational_66_by_1","typeString":"int_const 66"},"value":"66"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_360_by_1","typeString":"int_const 360"},{"typeIdentifier":"t_rational_66_by_1","typeString":"int_const 66"}],"id":717,"name":"Plan","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"1387:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Plan_$607_storage_ptr_$","typeString":"type(struct Stacking.Plan storage pointer)"}},"id":722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1387:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Plan_$607_memory_ptr","typeString":"struct Stacking.Plan memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Plan_$607_memory_ptr","typeString":"struct Stacking.Plan memory"}],"expression":{"id":714,"name":"plans","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"1376:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Plan_$607_storage_$dyn_storage","typeString":"struct Stacking.Plan storage ref[] storage ref"}},"id":716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1382:4:5","memberName":"push","nodeType":"MemberAccess","src":"1376:10:5","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Plan_$607_storage_$dyn_storage_ptr_$_t_struct$_Plan_$607_storage_$returns$__$attached_to$_t_array$_t_struct$_Plan_$607_storage_$dyn_storage_ptr_$","typeString":"function (struct Stacking.Plan storage ref[] storage pointer,struct Stacking.Plan storage ref)"}},"id":723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1376:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":724,"nodeType":"ExpressionStatement","src":"1376:29:5"},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_rational_1800_by_1","typeString":"int_const 1800"},"id":733,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_60_by_1","typeString":"int_const 60"},"id":731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"35","id":729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1427:1:5","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3132","id":730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1430:2:5","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"12"},"src":"1427:5:5","typeDescriptions":{"typeIdentifier":"t_rational_60_by_1","typeString":"int_const 60"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3330","id":732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1435:2:5","typeDescriptions":{"typeIdentifier":"t_rational_30_by_1","typeString":"int_const 30"},"value":"30"},"src":"1427:10:5","typeDescriptions":{"typeIdentifier":"t_rational_1800_by_1","typeString":"int_const 1800"}},{"hexValue":"313230","id":734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1439:3:5","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1800_by_1","typeString":"int_const 1800"},{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"}],"id":728,"name":"Plan","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"1422:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Plan_$607_storage_ptr_$","typeString":"type(struct Stacking.Plan storage pointer)"}},"id":735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1422:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Plan_$607_memory_ptr","typeString":"struct Stacking.Plan memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Plan_$607_memory_ptr","typeString":"struct Stacking.Plan memory"}],"expression":{"id":725,"name":"plans","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"1411:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Plan_$607_storage_$dyn_storage","typeString":"struct Stacking.Plan storage ref[] storage ref"}},"id":727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1417:4:5","memberName":"push","nodeType":"MemberAccess","src":"1411:10:5","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Plan_$607_storage_$dyn_storage_ptr_$_t_struct$_Plan_$607_storage_$returns$__$attached_to$_t_array$_t_struct$_Plan_$607_storage_$dyn_storage_ptr_$","typeString":"function (struct Stacking.Plan storage ref[] storage pointer,struct Stacking.Plan storage ref)"}},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1411:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":737,"nodeType":"ExpressionStatement","src":"1411:33:5"}]},"id":739,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[],"id":684,"kind":"baseConstructorSpecifier","modifierName":{"id":683,"name":"Ownable","nameLocations":["1256:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":112,"src":"1256:7:5"},"nodeType":"ModifierInvocation","src":"1256:9:5"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":681,"mutability":"mutable","name":"_tokenAddress","nameLocation":"1241:13:5","nodeType":"VariableDeclaration","scope":739,"src":"1233:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":680,"name":"address","nodeType":"ElementaryTypeName","src":"1233:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1232:23:5"},"returnParameters":{"id":685,"nodeType":"ParameterList","parameters":[],"src":"1266:0:5"},"scope":1262,"src":"1221:228:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":824,"nodeType":"Block","src":"1519:481:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":749,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"1533:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":750,"name":"MIN_AMOUNT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"1544:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1533:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6d696e206c696d697420302e303031206973207265717569726564","id":752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1556:29:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_6971b753d423ad7dfd2382591dead197ea2029a59c447576b2f2841e6bb92de2","typeString":"literal_string \"min limit 0.001 is required\""},"value":"min limit 0.001 is required"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6971b753d423ad7dfd2382591dead197ea2029a59c447576b2f2841e6bb92de2","typeString":"literal_string \"min limit 0.001 is required\""}],"id":748,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1525:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1525:61:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":754,"nodeType":"ExpressionStatement","src":"1525:61:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":756,"name":"plan","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"1600:4:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":757,"name":"plans","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"1607:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Plan_$607_storage_$dyn_storage","typeString":"struct Stacking.Plan storage ref[] storage ref"}},"id":758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1613:6:5","memberName":"length","nodeType":"MemberAccess","src":"1607:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1600:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420706c616e","id":760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1621:14:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_e3a0ac30dcb59102a25d4dccd4376d92aa17cbd01ab4a90a0b15680c71aedb3e","typeString":"literal_string \"Invalid plan\""},"value":"Invalid plan"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e3a0ac30dcb59102a25d4dccd4376d92aa17cbd01ab4a90a0b15680c71aedb3e","typeString":"literal_string \"Invalid plan\""}],"id":755,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1592:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1592:44:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":762,"nodeType":"ExpressionStatement","src":"1592:44:5"},{"expression":{"arguments":[{"expression":{"id":766,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1661:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1665:6:5","memberName":"sender","nodeType":"MemberAccess","src":"1661:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":770,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1681:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_Stacking_$1262","typeString":"contract Stacking"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Stacking_$1262","typeString":"contract Stacking"}],"id":769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1673:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":768,"name":"address","nodeType":"ElementaryTypeName","src":"1673:7:5","typeDescriptions":{}}},"id":771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1673:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":772,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"1688:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":763,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":654,"src":"1642:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"}},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1648:12:5","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":254,"src":"1642:18:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1642:54:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":774,"nodeType":"ExpressionStatement","src":"1642:54:5"},{"assignments":[777],"declarations":[{"constant":false,"id":777,"mutability":"mutable","name":"user","nameLocation":"1716:4:5","nodeType":"VariableDeclaration","scope":824,"src":"1703:17:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_User_$625_storage_ptr","typeString":"struct Stacking.User"},"typeName":{"id":776,"nodeType":"UserDefinedTypeName","pathNode":{"id":775,"name":"User","nameLocations":["1703:4:5"],"nodeType":"IdentifierPath","referencedDeclaration":625,"src":"1703:4:5"},"referencedDeclaration":625,"src":"1703:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_User_$625_storage_ptr","typeString":"struct Stacking.User"}},"visibility":"internal"}],"id":782,"initialValue":{"baseExpression":{"id":778,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"1723:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$625_storage_$","typeString":"mapping(address => struct Stacking.User storage ref)"}},"id":781,"indexExpression":{"expression":{"id":779,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1729:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1733:6:5","memberName":"sender","nodeType":"MemberAccess","src":"1729:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1723:17:5","typeDescriptions":{"typeIdentifier":"t_struct$_User_$625_storage","typeString":"struct Stacking.User storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1703:37:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":783,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"1751:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_User_$625_storage_ptr","typeString":"struct Stacking.User storage pointer"}},"id":784,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1756:8:5","memberName":"deposits","nodeType":"MemberAccess","referencedDeclaration":620,"src":"1751:13:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Deposit_$616_storage_$dyn_storage","typeString":"struct Stacking.Deposit storage ref[] storage ref"}},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1765:6:5","memberName":"length","nodeType":"MemberAccess","src":"1751:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1775:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1751:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":794,"nodeType":"IfStatement","src":"1747:69:5","trueBody":{"id":793,"nodeType":"Block","src":"1778:38:5","statements":[{"eventCall":{"arguments":[{"expression":{"id":789,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1798:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1802:6:5","memberName":"sender","nodeType":"MemberAccess","src":"1798:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":788,"name":"Newbie","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"1791:6:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1791:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":792,"nodeType":"EmitStatement","src":"1786:23:5"}]}},{"expression":{"arguments":[{"arguments":[{"id":802,"name":"plan","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"1862:4:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":803,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"1868:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":804,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1877:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1883:9:5","memberName":"timestamp","nodeType":"MemberAccess","src":"1877:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1894:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":801,"name":"Deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"1854:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Deposit_$616_storage_ptr_$","typeString":"type(struct Stacking.Deposit storage pointer)"}},"id":807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1854:46:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$616_memory_ptr","typeString":"struct Stacking.Deposit memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Deposit_$616_memory_ptr","typeString":"struct Stacking.Deposit memory"}],"expression":{"expression":{"baseExpression":{"id":795,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"1822:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$625_storage_$","typeString":"mapping(address => struct Stacking.User storage ref)"}},"id":798,"indexExpression":{"expression":{"id":796,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1828:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1832:6:5","memberName":"sender","nodeType":"MemberAccess","src":"1828:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1822:17:5","typeDescriptions":{"typeIdentifier":"t_struct$_User_$625_storage","typeString":"struct Stacking.User storage ref"}},"id":799,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1840:8:5","memberName":"deposits","nodeType":"MemberAccess","referencedDeclaration":620,"src":"1822:26:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Deposit_$616_storage_$dyn_storage","typeString":"struct Stacking.Deposit storage ref[] storage ref"}},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1849:4:5","memberName":"push","nodeType":"MemberAccess","src":"1822:31:5","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Deposit_$616_storage_$dyn_storage_ptr_$_t_struct$_Deposit_$616_storage_$returns$__$attached_to$_t_array$_t_struct$_Deposit_$616_storage_$dyn_storage_ptr_$","typeString":"function (struct Stacking.Deposit storage ref[] storage pointer,struct Stacking.Deposit storage ref)"}},"id":808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1822:79:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":809,"nodeType":"ExpressionStatement","src":"1822:79:5"},{"expression":{"id":815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":810,"name":"totalStacked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"1907:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":813,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"1939:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":811,"name":"totalStacked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"1922:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1935:3:5","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":453,"src":"1922:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1922:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1907:40:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":816,"nodeType":"ExpressionStatement","src":"1907:40:5"},{"eventCall":{"arguments":[{"expression":{"id":818,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1969:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1973:6:5","memberName":"sender","nodeType":"MemberAccess","src":"1969:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":820,"name":"plan","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"1981:4:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":821,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"1987:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":817,"name":"NewDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"1958:10:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (address,uint8,uint256)"}},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1958:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":823,"nodeType":"EmitStatement","src":"1953:42:5"}]},"functionSelector":"f4d4c9d7","id":825,"implemented":true,"kind":"function","modifiers":[{"id":746,"kind":"modifierInvocation","modifierName":{"id":745,"name":"nonReentrant","nameLocations":["1506:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":142,"src":"1506:12:5"},"nodeType":"ModifierInvocation","src":"1506:12:5"}],"name":"deposit","nameLocation":"1462:7:5","nodeType":"FunctionDefinition","parameters":{"id":744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":741,"mutability":"mutable","name":"plan","nameLocation":"1476:4:5","nodeType":"VariableDeclaration","scope":825,"src":"1470:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":740,"name":"uint8","nodeType":"ElementaryTypeName","src":"1470:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":743,"mutability":"mutable","name":"amounts","nameLocation":"1490:7:5","nodeType":"VariableDeclaration","scope":825,"src":"1482:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":742,"name":"uint256","nodeType":"ElementaryTypeName","src":"1482:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1469:29:5"},"returnParameters":{"id":747,"nodeType":"ParameterList","parameters":[],"src":"1519:0:5"},"scope":1262,"src":"1453:547:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":971,"nodeType":"Block","src":"2061:983:5","statements":[{"assignments":[833],"declarations":[{"constant":false,"id":833,"mutability":"mutable","name":"negativeDividens","nameLocation":"2075:16:5","nodeType":"VariableDeclaration","scope":971,"src":"2067:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":832,"name":"uint256","nodeType":"ElementaryTypeName","src":"2067:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":839,"initialValue":{"arguments":[{"expression":{"id":835,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2119:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2123:6:5","memberName":"sender","nodeType":"MemberAccess","src":"2119:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":837,"name":"depositId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"2131:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":834,"name":"getUserNegativeDividends","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1095,"src":"2094:24:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2094:47:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2067:74:5"},{"assignments":[842],"declarations":[{"constant":false,"id":842,"mutability":"mutable","name":"user","nameLocation":"2161:4:5","nodeType":"VariableDeclaration","scope":971,"src":"2148:17:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_User_$625_storage_ptr","typeString":"struct Stacking.User"},"typeName":{"id":841,"nodeType":"UserDefinedTypeName","pathNode":{"id":840,"name":"User","nameLocations":["2148:4:5"],"nodeType":"IdentifierPath","referencedDeclaration":625,"src":"2148:4:5"},"referencedDeclaration":625,"src":"2148:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_User_$625_storage_ptr","typeString":"struct Stacking.User"}},"visibility":"internal"}],"id":847,"initialValue":{"baseExpression":{"id":843,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"2168:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$625_storage_$","typeString":"mapping(address => struct Stacking.User storage ref)"}},"id":846,"indexExpression":{"expression":{"id":844,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2174:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2178:6:5","memberName":"sender","nodeType":"MemberAccess","src":"2174:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2168:17:5","typeDescriptions":{"typeIdentifier":"t_struct$_User_$625_storage","typeString":"struct Stacking.User storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2148:37:5"},{"assignments":[850],"declarations":[{"constant":false,"id":850,"mutability":"mutable","name":"_deposit","nameLocation":"2207:8:5","nodeType":"VariableDeclaration","scope":971,"src":"2191:24:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$616_storage_ptr","typeString":"struct Stacking.Deposit"},"typeName":{"id":849,"nodeType":"UserDefinedTypeName","pathNode":{"id":848,"name":"Deposit","nameLocations":["2191:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":616,"src":"2191:7:5"},"referencedDeclaration":616,"src":"2191:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$616_storage_ptr","typeString":"struct Stacking.Deposit"}},"visibility":"internal"}],"id":855,"initialValue":{"baseExpression":{"expression":{"id":851,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"2218:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_User_$625_storage_ptr","typeString":"struct Stacking.User storage pointer"}},"id":852,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2223:8:5","memberName":"deposits","nodeType":"MemberAccess","referencedDeclaration":620,"src":"2218:13:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Deposit_$616_storage_$dyn_storage","typeString":"struct Stacking.Deposit storage ref[] storage ref"}},"id":854,"indexExpression":{"id":853,"name":"depositId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"2232:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2218:24:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$616_storage","typeString":"struct Stacking.Deposit storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2191:51:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":857,"name":"_deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"2256:8:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$616_storage_ptr","typeString":"struct Stacking.Deposit storage pointer"}},"id":858,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2265:7:5","memberName":"isTaken","nodeType":"MemberAccess","referencedDeclaration":615,"src":"2256:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"66616c7365","id":859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2276:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2256:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6465706f73697420697320616c72656164792074616b656e","id":861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2283:26:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d8e25932fad878d23188e7db9dad713b9765dca1f9eff1d41ceed07dbf63ef0","typeString":"literal_string \"deposit is already taken\""},"value":"deposit is already taken"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d8e25932fad878d23188e7db9dad713b9765dca1f9eff1d41ceed07dbf63ef0","typeString":"literal_string \"deposit is already taken\""}],"id":856,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2248:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2248:62:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":863,"nodeType":"ExpressionStatement","src":"2248:62:5"},{"assignments":[865],"declarations":[{"constant":false,"id":865,"mutability":"mutable","name":"totalAmount","nameLocation":"2325:11:5","nodeType":"VariableDeclaration","scope":971,"src":"2317:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":864,"name":"uint256","nodeType":"ElementaryTypeName","src":"2317:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":866,"nodeType":"VariableDeclarationStatement","src":"2317:19:5"},{"assignments":[868],"declarations":[{"constant":false,"id":868,"mutability":"mutable","name":"finish","nameLocation":"2350:6:5","nodeType":"VariableDeclaration","scope":971,"src":"2342:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":867,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":881,"initialValue":{"arguments":[{"arguments":[{"id":878,"name":"TIME_STEP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"2408:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"baseExpression":{"id":872,"name":"plans","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"2378:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Plan_$607_storage_$dyn_storage","typeString":"struct Stacking.Plan storage ref[] storage ref"}},"id":875,"indexExpression":{"expression":{"id":873,"name":"_deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"2384:8:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$616_storage_ptr","typeString":"struct Stacking.Deposit storage pointer"}},"id":874,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2393:4:5","memberName":"plan","nodeType":"MemberAccess","referencedDeclaration":609,"src":"2384:13:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2378:20:5","typeDescriptions":{"typeIdentifier":"t_struct$_Plan_$607_storage","typeString":"struct Stacking.Plan storage ref"}},"id":876,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2399:4:5","memberName":"time","nodeType":"MemberAccess","referencedDeclaration":604,"src":"2378:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2404:3:5","memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":483,"src":"2378:29:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2378:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":869,"name":"_deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"2359:8:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$616_storage_ptr","typeString":"struct Stacking.Deposit storage pointer"}},"id":870,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2368:5:5","memberName":"start","nodeType":"MemberAccess","referencedDeclaration":613,"src":"2359:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2374:3:5","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":453,"src":"2359:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2359:60:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2342:77:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":882,"name":"finish","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"2429:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":883,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2438:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2444:9:5","memberName":"timestamp","nodeType":"MemberAccess","src":"2438:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2429:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":931,"nodeType":"Block","src":"2639:125:5","statements":[{"expression":{"id":919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":913,"name":"totalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"2647:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":917,"name":"negativeDividens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"2681:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":914,"name":"_deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"2661:8:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$616_storage_ptr","typeString":"struct Stacking.Deposit storage pointer"}},"id":915,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2670:6:5","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":611,"src":"2661:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2677:3:5","memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":468,"src":"2661:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2661:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2647:51:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":920,"nodeType":"ExpressionStatement","src":"2647:51:5"},{"expression":{"id":929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":921,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"2706:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_User_$625_storage_ptr","typeString":"struct Stacking.User storage pointer"}},"id":923,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2711:8:5","memberName":"seedLoss","nodeType":"MemberAccess","referencedDeclaration":622,"src":"2706:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":927,"name":"negativeDividens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"2740:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":924,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"2722:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_User_$625_storage_ptr","typeString":"struct Stacking.User storage pointer"}},"id":925,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2727:8:5","memberName":"seedLoss","nodeType":"MemberAccess","referencedDeclaration":622,"src":"2722:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2736:3:5","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":453,"src":"2722:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2722:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2706:51:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":930,"nodeType":"ExpressionStatement","src":"2706:51:5"}]},"id":932,"nodeType":"IfStatement","src":"2425:339:5","trueBody":{"id":912,"nodeType":"Block","src":"2455:178:5","statements":[{"expression":{"id":899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":886,"name":"totalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"2463:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":896,"name":"PERCENT_DIVIDER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"2538:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":893,"name":"PENALTY_PERCENT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"2517:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":890,"name":"_deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"2497:8:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$616_storage_ptr","typeString":"struct Stacking.Deposit storage pointer"}},"id":891,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2506:6:5","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":611,"src":"2497:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2513:3:5","memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":483,"src":"2497:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2497:36:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2534:3:5","memberName":"div","nodeType":"MemberAccess","referencedDeclaration":498,"src":"2497:40:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2497:57:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":887,"name":"_deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"2477:8:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$616_storage_ptr","typeString":"struct Stacking.Deposit storage pointer"}},"id":888,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2486:6:5","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":611,"src":"2477:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2493:3:5","memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":468,"src":"2477:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2477:78:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2463:92:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":900,"nodeType":"ExpressionStatement","src":"2463:92:5"},{"expression":{"id":910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":901,"name":"adminTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"2563:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":907,"name":"totalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"2613:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":904,"name":"_deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"2593:8:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$616_storage_ptr","typeString":"struct Stacking.Deposit storage pointer"}},"id":905,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2602:6:5","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":611,"src":"2593:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2609:3:5","memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":468,"src":"2593:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2593:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":902,"name":"adminTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"2577:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2589:3:5","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":453,"src":"2577:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2577:49:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2563:63:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":911,"nodeType":"ExpressionStatement","src":"2563:63:5"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":934,"name":"getContractBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1109,"src":"2778:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2778:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":936,"name":"totalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"2802:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2778:35:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e7320617265206e6f7420617661696c61626c652c20706c6561736520636f6e746163742061646d696e","id":938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2815:48:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_bbb72649a92b2cfd28eceb736c457db5c7c27cf9b21564f749da66d117c3b026","typeString":"literal_string \"Tokens are not available, please contact admin\""},"value":"Tokens are not available, please contact admin"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bbb72649a92b2cfd28eceb736c457db5c7c27cf9b21564f749da66d117c3b026","typeString":"literal_string \"Tokens are not available, please contact admin\""}],"id":933,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2770:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2770:94:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":940,"nodeType":"ExpressionStatement","src":"2770:94:5"},{"expression":{"id":949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":941,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"2871:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_User_$625_storage_ptr","typeString":"struct Stacking.User storage pointer"}},"id":943,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2876:9:5","memberName":"withdrawn","nodeType":"MemberAccess","referencedDeclaration":624,"src":"2871:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":947,"name":"totalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"2907:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":944,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"2888:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_User_$625_storage_ptr","typeString":"struct Stacking.User storage pointer"}},"id":945,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2893:9:5","memberName":"withdrawn","nodeType":"MemberAccess","referencedDeclaration":624,"src":"2888:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2903:3:5","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":453,"src":"2888:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2888:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2871:48:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":950,"nodeType":"ExpressionStatement","src":"2871:48:5"},{"expression":{"arguments":[{"expression":{"id":954,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2940:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2944:6:5","memberName":"sender","nodeType":"MemberAccess","src":"2940:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":956,"name":"totalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"2952:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":951,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":654,"src":"2925:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"}},"id":953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2931:8:5","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":222,"src":"2925:14:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2925:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":958,"nodeType":"ExpressionStatement","src":"2925:39:5"},{"expression":{"id":963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":959,"name":"_deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"2970:8:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$616_storage_ptr","typeString":"struct Stacking.Deposit storage pointer"}},"id":961,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2979:7:5","memberName":"isTaken","nodeType":"MemberAccess","referencedDeclaration":615,"src":"2970:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2989:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2970:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":964,"nodeType":"ExpressionStatement","src":"2970:23:5"},{"eventCall":{"arguments":[{"expression":{"id":966,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3015:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3019:6:5","memberName":"sender","nodeType":"MemberAccess","src":"3015:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":968,"name":"totalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"3027:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":965,"name":"Withdrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"3005:9:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3005:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":970,"nodeType":"EmitStatement","src":"3000:39:5"}]},"functionSelector":"2e1a7d4d","id":972,"implemented":true,"kind":"function","modifiers":[{"id":830,"kind":"modifierInvocation","modifierName":{"id":829,"name":"nonReentrant","nameLocations":["2048:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":142,"src":"2048:12:5"},"nodeType":"ModifierInvocation","src":"2048:12:5"}],"name":"withdraw","nameLocation":"2013:8:5","nodeType":"FunctionDefinition","parameters":{"id":828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":827,"mutability":"mutable","name":"depositId","nameLocation":"2030:9:5","nodeType":"VariableDeclaration","scope":972,"src":"2022:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":826,"name":"uint256","nodeType":"ElementaryTypeName","src":"2022:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2021:19:5"},"returnParameters":{"id":831,"nodeType":"ParameterList","parameters":[],"src":"2061:0:5"},"scope":1262,"src":"2004:1040:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1003,"nodeType":"Block","src":"3119:178:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":982,"name":"adminTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"3133:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":983,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"3148:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3133:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41646d696e2063616e207769746864726177206c657373207468616e2061646d696e546f6b656e7320616d6f756e74","id":985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3157:49:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_f4e3a9b3b1fc30422312f1ccef7102bacc3a67e9bc871186eb199255d0acd3b0","typeString":"literal_string \"Admin can withdraw less than adminTokens amount\""},"value":"Admin can withdraw less than adminTokens amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f4e3a9b3b1fc30422312f1ccef7102bacc3a67e9bc871186eb199255d0acd3b0","typeString":"literal_string \"Admin can withdraw less than adminTokens amount\""}],"id":981,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3125:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3125:82:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":987,"nodeType":"ExpressionStatement","src":"3125:82:5"},{"expression":{"arguments":[{"expression":{"id":991,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3228:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3232:6:5","memberName":"sender","nodeType":"MemberAccess","src":"3228:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":993,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"3240:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":988,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":654,"src":"3213:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"}},"id":990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3219:8:5","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":222,"src":"3213:14:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3213:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":995,"nodeType":"ExpressionStatement","src":"3213:35:5"},{"expression":{"id":1001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":996,"name":"adminTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"3254:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":999,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":974,"src":"3284:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":997,"name":"adminTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"3268:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3280:3:5","memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":468,"src":"3268:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3268:24:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3254:38:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1002,"nodeType":"ExpressionStatement","src":"3254:38:5"}]},"functionSelector":"315a095d","id":1004,"implemented":true,"kind":"function","modifiers":[{"id":977,"kind":"modifierInvocation","modifierName":{"id":976,"name":"onlyOwner","nameLocations":["3096:9:5"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"3096:9:5"},"nodeType":"ModifierInvocation","src":"3096:9:5"},{"id":979,"kind":"modifierInvocation","modifierName":{"id":978,"name":"nonReentrant","nameLocations":["3106:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":142,"src":"3106:12:5"},"nodeType":"ModifierInvocation","src":"3106:12:5"}],"name":"withdrawTokens","nameLocation":"3057:14:5","nodeType":"FunctionDefinition","parameters":{"id":975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":974,"mutability":"mutable","name":"amounts","nameLocation":"3080:7:5","nodeType":"VariableDeclaration","scope":1004,"src":"3072:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":973,"name":"uint256","nodeType":"ElementaryTypeName","src":"3072:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3071:17:5"},"returnParameters":{"id":980,"nodeType":"ParameterList","parameters":[],"src":"3119:0:5"},"scope":1262,"src":"3048:249:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1094,"nodeType":"Block","src":"3405:523:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1014,"name":"depositId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"3419:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[{"id":1016,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"3455:11:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1015,"name":"getUserAmountOfDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"3431:23:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3431:36:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3419:48:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206465706f7369744964","id":1019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3469:19:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_b0d4b076e801a43306847486ec53423625901d5e41e754cee65ff10ec7efb530","typeString":"literal_string \"Invalid depositId\""},"value":"Invalid depositId"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b0d4b076e801a43306847486ec53423625901d5e41e754cee65ff10ec7efb530","typeString":"literal_string \"Invalid depositId\""}],"id":1013,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3411:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3411:78:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1021,"nodeType":"ExpressionStatement","src":"3411:78:5"},{"assignments":[1024],"declarations":[{"constant":false,"id":1024,"mutability":"mutable","name":"user","nameLocation":"3509:4:5","nodeType":"VariableDeclaration","scope":1094,"src":"3496:17:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_User_$625_storage_ptr","typeString":"struct Stacking.User"},"typeName":{"id":1023,"nodeType":"UserDefinedTypeName","pathNode":{"id":1022,"name":"User","nameLocations":["3496:4:5"],"nodeType":"IdentifierPath","referencedDeclaration":625,"src":"3496:4:5"},"referencedDeclaration":625,"src":"3496:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_User_$625_storage_ptr","typeString":"struct Stacking.User"}},"visibility":"internal"}],"id":1028,"initialValue":{"baseExpression":{"id":1025,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"3516:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$625_storage_$","typeString":"mapping(address => struct Stacking.User storage ref)"}},"id":1027,"indexExpression":{"id":1026,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"3522:11:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3516:18:5","typeDescriptions":{"typeIdentifier":"t_struct$_User_$625_storage","typeString":"struct Stacking.User storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3496:38:5"},{"assignments":[1031],"declarations":[{"constant":false,"id":1031,"mutability":"mutable","name":"_deposit","nameLocation":"3556:8:5","nodeType":"VariableDeclaration","scope":1094,"src":"3540:24:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$616_storage_ptr","typeString":"struct Stacking.Deposit"},"typeName":{"id":1030,"nodeType":"UserDefinedTypeName","pathNode":{"id":1029,"name":"Deposit","nameLocations":["3540:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":616,"src":"3540:7:5"},"referencedDeclaration":616,"src":"3540:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$616_storage_ptr","typeString":"struct Stacking.Deposit"}},"visibility":"internal"}],"id":1036,"initialValue":{"baseExpression":{"expression":{"id":1032,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1024,"src":"3567:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_User_$625_storage_ptr","typeString":"struct Stacking.User storage pointer"}},"id":1033,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3572:8:5","memberName":"deposits","nodeType":"MemberAccess","referencedDeclaration":620,"src":"3567:13:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Deposit_$616_storage_$dyn_storage","typeString":"struct Stacking.Deposit storage ref[] storage ref"}},"id":1035,"indexExpression":{"id":1034,"name":"depositId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"3581:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3567:24:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$616_storage","typeString":"struct Stacking.Deposit storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3540:51:5"},{"assignments":[1038],"declarations":[{"constant":false,"id":1038,"mutability":"mutable","name":"finish","nameLocation":"3606:6:5","nodeType":"VariableDeclaration","scope":1094,"src":"3598:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1037,"name":"uint256","nodeType":"ElementaryTypeName","src":"3598:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1051,"initialValue":{"arguments":[{"arguments":[{"id":1048,"name":"TIME_STEP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"3664:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"baseExpression":{"id":1042,"name":"plans","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"3634:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Plan_$607_storage_$dyn_storage","typeString":"struct Stacking.Plan storage ref[] storage ref"}},"id":1045,"indexExpression":{"expression":{"id":1043,"name":"_deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"3640:8:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$616_storage_ptr","typeString":"struct Stacking.Deposit storage pointer"}},"id":1044,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3649:4:5","memberName":"plan","nodeType":"MemberAccess","referencedDeclaration":609,"src":"3640:13:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3634:20:5","typeDescriptions":{"typeIdentifier":"t_struct$_Plan_$607_storage","typeString":"struct Stacking.Plan storage ref"}},"id":1046,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3655:4:5","memberName":"time","nodeType":"MemberAccess","referencedDeclaration":604,"src":"3634:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3660:3:5","memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":483,"src":"3634:29:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3634:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":1039,"name":"_deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"3615:8:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$616_storage_ptr","typeString":"struct Stacking.Deposit storage pointer"}},"id":1040,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3624:5:5","memberName":"start","nodeType":"MemberAccess","referencedDeclaration":613,"src":"3615:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3630:3:5","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":453,"src":"3615:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3615:60:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3598:77:5"},{"assignments":[1053],"declarations":[{"constant":false,"id":1053,"mutability":"mutable","name":"share","nameLocation":"3689:5:5","nodeType":"VariableDeclaration","scope":1094,"src":"3681:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1052,"name":"uint256","nodeType":"ElementaryTypeName","src":"3681:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1066,"initialValue":{"arguments":[{"id":1064,"name":"PERCENT_DIVIDER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"3751:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"baseExpression":{"id":1057,"name":"plans","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"3717:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Plan_$607_storage_$dyn_storage","typeString":"struct Stacking.Plan storage ref[] storage ref"}},"id":1060,"indexExpression":{"expression":{"id":1058,"name":"_deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"3723:8:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$616_storage_ptr","typeString":"struct Stacking.Deposit storage pointer"}},"id":1059,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3732:4:5","memberName":"plan","nodeType":"MemberAccess","referencedDeclaration":609,"src":"3723:13:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3717:20:5","typeDescriptions":{"typeIdentifier":"t_struct$_Plan_$607_storage","typeString":"struct Stacking.Plan storage ref"}},"id":1061,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3738:7:5","memberName":"percent","nodeType":"MemberAccess","referencedDeclaration":606,"src":"3717:28:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":1054,"name":"_deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"3697:8:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$616_storage_ptr","typeString":"struct Stacking.Deposit storage pointer"}},"id":1055,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3706:6:5","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":611,"src":"3697:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3713:3:5","memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":483,"src":"3697:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3697:49:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3747:3:5","memberName":"div","nodeType":"MemberAccess","referencedDeclaration":498,"src":"3697:53:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3697:70:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3681:86:5"},{"assignments":[1068],"declarations":[{"constant":false,"id":1068,"mutability":"mutable","name":"to","nameLocation":"3781:2:5","nodeType":"VariableDeclaration","scope":1094,"src":"3773:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1067,"name":"uint256","nodeType":"ElementaryTypeName","src":"3773:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1077,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1069,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3786:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3792:9:5","memberName":"timestamp","nodeType":"MemberAccess","src":"3786:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1071,"name":"finish","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"3804:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3786:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"expression":{"id":1074,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3822:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3828:9:5","memberName":"timestamp","nodeType":"MemberAccess","src":"3822:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3786:51:5","trueExpression":{"id":1073,"name":"finish","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"3813:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3773:64:5"},{"assignments":[1079],"declarations":[{"constant":false,"id":1079,"mutability":"mutable","name":"from","nameLocation":"3851:4:5","nodeType":"VariableDeclaration","scope":1094,"src":"3843:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1078,"name":"uint256","nodeType":"ElementaryTypeName","src":"3843:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1082,"initialValue":{"expression":{"id":1080,"name":"_deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"3858:8:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$616_storage_ptr","typeString":"struct Stacking.Deposit storage pointer"}},"id":1081,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3867:5:5","memberName":"start","nodeType":"MemberAccess","referencedDeclaration":613,"src":"3858:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3843:29:5"},{"expression":{"arguments":[{"id":1091,"name":"ONE_YEAR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"3914:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[{"id":1087,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"3903:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1085,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1068,"src":"3896:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3899:3:5","memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":468,"src":"3896:6:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3896:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1083,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"3886:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3892:3:5","memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":483,"src":"3886:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3886:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3910:3:5","memberName":"div","nodeType":"MemberAccess","referencedDeclaration":498,"src":"3886:27:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3886:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1012,"id":1093,"nodeType":"Return","src":"3879:44:5"}]},"functionSelector":"468cd2db","id":1095,"implemented":true,"kind":"function","modifiers":[],"name":"getUserNegativeDividends","nameLocation":"3310:24:5","nodeType":"FunctionDefinition","parameters":{"id":1009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1006,"mutability":"mutable","name":"userAddress","nameLocation":"3343:11:5","nodeType":"VariableDeclaration","scope":1095,"src":"3335:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1005,"name":"address","nodeType":"ElementaryTypeName","src":"3335:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1008,"mutability":"mutable","name":"depositId","nameLocation":"3364:9:5","nodeType":"VariableDeclaration","scope":1095,"src":"3356:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1007,"name":"uint256","nodeType":"ElementaryTypeName","src":"3356:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3334:40:5"},"returnParameters":{"id":1012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1011,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1095,"src":"3396:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1010,"name":"uint256","nodeType":"ElementaryTypeName","src":"3396:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3395:9:5"},"scope":1262,"src":"3301:627:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1108,"nodeType":"Block","src":"3992:48:5","statements":[{"expression":{"arguments":[{"arguments":[{"id":1104,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4029:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_Stacking_$1262","typeString":"contract Stacking"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Stacking_$1262","typeString":"contract Stacking"}],"id":1103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4021:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1102,"name":"address","nodeType":"ElementaryTypeName","src":"4021:7:5","typeDescriptions":{}}},"id":1105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4021:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1100,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":654,"src":"4005:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$255","typeString":"contract IERC20"}},"id":1101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4011:9:5","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":212,"src":"4005:15:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4005:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1099,"id":1107,"nodeType":"Return","src":"3998:37:5"}]},"functionSelector":"6f9fb98a","id":1109,"implemented":true,"kind":"function","modifiers":[],"name":"getContractBalance","nameLocation":"3941:18:5","nodeType":"FunctionDefinition","parameters":{"id":1096,"nodeType":"ParameterList","parameters":[],"src":"3959:2:5"},"returnParameters":{"id":1099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1098,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1109,"src":"3983:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1097,"name":"uint256","nodeType":"ElementaryTypeName","src":"3983:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3982:9:5"},"scope":1262,"src":"3932:108:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1132,"nodeType":"Block","src":"4129:69:5","statements":[{"expression":{"id":1123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1118,"name":"time","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1114,"src":"4135:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":1119,"name":"plans","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"4142:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Plan_$607_storage_$dyn_storage","typeString":"struct Stacking.Plan storage ref[] storage ref"}},"id":1121,"indexExpression":{"id":1120,"name":"plan","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"4148:4:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4142:11:5","typeDescriptions":{"typeIdentifier":"t_struct$_Plan_$607_storage","typeString":"struct Stacking.Plan storage ref"}},"id":1122,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4154:4:5","memberName":"time","nodeType":"MemberAccess","referencedDeclaration":604,"src":"4142:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4135:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1124,"nodeType":"ExpressionStatement","src":"4135:23:5"},{"expression":{"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1125,"name":"percent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"4164:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":1126,"name":"plans","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"4174:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Plan_$607_storage_$dyn_storage","typeString":"struct Stacking.Plan storage ref[] storage ref"}},"id":1128,"indexExpression":{"id":1127,"name":"plan","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"4180:4:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4174:11:5","typeDescriptions":{"typeIdentifier":"t_struct$_Plan_$607_storage","typeString":"struct Stacking.Plan storage ref"}},"id":1129,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4186:7:5","memberName":"percent","nodeType":"MemberAccess","referencedDeclaration":606,"src":"4174:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4164:29:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1131,"nodeType":"ExpressionStatement","src":"4164:29:5"}]},"functionSelector":"aecaa634","id":1133,"implemented":true,"kind":"function","modifiers":[],"name":"getPlanInfo","nameLocation":"4053:11:5","nodeType":"FunctionDefinition","parameters":{"id":1112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1111,"mutability":"mutable","name":"plan","nameLocation":"4071:4:5","nodeType":"VariableDeclaration","scope":1133,"src":"4065:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1110,"name":"uint8","nodeType":"ElementaryTypeName","src":"4065:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4064:12:5"},"returnParameters":{"id":1117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1114,"mutability":"mutable","name":"time","nameLocation":"4106:4:5","nodeType":"VariableDeclaration","scope":1133,"src":"4098:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1113,"name":"uint256","nodeType":"ElementaryTypeName","src":"4098:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1116,"mutability":"mutable","name":"percent","nameLocation":"4120:7:5","nodeType":"VariableDeclaration","scope":1133,"src":"4112:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1115,"name":"uint256","nodeType":"ElementaryTypeName","src":"4112:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4097:31:5"},"scope":1262,"src":"4044:154:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1146,"nodeType":"Block","src":"4286:52:5","statements":[{"expression":{"expression":{"expression":{"baseExpression":{"id":1140,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"4299:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$625_storage_$","typeString":"mapping(address => struct Stacking.User storage ref)"}},"id":1142,"indexExpression":{"id":1141,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"4305:11:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4299:18:5","typeDescriptions":{"typeIdentifier":"t_struct$_User_$625_storage","typeString":"struct Stacking.User storage ref"}},"id":1143,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4318:8:5","memberName":"deposits","nodeType":"MemberAccess","referencedDeclaration":620,"src":"4299:27:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Deposit_$616_storage_$dyn_storage","typeString":"struct Stacking.Deposit storage ref[] storage ref"}},"id":1144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4327:6:5","memberName":"length","nodeType":"MemberAccess","src":"4299:34:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1139,"id":1145,"nodeType":"Return","src":"4292:41:5"}]},"functionSelector":"a8aeb6c2","id":1147,"implemented":true,"kind":"function","modifiers":[],"name":"getUserAmountOfDeposits","nameLocation":"4211:23:5","nodeType":"FunctionDefinition","parameters":{"id":1136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1135,"mutability":"mutable","name":"userAddress","nameLocation":"4243:11:5","nodeType":"VariableDeclaration","scope":1147,"src":"4235:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1134,"name":"address","nodeType":"ElementaryTypeName","src":"4235:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4234:21:5"},"returnParameters":{"id":1139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1138,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1147,"src":"4277:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1137,"name":"uint256","nodeType":"ElementaryTypeName","src":"4277:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4276:9:5"},"scope":1262,"src":"4202:136:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1183,"nodeType":"Block","src":"4430:148:5","statements":[{"body":{"id":1181,"nodeType":"Block","src":"4501:73:5","statements":[{"expression":{"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1168,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"4509:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":1171,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"4529:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$625_storage_$","typeString":"mapping(address => struct Stacking.User storage ref)"}},"id":1173,"indexExpression":{"id":1172,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"4535:11:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4529:18:5","typeDescriptions":{"typeIdentifier":"t_struct$_User_$625_storage","typeString":"struct Stacking.User storage ref"}},"id":1174,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4548:8:5","memberName":"deposits","nodeType":"MemberAccess","referencedDeclaration":620,"src":"4529:27:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Deposit_$616_storage_$dyn_storage","typeString":"struct Stacking.Deposit storage ref[] storage ref"}},"id":1176,"indexExpression":{"id":1175,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"4557:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4529:30:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$616_storage","typeString":"struct Stacking.Deposit storage ref"}},"id":1177,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4560:6:5","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":611,"src":"4529:37:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1169,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1152,"src":"4518:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4525:3:5","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":453,"src":"4518:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4518:49:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4509:58:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1180,"nodeType":"ExpressionStatement","src":"4509:58:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1158,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"4456:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"expression":{"baseExpression":{"id":1159,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"4460:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$625_storage_$","typeString":"mapping(address => struct Stacking.User storage ref)"}},"id":1161,"indexExpression":{"id":1160,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"4466:11:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4460:18:5","typeDescriptions":{"typeIdentifier":"t_struct$_User_$625_storage","typeString":"struct Stacking.User storage ref"}},"id":1162,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4479:8:5","memberName":"deposits","nodeType":"MemberAccess","referencedDeclaration":620,"src":"4460:27:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Deposit_$616_storage_$dyn_storage","typeString":"struct Stacking.Deposit storage ref[] storage ref"}},"id":1163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4488:6:5","memberName":"length","nodeType":"MemberAccess","src":"4460:34:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4456:38:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1182,"initializationExpression":{"assignments":[1155],"declarations":[{"constant":false,"id":1155,"mutability":"mutable","name":"i","nameLocation":"4449:1:5","nodeType":"VariableDeclaration","scope":1182,"src":"4441:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1154,"name":"uint256","nodeType":"ElementaryTypeName","src":"4441:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1157,"initialValue":{"hexValue":"30","id":1156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4453:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4441:13:5"},"loopExpression":{"expression":{"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4496:3:5","subExpression":{"id":1165,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"4496:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1167,"nodeType":"ExpressionStatement","src":"4496:3:5"},"nodeType":"ForStatement","src":"4436:138:5"}]},"functionSelector":"7e3abeea","id":1184,"implemented":true,"kind":"function","modifiers":[],"name":"getUserTotalDeposits","nameLocation":"4351:20:5","nodeType":"FunctionDefinition","parameters":{"id":1150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1149,"mutability":"mutable","name":"userAddress","nameLocation":"4380:11:5","nodeType":"VariableDeclaration","scope":1184,"src":"4372:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1148,"name":"address","nodeType":"ElementaryTypeName","src":"4372:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4371:21:5"},"returnParameters":{"id":1153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1152,"mutability":"mutable","name":"amount","nameLocation":"4422:6:5","nodeType":"VariableDeclaration","scope":1184,"src":"4414:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1151,"name":"uint256","nodeType":"ElementaryTypeName","src":"4414:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4413:16:5"},"scope":1262,"src":"4342:236:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1260,"nodeType":"Block","src":"4773:333:5","statements":[{"assignments":[1205],"declarations":[{"constant":false,"id":1205,"mutability":"mutable","name":"user","nameLocation":"4792:4:5","nodeType":"VariableDeclaration","scope":1260,"src":"4779:17:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_User_$625_storage_ptr","typeString":"struct Stacking.User"},"typeName":{"id":1204,"nodeType":"UserDefinedTypeName","pathNode":{"id":1203,"name":"User","nameLocations":["4779:4:5"],"nodeType":"IdentifierPath","referencedDeclaration":625,"src":"4779:4:5"},"referencedDeclaration":625,"src":"4779:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_User_$625_storage_ptr","typeString":"struct Stacking.User"}},"visibility":"internal"}],"id":1209,"initialValue":{"baseExpression":{"id":1206,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"4799:5:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$625_storage_$","typeString":"mapping(address => struct Stacking.User storage ref)"}},"id":1208,"indexExpression":{"id":1207,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1186,"src":"4805:11:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4799:18:5","typeDescriptions":{"typeIdentifier":"t_struct$_User_$625_storage","typeString":"struct Stacking.User storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4779:38:5"},{"assignments":[1212],"declarations":[{"constant":false,"id":1212,"mutability":"mutable","name":"_deposit","nameLocation":"4839:8:5","nodeType":"VariableDeclaration","scope":1260,"src":"4823:24:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$616_storage_ptr","typeString":"struct Stacking.Deposit"},"typeName":{"id":1211,"nodeType":"UserDefinedTypeName","pathNode":{"id":1210,"name":"Deposit","nameLocations":["4823:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":616,"src":"4823:7:5"},"referencedDeclaration":616,"src":"4823:7:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$616_storage_ptr","typeString":"struct Stacking.Deposit"}},"visibility":"internal"}],"id":1217,"initialValue":{"baseExpression":{"expression":{"id":1213,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"4850:4:5","typeDescriptions":{"typeIdentifier":"t_struct$_User_$625_storage_ptr","typeString":"struct Stacking.User storage pointer"}},"id":1214,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4855:8:5","memberName":"deposits","nodeType":"MemberAccess","referencedDeclaration":620,"src":"4850:13:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Deposit_$616_storage_$dyn_storage","typeString":"struct Stacking.Deposit storage ref[] storage ref"}},"id":1216,"indexExpression":{"id":1215,"name":"depositId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"4864:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4850:24:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$616_storage","typeString":"struct Stacking.Deposit storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4823:51:5"},{"expression":{"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1218,"name":"plan","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"4881:4:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1219,"name":"_deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"4888:8:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$616_storage_ptr","typeString":"struct Stacking.Deposit storage pointer"}},"id":1220,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4897:4:5","memberName":"plan","nodeType":"MemberAccess","referencedDeclaration":609,"src":"4888:13:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4881:20:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1222,"nodeType":"ExpressionStatement","src":"4881:20:5"},{"expression":{"id":1228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1223,"name":"percent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"4907:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":1224,"name":"plans","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"4917:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Plan_$607_storage_$dyn_storage","typeString":"struct Stacking.Plan storage ref[] storage ref"}},"id":1226,"indexExpression":{"id":1225,"name":"plan","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"4923:4:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4917:11:5","typeDescriptions":{"typeIdentifier":"t_struct$_Plan_$607_storage","typeString":"struct Stacking.Plan storage ref"}},"id":1227,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4929:7:5","memberName":"percent","nodeType":"MemberAccess","referencedDeclaration":606,"src":"4917:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4907:29:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1229,"nodeType":"ExpressionStatement","src":"4907:29:5"},{"expression":{"id":1233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1230,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1195,"src":"4942:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1231,"name":"_deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"4951:8:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$616_storage_ptr","typeString":"struct Stacking.Deposit storage pointer"}},"id":1232,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4960:6:5","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":611,"src":"4951:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4942:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1234,"nodeType":"ExpressionStatement","src":"4942:24:5"},{"expression":{"id":1238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1235,"name":"start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"4972:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1236,"name":"_deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"4980:8:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$616_storage_ptr","typeString":"struct Stacking.Deposit storage pointer"}},"id":1237,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4989:5:5","memberName":"start","nodeType":"MemberAccess","referencedDeclaration":613,"src":"4980:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4972:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1239,"nodeType":"ExpressionStatement","src":"4972:22:5"},{"expression":{"id":1253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1240,"name":"finish","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1199,"src":"5000:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":1250,"name":"TIME_STEP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"5058:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"baseExpression":{"id":1244,"name":"plans","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"5028:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Plan_$607_storage_$dyn_storage","typeString":"struct Stacking.Plan storage ref[] storage ref"}},"id":1247,"indexExpression":{"expression":{"id":1245,"name":"_deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"5034:8:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$616_storage_ptr","typeString":"struct Stacking.Deposit storage pointer"}},"id":1246,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5043:4:5","memberName":"plan","nodeType":"MemberAccess","referencedDeclaration":609,"src":"5034:13:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5028:20:5","typeDescriptions":{"typeIdentifier":"t_struct$_Plan_$607_storage","typeString":"struct Stacking.Plan storage ref"}},"id":1248,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5049:4:5","memberName":"time","nodeType":"MemberAccess","referencedDeclaration":604,"src":"5028:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5054:3:5","memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":483,"src":"5028:29:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5028:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":1241,"name":"_deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"5009:8:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$616_storage_ptr","typeString":"struct Stacking.Deposit storage pointer"}},"id":1242,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5018:5:5","memberName":"start","nodeType":"MemberAccess","referencedDeclaration":613,"src":"5009:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5024:3:5","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":453,"src":"5009:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5009:60:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5000:69:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1254,"nodeType":"ExpressionStatement","src":"5000:69:5"},{"expression":{"id":1258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1255,"name":"isTaken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"5075:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1256,"name":"_deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"5085:8:5","typeDescriptions":{"typeIdentifier":"t_struct$_Deposit_$616_storage_ptr","typeString":"struct Stacking.Deposit storage pointer"}},"id":1257,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5094:7:5","memberName":"isTaken","nodeType":"MemberAccess","referencedDeclaration":615,"src":"5085:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5075:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1259,"nodeType":"ExpressionStatement","src":"5075:26:5"}]},"functionSelector":"c0806b03","id":1261,"implemented":true,"kind":"function","modifiers":[],"name":"getUserDepositInfo","nameLocation":"4591:18:5","nodeType":"FunctionDefinition","parameters":{"id":1189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1186,"mutability":"mutable","name":"userAddress","nameLocation":"4623:11:5","nodeType":"VariableDeclaration","scope":1261,"src":"4615:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1185,"name":"address","nodeType":"ElementaryTypeName","src":"4615:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1188,"mutability":"mutable","name":"depositId","nameLocation":"4648:9:5","nodeType":"VariableDeclaration","scope":1261,"src":"4640:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1187,"name":"uint256","nodeType":"ElementaryTypeName","src":"4640:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4609:52:5"},"returnParameters":{"id":1202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1191,"mutability":"mutable","name":"plan","nameLocation":"4689:4:5","nodeType":"VariableDeclaration","scope":1261,"src":"4683:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1190,"name":"uint8","nodeType":"ElementaryTypeName","src":"4683:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1193,"mutability":"mutable","name":"percent","nameLocation":"4703:7:5","nodeType":"VariableDeclaration","scope":1261,"src":"4695:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1192,"name":"uint256","nodeType":"ElementaryTypeName","src":"4695:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1195,"mutability":"mutable","name":"amount","nameLocation":"4720:6:5","nodeType":"VariableDeclaration","scope":1261,"src":"4712:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1194,"name":"uint256","nodeType":"ElementaryTypeName","src":"4712:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1197,"mutability":"mutable","name":"start","nameLocation":"4736:5:5","nodeType":"VariableDeclaration","scope":1261,"src":"4728:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1196,"name":"uint256","nodeType":"ElementaryTypeName","src":"4728:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1199,"mutability":"mutable","name":"finish","nameLocation":"4751:6:5","nodeType":"VariableDeclaration","scope":1261,"src":"4743:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1198,"name":"uint256","nodeType":"ElementaryTypeName","src":"4743:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1201,"mutability":"mutable","name":"isTaken","nameLocation":"4764:7:5","nodeType":"VariableDeclaration","scope":1261,"src":"4759:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1200,"name":"bool","nodeType":"ElementaryTypeName","src":"4759:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4682:90:5"},"scope":1262,"src":"4582:524:5","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":1263,"src":"290:4818:5","usedErrors":[]}],"src":"32:5077:5"},"id":5}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"SafeMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220747d20e7b3ab292586e70182781bd760ee8c0a42ba19e139efc4b47692d53d4264736f6c63430008120033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0x7D20E7B3AB292586E70182781BD760EE8C0A42BA19 0xE1 CODECOPY 0xEF 0xC4 0xB4 PUSH23 0x92D53D4264736F6C634300081200330000000000000000 ","sourceMap":"482:6210:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220747d20e7b3ab292586e70182781bd760ee8c0a42ba19e139efc4b47692d53d4264736f6c63430008120033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0x7D20E7B3AB292586E70182781BD760EE8C0A42BA19 0xE1 CODECOPY 0xEF 0xC4 0xB4 PUSH23 0x92D53D4264736F6C634300081200330000000000000000 ","sourceMap":"482:6210:4:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]}},\"version\":1}"}},"contracts/Stacking.sol":{"Stacking":{"abi":[{"inputs":[{"internalType":"address","name":"_tokenAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint8","name":"plan","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"NewDeposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"user","type":"address"}],"name":"Newbie","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[],"name":"MIN_AMOUNT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ONE_YEAR","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PENALTY_PERCENT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PERCENT_DIVIDER","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TIME_STEP","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"adminTokens","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint8","name":"plan","type":"uint8"},{"internalType":"uint256","name":"amounts","type":"uint256"}],"name":"deposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getContractBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint8","name":"plan","type":"uint8"}],"name":"getPlanInfo","outputs":[{"internalType":"uint256","name":"time","type":"uint256"},{"internalType":"uint256","name":"percent","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"}],"name":"getUserAmountOfDeposits","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"},{"internalType":"uint256","name":"depositId","type":"uint256"}],"name":"getUserDepositInfo","outputs":[{"internalType":"uint8","name":"plan","type":"uint8"},{"internalType":"uint256","name":"percent","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"start","type":"uint256"},{"internalType":"uint256","name":"finish","type":"uint256"},{"internalType":"bool","name":"isTaken","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"},{"internalType":"uint256","name":"depositId","type":"uint256"}],"name":"getUserNegativeDividends","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"}],"name":"getUserTotalDeposits","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"plans","outputs":[{"internalType":"uint256","name":"time","type":"uint256"},{"internalType":"uint256","name":"percent","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"token","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalStacked","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"users","outputs":[{"internalType":"uint256","name":"seedLoss","type":"uint256"},{"internalType":"uint256","name":"withdrawn","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"usersDeposits","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"depositId","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amounts","type":"uint256"}],"name":"withdrawTokens","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_131":{"entryPoint":null,"id":131,"parameterSlots":0,"returnSlots":0},"@_23":{"entryPoint":null,"id":23,"parameterSlots":0,"returnSlots":0},"@_739":{"entryPoint":null,"id":739,"parameterSlots":1,"returnSlots":0},"@_msgSender_267":{"entryPoint":520,"id":267,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_111":{"entryPoint":528,"id":111,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":807,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":830,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":761,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":729,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":724,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":781,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1199:6","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:6","statements":[{"nodeType":"YulAssignment","src":"57:19:6","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:6","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:6"},"nodeType":"YulFunctionCall","src":"67:9:6"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:6"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:6","type":""}],"src":"7:75:6"},{"body":{"nodeType":"YulBlock","src":"177:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:6"},"nodeType":"YulFunctionCall","src":"187:12:6"},"nodeType":"YulExpressionStatement","src":"187:12:6"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:6"},{"body":{"nodeType":"YulBlock","src":"300:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:6"},"nodeType":"YulFunctionCall","src":"310:12:6"},"nodeType":"YulExpressionStatement","src":"310:12:6"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:6"},{"body":{"nodeType":"YulBlock","src":"379:81:6","statements":[{"nodeType":"YulAssignment","src":"389:65:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:6","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:6"},"nodeType":"YulFunctionCall","src":"400:54:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:6"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:6","type":""}],"src":"334:126:6"},{"body":{"nodeType":"YulBlock","src":"511:51:6","statements":[{"nodeType":"YulAssignment","src":"521:35:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:6"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:6"},"nodeType":"YulFunctionCall","src":"532:24:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:6"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:6","type":""}],"src":"466:96:6"},{"body":{"nodeType":"YulBlock","src":"611:79:6","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:6"},"nodeType":"YulFunctionCall","src":"670:12:6"},"nodeType":"YulExpressionStatement","src":"670:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:6"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:6"},"nodeType":"YulFunctionCall","src":"641:24:6"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:6"},"nodeType":"YulFunctionCall","src":"631:35:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:6"},"nodeType":"YulFunctionCall","src":"624:43:6"},"nodeType":"YulIf","src":"621:63:6"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:6","type":""}],"src":"568:122:6"},{"body":{"nodeType":"YulBlock","src":"759:80:6","statements":[{"nodeType":"YulAssignment","src":"769:22:6","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:6"},"nodeType":"YulFunctionCall","src":"778:13:6"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:6"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:6"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:6"},"nodeType":"YulFunctionCall","src":"800:33:6"},"nodeType":"YulExpressionStatement","src":"800:33:6"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:6","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:6","type":""}],"src":"696:143:6"},{"body":{"nodeType":"YulBlock","src":"922:274:6","statements":[{"body":{"nodeType":"YulBlock","src":"968:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"970:77:6"},"nodeType":"YulFunctionCall","src":"970:79:6"},"nodeType":"YulExpressionStatement","src":"970:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"943:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"952:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"939:3:6"},"nodeType":"YulFunctionCall","src":"939:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"964:2:6","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"935:3:6"},"nodeType":"YulFunctionCall","src":"935:32:6"},"nodeType":"YulIf","src":"932:119:6"},{"nodeType":"YulBlock","src":"1061:128:6","statements":[{"nodeType":"YulVariableDeclaration","src":"1076:15:6","value":{"kind":"number","nodeType":"YulLiteral","src":"1090:1:6","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1080:6:6","type":""}]},{"nodeType":"YulAssignment","src":"1105:74:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1151:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"1162:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1147:3:6"},"nodeType":"YulFunctionCall","src":"1147:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1171:7:6"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1115:31:6"},"nodeType":"YulFunctionCall","src":"1115:64:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1105:6:6"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"892:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"903:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"915:6:6","type":""}],"src":"845:351:6"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":6,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2391 CODESIZE SUB DUP1 PUSH3 0x2391 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x33E JUMP JUMPDEST PUSH3 0x57 PUSH3 0x4B PUSH3 0x208 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x210 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5A DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xB DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP PUSH1 0x3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x16 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP PUSH1 0x3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x168 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x42 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP PUSH1 0x3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x708 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x78 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP POP PUSH3 0x370 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x306 DUP3 PUSH3 0x2D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x318 DUP2 PUSH3 0x2F9 JUMP JUMPDEST DUP2 EQ PUSH3 0x324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x338 DUP2 PUSH3 0x30D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x357 JUMPI PUSH3 0x356 PUSH3 0x2D4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x367 DUP5 DUP3 DUP6 ADD PUSH3 0x327 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2011 DUP1 PUSH3 0x380 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xC0806B03 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xC0806B03 EQ PUSH2 0x3B9 JUMPI DUP1 PUSH4 0xDDBCB5FA EQ PUSH2 0x3EE JUMPI DUP1 PUSH4 0xF02BDE54 EQ PUSH2 0x40C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x42A JUMPI DUP1 PUSH4 0xF4D4C9D7 EQ PUSH2 0x446 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x462 JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x8FA04016 EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0xA87430BA EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0xA8AEB6C2 EQ PUSH2 0x327 JUMPI DUP1 PUSH4 0xAECAA634 EQ PUSH2 0x357 JUMPI DUP1 PUSH4 0xB1620616 EQ PUSH2 0x388 JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x32BC298C GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x32BC298C EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x468CD2DB EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0x6F9FB98A EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x7E3ABEEA EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x89F98FE2 EQ PUSH2 0x28A JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x16D3BFBB EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x29EAE70D EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x29FC7BD8 EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x315A095D EQ PUSH2 0x1C8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15A PUSH2 0x480 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x1576 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH2 0x494 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x1576 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x196 PUSH2 0x49A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x1576 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C1 SWAP2 SWAP1 PUSH2 0x15C2 JUMP JUMPDEST PUSH2 0x4A0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0x15C2 JUMP JUMPDEST PUSH2 0x824 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EC PUSH2 0x940 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x1576 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x217 SWAP2 SWAP1 PUSH2 0x164D JUMP JUMPDEST PUSH2 0x947 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x1576 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23A PUSH2 0xB40 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x247 SWAP2 SWAP1 PUSH2 0x1576 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x258 PUSH2 0xBE3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x274 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x168D JUMP JUMPDEST PUSH2 0xBF7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x281 SWAP2 SWAP1 PUSH2 0x1576 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29F SWAP2 SWAP1 PUSH2 0x15C2 JUMP JUMPDEST PUSH2 0xCDF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B1 SWAP2 SWAP1 PUSH2 0x1576 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C2 PUSH2 0xD03 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CF SWAP2 SWAP1 PUSH2 0x16C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E0 PUSH2 0xD2C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2ED SWAP2 SWAP1 PUSH2 0x1576 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x310 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30B SWAP2 SWAP1 PUSH2 0x168D JUMP JUMPDEST PUSH2 0xD32 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31E SWAP3 SWAP2 SWAP1 PUSH2 0x16E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x341 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33C SWAP2 SWAP1 PUSH2 0x168D JUMP JUMPDEST PUSH2 0xD56 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34E SWAP2 SWAP1 PUSH2 0x1576 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x371 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36C SWAP2 SWAP1 PUSH2 0x1746 JUMP JUMPDEST PUSH2 0xDA5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37F SWAP3 SWAP2 SWAP1 PUSH2 0x16E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39D SWAP2 SWAP1 PUSH2 0x15C2 JUMP JUMPDEST PUSH2 0xE03 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B0 SWAP3 SWAP2 SWAP1 PUSH2 0x16E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CE SWAP2 SWAP1 PUSH2 0x164D JUMP JUMPDEST PUSH2 0xE37 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E5 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x179D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F6 PUSH2 0xF7F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x403 SWAP2 SWAP1 PUSH2 0x1576 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x414 PUSH2 0xF8A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x421 SWAP2 SWAP1 PUSH2 0x1576 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x444 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43F SWAP2 SWAP1 PUSH2 0x168D JUMP JUMPDEST PUSH2 0xF90 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x460 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45B SWAP2 SWAP1 PUSH2 0x17FE JUMP JUMPDEST PUSH2 0x1013 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x46A PUSH2 0x133D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x477 SWAP2 SWAP1 PUSH2 0x189D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x15180 PUSH2 0x16D PUSH2 0x491 SWAP2 SWAP1 PUSH2 0x18E7 JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH2 0x4A8 PUSH2 0x1363 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B4 CALLER DUP4 PUSH2 0x947 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x511 JUMPI PUSH2 0x510 PUSH2 0x1929 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 ISZERO ISZERO DUP2 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x579 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x570 SWAP1 PUSH2 0x19B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5E1 PUSH2 0x5CE PUSH3 0x15180 PUSH1 0x3 DUP7 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x5AE JUMPI PUSH2 0x5AD PUSH2 0x1929 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD PUSH2 0x13B2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x2 ADD SLOAD PUSH2 0x13C8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP TIMESTAMP DUP2 GT ISZERO PUSH2 0x666 JUMPI PUSH2 0x62E PUSH2 0x61B PUSH2 0x2710 PUSH2 0x60D PUSH2 0x1A04 DUP8 PUSH1 0x1 ADD SLOAD PUSH2 0x13B2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x13DE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0x13F4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH2 0x65B PUSH2 0x64A DUP4 DUP6 PUSH1 0x1 ADD SLOAD PUSH2 0x13F4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x13C8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH2 0x69F JUMP JUMPDEST PUSH2 0x67D DUP6 DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0x13F4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH2 0x696 DUP6 DUP6 PUSH1 0x1 ADD SLOAD PUSH2 0x13C8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH2 0x6A8 PUSH2 0xB40 JUMP JUMPDEST LT ISZERO PUSH2 0x6E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E0 SWAP1 PUSH2 0x1A47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x700 DUP3 DUP6 PUSH1 0x2 ADD SLOAD PUSH2 0x13C8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x765 SWAP3 SWAP2 SWAP1 PUSH2 0x1A67 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x784 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7A8 SWAP2 SWAP1 PUSH2 0x1ABC JUMP JUMPDEST POP PUSH1 0x1 DUP4 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x80C SWAP2 SWAP1 PUSH2 0x1576 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP PUSH2 0x821 PUSH2 0x140A JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x82C PUSH2 0x1413 JUMP JUMPDEST PUSH2 0x834 PUSH2 0x1363 JUMP JUMPDEST DUP1 PUSH1 0x6 SLOAD LT ISZERO PUSH2 0x879 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x870 SWAP1 PUSH2 0x1B5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D6 SWAP3 SWAP2 SWAP1 PUSH2 0x1A67 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8F5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x919 SWAP2 SWAP1 PUSH2 0x1ABC JUMP JUMPDEST POP PUSH2 0x92F DUP2 PUSH1 0x6 SLOAD PUSH2 0x13F4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH2 0x93D PUSH2 0x140A JUMP JUMPDEST POP JUMP JUMPDEST PUSH3 0x15180 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x952 DUP4 PUSH2 0xD56 JUMP JUMPDEST DUP3 LT PUSH2 0x993 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x98A SWAP1 PUSH2 0x1BC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x9EE JUMPI PUSH2 0x9ED PUSH2 0x1929 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH2 0xA65 PUSH2 0xA52 PUSH3 0x15180 PUSH1 0x3 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0xA32 JUMPI PUSH2 0xA31 PUSH2 0x1929 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD PUSH2 0x13B2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x2 ADD SLOAD PUSH2 0x13C8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xACD PUSH2 0x2710 PUSH2 0xABF PUSH1 0x3 DUP7 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0xA9A JUMPI PUSH2 0xA99 PUSH2 0x1929 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD DUP7 PUSH1 0x1 ADD SLOAD PUSH2 0x13B2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x13DE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 TIMESTAMP GT PUSH2 0xADE JUMPI TIMESTAMP PUSH2 0xAE0 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH1 0x2 ADD SLOAD SWAP1 POP PUSH2 0xB32 PUSH3 0x15180 PUSH2 0x16D PUSH2 0xAFF SWAP2 SWAP1 PUSH2 0x18E7 JUMP JUMPDEST PUSH2 0xB24 PUSH2 0xB15 DUP5 DUP7 PUSH2 0x13F4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP7 PUSH2 0x13B2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x13DE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP7 POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB9D SWAP2 SWAP1 PUSH2 0x16C9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBBA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBDE SWAP2 SWAP1 PUSH2 0x1BFC JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xBEB PUSH2 0x1413 JUMP JUMPDEST PUSH2 0xBF5 PUSH1 0x0 PUSH2 0x1491 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xCD9 JUMPI PUSH2 0xCC4 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xCA3 JUMPI PUSH2 0xCA2 PUSH2 0x1929 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD SLOAD DUP4 PUSH2 0x13C8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0xCD1 SWAP1 PUSH2 0x1C29 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xBFF JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xCEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1A04 DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 DUP4 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0xDBF JUMPI PUSH2 0xDBE PUSH2 0x1929 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD SWAP2 POP PUSH1 0x3 DUP4 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0xDEA JUMPI PUSH2 0xDE9 PUSH2 0x1929 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xE13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP10 DUP2 SLOAD DUP2 LT PUSH2 0xE9B JUMPI PUSH2 0xE9A PUSH2 0x1929 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP8 POP PUSH1 0x3 DUP9 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0xED6 JUMPI PUSH2 0xED5 PUSH2 0x1929 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP7 POP DUP1 PUSH1 0x1 ADD SLOAD SWAP6 POP DUP1 PUSH1 0x2 ADD SLOAD SWAP5 POP PUSH2 0xF5D PUSH2 0xF4A PUSH3 0x15180 PUSH1 0x3 DUP5 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0xF2A JUMPI PUSH2 0xF29 PUSH2 0x1929 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD PUSH2 0x13B2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x2 ADD SLOAD PUSH2 0x13C8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP3 POP POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH7 0x38D7EA4C68000 DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xF98 PUSH2 0x1413 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1007 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFFE SWAP1 PUSH2 0x1CE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1010 DUP2 PUSH2 0x1491 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x101B PUSH2 0x1363 JUMP JUMPDEST PUSH7 0x38D7EA4C68000 DUP2 LT ISZERO PUSH2 0x1065 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x105C SWAP1 PUSH2 0x1D4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD SWAP1 POP DUP3 PUSH1 0xFF AND LT PUSH2 0x10AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10A6 SWAP1 PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x110E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DDB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x112D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1151 SWAP2 SWAP1 PUSH2 0x1ABC JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SUB PUSH2 0x11DC JUMPI PUSH32 0x9FD565CD14C3C391679EB0CAD12A14DCF7534E9D3462BCB9B67A098A9BBBC24A CALLER PUSH1 0x40 MLOAD PUSH2 0x11D3 SWAP2 SWAP1 PUSH2 0x16C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x12DA DUP3 PUSH1 0x5 SLOAD PUSH2 0x13C8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3A89EB89956DCF6537585A2372D4E629E18622CCE06C2B4FEE6301AE0840E241 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1328 SWAP3 SWAP2 SWAP1 PUSH2 0x1E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x1339 PUSH2 0x140A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x13A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x139F SWAP1 PUSH2 0x1E87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x13C0 SWAP2 SWAP1 PUSH2 0x18E7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x13D6 SWAP2 SWAP1 PUSH2 0x1EA7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x13EC SWAP2 SWAP1 PUSH2 0x1F0A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1402 SWAP2 SWAP1 PUSH2 0x1F3B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x141B PUSH2 0x1555 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1439 PUSH2 0xD03 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x148F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1486 SWAP1 PUSH2 0x1FBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1570 DUP2 PUSH2 0x155D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x158B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1567 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x159F DUP2 PUSH2 0x155D JUMP JUMPDEST DUP2 EQ PUSH2 0x15AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15BC DUP2 PUSH2 0x1596 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15D8 JUMPI PUSH2 0x15D7 PUSH2 0x1591 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15E6 DUP5 DUP3 DUP6 ADD PUSH2 0x15AD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x161A DUP3 PUSH2 0x15EF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x162A DUP2 PUSH2 0x160F JUMP JUMPDEST DUP2 EQ PUSH2 0x1635 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1647 DUP2 PUSH2 0x1621 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1664 JUMPI PUSH2 0x1663 PUSH2 0x1591 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1672 DUP6 DUP3 DUP7 ADD PUSH2 0x1638 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1683 DUP6 DUP3 DUP7 ADD PUSH2 0x15AD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16A3 JUMPI PUSH2 0x16A2 PUSH2 0x1591 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16B1 DUP5 DUP3 DUP6 ADD PUSH2 0x1638 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16C3 DUP2 PUSH2 0x160F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16DE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x16F9 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1567 JUMP JUMPDEST PUSH2 0x1706 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1567 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1723 DUP2 PUSH2 0x170D JUMP JUMPDEST DUP2 EQ PUSH2 0x172E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1740 DUP2 PUSH2 0x171A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x175C JUMPI PUSH2 0x175B PUSH2 0x1591 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x176A DUP5 DUP3 DUP6 ADD PUSH2 0x1731 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x177C DUP2 PUSH2 0x170D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1797 DUP2 PUSH2 0x1782 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x17B2 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x1773 JUMP JUMPDEST PUSH2 0x17BF PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x1567 JUMP JUMPDEST PUSH2 0x17CC PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x1567 JUMP JUMPDEST PUSH2 0x17D9 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x1567 JUMP JUMPDEST PUSH2 0x17E6 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1567 JUMP JUMPDEST PUSH2 0x17F3 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x178E JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1815 JUMPI PUSH2 0x1814 PUSH2 0x1591 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1823 DUP6 DUP3 DUP7 ADD PUSH2 0x1731 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1834 DUP6 DUP3 DUP7 ADD PUSH2 0x15AD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1863 PUSH2 0x185E PUSH2 0x1859 DUP5 PUSH2 0x15EF JUMP JUMPDEST PUSH2 0x183E JUMP JUMPDEST PUSH2 0x15EF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1875 DUP3 PUSH2 0x1848 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1887 DUP3 PUSH2 0x186A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1897 DUP2 PUSH2 0x187C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18B2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x188E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x18F2 DUP3 PUSH2 0x155D JUMP JUMPDEST SWAP2 POP PUSH2 0x18FD DUP4 PUSH2 0x155D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x190B DUP2 PUSH2 0x155D JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1922 JUMPI PUSH2 0x1921 PUSH2 0x18B8 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6465706F73697420697320616C72656164792074616B656E0000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x199F PUSH1 0x18 DUP4 PUSH2 0x1958 JUMP JUMPDEST SWAP2 POP PUSH2 0x19AA DUP3 PUSH2 0x1969 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19CE DUP2 PUSH2 0x1992 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E7320617265206E6F7420617661696C61626C652C20706C65617365 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20636F6E746163742061646D696E000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A31 PUSH1 0x2E DUP4 PUSH2 0x1958 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A3C DUP3 PUSH2 0x19D5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A60 DUP2 PUSH2 0x1A24 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1A7C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x16BA JUMP JUMPDEST PUSH2 0x1A89 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1567 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1A99 DUP2 PUSH2 0x1782 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1AB6 DUP2 PUSH2 0x1A90 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AD2 JUMPI PUSH2 0x1AD1 PUSH2 0x1591 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AE0 DUP5 DUP3 DUP6 ADD PUSH2 0x1AA7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x41646D696E2063616E207769746864726177206C657373207468616E2061646D PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x696E546F6B656E7320616D6F756E740000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B45 PUSH1 0x2F DUP4 PUSH2 0x1958 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B50 DUP3 PUSH2 0x1AE9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B74 DUP2 PUSH2 0x1B38 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964206465706F7369744964000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BB1 PUSH1 0x11 DUP4 PUSH2 0x1958 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BBC DUP3 PUSH2 0x1B7B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BE0 DUP2 PUSH2 0x1BA4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1BF6 DUP2 PUSH2 0x1596 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C12 JUMPI PUSH2 0x1C11 PUSH2 0x1591 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C20 DUP5 DUP3 DUP6 ADD PUSH2 0x1BE7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C34 DUP3 PUSH2 0x155D JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1C66 JUMPI PUSH2 0x1C65 PUSH2 0x18B8 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CCD PUSH1 0x26 DUP4 PUSH2 0x1958 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CD8 DUP3 PUSH2 0x1C71 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CFC DUP2 PUSH2 0x1CC0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6D696E206C696D697420302E3030312069732072657175697265640000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D39 PUSH1 0x1B DUP4 PUSH2 0x1958 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D44 DUP3 PUSH2 0x1D03 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D68 DUP2 PUSH2 0x1D2C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420706C616E0000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DA5 PUSH1 0xC DUP4 PUSH2 0x1958 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DB0 DUP3 PUSH2 0x1D6F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DD4 DUP2 PUSH2 0x1D98 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1DF0 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x16BA JUMP JUMPDEST PUSH2 0x1DFD PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x16BA JUMP JUMPDEST PUSH2 0x1E0A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1567 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1E27 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1773 JUMP JUMPDEST PUSH2 0x1E34 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1567 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E71 PUSH1 0x1F DUP4 PUSH2 0x1958 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E7C DUP3 PUSH2 0x1E3B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EA0 DUP2 PUSH2 0x1E64 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EB2 DUP3 PUSH2 0x155D JUMP JUMPDEST SWAP2 POP PUSH2 0x1EBD DUP4 PUSH2 0x155D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1ED5 JUMPI PUSH2 0x1ED4 PUSH2 0x18B8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1F15 DUP3 PUSH2 0x155D JUMP JUMPDEST SWAP2 POP PUSH2 0x1F20 DUP4 PUSH2 0x155D JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1F30 JUMPI PUSH2 0x1F2F PUSH2 0x1EDB JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F46 DUP3 PUSH2 0x155D JUMP JUMPDEST SWAP2 POP PUSH2 0x1F51 DUP4 PUSH2 0x155D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1F69 JUMPI PUSH2 0x1F68 PUSH2 0x18B8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FA5 PUSH1 0x20 DUP4 PUSH2 0x1958 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FB0 DUP3 PUSH2 0x1F6F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FD4 DUP2 PUSH2 0x1F98 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 SWAP8 BASEFEE SMOD RETURNDATACOPY PUSH10 0x93033F4E94F28906AE7C 0x2D OR 0xE8 LOG2 DUP3 KECCAK256 EQ RETURN 0xC8 0x5E REVERT LOG4 0xC0 LOG1 0xB1 0xC6 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"290:4818:5:-:0;;;1221:228;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;1716:1:1;1821:7;:22;;;;1287:13:5::1;1272:5;;:29;;;;;;;;;;;;;;;;;;1308:5;1319:16;;;;;;;;1324:6;1319:16;;;;1332:2;1319:16;;::::0;1308:28:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1342:5;1353:16;;;;;;;;1358:6;1353:16;;;;1366:2;1353:16;;::::0;1342:28:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1376:5;1387:17;;;;;;;;1392:7;1387:17;;;;1401:2;1387:17;;::::0;1376:29:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1411:5;1422:21;;;;;;;;1427:10;1422:21;;;;1439:3;1422:21;;::::0;1411:33:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1221:228:::0;290:4818;;640:96:3;693:7;719:10;712:17;;640:96;:::o;2426:187:0:-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;88:117:6:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;290:4818:5:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@MIN_AMOUNT_628":{"entryPoint":3967,"id":628,"parameterSlots":0,"returnSlots":0},"@ONE_YEAR_639":{"entryPoint":1152,"id":639,"parameterSlots":0,"returnSlots":0},"@PENALTY_PERCENT_642":{"entryPoint":3372,"id":642,"parameterSlots":0,"returnSlots":0},"@PERCENT_DIVIDER_631":{"entryPoint":1178,"id":631,"parameterSlots":0,"returnSlots":0},"@TIME_STEP_634":{"entryPoint":2368,"id":634,"parameterSlots":0,"returnSlots":0},"@_checkOwner_54":{"entryPoint":5139,"id":54,"parameterSlots":0,"returnSlots":0},"@_msgSender_267":{"entryPoint":5461,"id":267,"parameterSlots":0,"returnSlots":1},"@_nonReentrantAfter_165":{"entryPoint":5130,"id":165,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_157":{"entryPoint":4963,"id":157,"parameterSlots":0,"returnSlots":0},"@_transferOwnership_111":{"entryPoint":5265,"id":111,"parameterSlots":1,"returnSlots":0},"@add_453":{"entryPoint":5064,"id":453,"parameterSlots":2,"returnSlots":1},"@adminTokens_658":{"entryPoint":3978,"id":658,"parameterSlots":0,"returnSlots":0},"@deposit_825":{"entryPoint":4115,"id":825,"parameterSlots":2,"returnSlots":0},"@div_498":{"entryPoint":5086,"id":498,"parameterSlots":2,"returnSlots":1},"@getContractBalance_1109":{"entryPoint":2880,"id":1109,"parameterSlots":0,"returnSlots":1},"@getPlanInfo_1133":{"entryPoint":3493,"id":1133,"parameterSlots":1,"returnSlots":2},"@getUserAmountOfDeposits_1147":{"entryPoint":3414,"id":1147,"parameterSlots":1,"returnSlots":1},"@getUserDepositInfo_1261":{"entryPoint":3639,"id":1261,"parameterSlots":2,"returnSlots":6},"@getUserNegativeDividends_1095":{"entryPoint":2375,"id":1095,"parameterSlots":2,"returnSlots":1},"@getUserTotalDeposits_1184":{"entryPoint":3063,"id":1184,"parameterSlots":1,"returnSlots":1},"@mul_483":{"entryPoint":5042,"id":483,"parameterSlots":2,"returnSlots":1},"@owner_40":{"entryPoint":3331,"id":40,"parameterSlots":0,"returnSlots":1},"@plans_651":{"entryPoint":3587,"id":651,"parameterSlots":0,"returnSlots":0},"@renounceOwnership_68":{"entryPoint":3043,"id":68,"parameterSlots":0,"returnSlots":0},"@sub_468":{"entryPoint":5108,"id":468,"parameterSlots":2,"returnSlots":1},"@token_654":{"entryPoint":4925,"id":654,"parameterSlots":0,"returnSlots":0},"@totalStacked_656":{"entryPoint":1172,"id":656,"parameterSlots":0,"returnSlots":0},"@transferOwnership_91":{"entryPoint":3984,"id":91,"parameterSlots":1,"returnSlots":0},"@usersDeposits_661":{"entryPoint":3295,"id":661,"parameterSlots":0,"returnSlots":0},"@users_647":{"entryPoint":3378,"id":647,"parameterSlots":0,"returnSlots":0},"@withdrawTokens_1004":{"entryPoint":2084,"id":1004,"parameterSlots":1,"returnSlots":0},"@withdraw_972":{"entryPoint":1184,"id":972,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address":{"entryPoint":5688,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":6823,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":5549,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":7143,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint8":{"entryPoint":5937,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":5773,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":5709,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":6844,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":5570,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":7164,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint8":{"entryPoint":5958,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint8t_uint256":{"entryPoint":6142,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":5818,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":6030,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_IERC20_$255_to_t_address_fromStack":{"entryPoint":6286,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":7360,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_5d8e25932fad878d23188e7db9dad713b9765dca1f9eff1d41ceed07dbf63ef0_to_t_string_memory_ptr_fromStack":{"entryPoint":6546,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6971b753d423ad7dfd2382591dead197ea2029a59c447576b2f2841e6bb92de2_to_t_string_memory_ptr_fromStack":{"entryPoint":7468,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":8088,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b0d4b076e801a43306847486ec53423625901d5e41e754cee65ff10ec7efb530_to_t_string_memory_ptr_fromStack":{"entryPoint":7076,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_bbb72649a92b2cfd28eceb736c457db5c7c27cf9b21564f749da66d117c3b026_to_t_string_memory_ptr_fromStack":{"entryPoint":6692,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e3a0ac30dcb59102a25d4dccd4376d92aa17cbd01ab4a90a0b15680c71aedb3e_to_t_string_memory_ptr_fromStack":{"entryPoint":7576,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack":{"entryPoint":7780,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f4e3a9b3b1fc30422312f1ccef7102bacc3a67e9bc871186eb199255d0acd3b0_to_t_string_memory_ptr_fromStack":{"entryPoint":6968,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":5479,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":6003,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":5833,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":7643,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":6759,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC20_$255__to_t_address__fromStack_reversed":{"entryPoint":6301,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7395,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5d8e25932fad878d23188e7db9dad713b9765dca1f9eff1d41ceed07dbf63ef0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6581,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6971b753d423ad7dfd2382591dead197ea2029a59c447576b2f2841e6bb92de2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7503,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8123,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b0d4b076e801a43306847486ec53423625901d5e41e754cee65ff10ec7efb530__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7111,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_bbb72649a92b2cfd28eceb736c457db5c7c27cf9b21564f749da66d117c3b026__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6727,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e3a0ac30dcb59102a25d4dccd4376d92aa17cbd01ab4a90a0b15680c71aedb3e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7611,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7815,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f4e3a9b3b1fc30422312f1ccef7102bacc3a67e9bc871186eb199255d0acd3b0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7003,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":5494,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":5860,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint8_t_uint256__to_t_uint8_t_uint256__fromStack_reversed":{"entryPoint":7698,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint8_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint8_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed":{"entryPoint":6045,"id":null,"parameterSlots":7,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":6488,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":7847,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":7946,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":6375,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":7995,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":5647,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":6018,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":5615,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":5469,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":5901,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_IERC20_$255_to_t_address":{"entryPoint":6268,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":6250,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":6216,"id":null,"parameterSlots":1,"returnSlots":1},"identity":{"entryPoint":6206,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":7209,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":6328,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":7899,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":6441,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":5521,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":7281,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_5d8e25932fad878d23188e7db9dad713b9765dca1f9eff1d41ceed07dbf63ef0":{"entryPoint":6505,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6971b753d423ad7dfd2382591dead197ea2029a59c447576b2f2841e6bb92de2":{"entryPoint":7427,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":8047,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b0d4b076e801a43306847486ec53423625901d5e41e754cee65ff10ec7efb530":{"entryPoint":7035,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_bbb72649a92b2cfd28eceb736c457db5c7c27cf9b21564f749da66d117c3b026":{"entryPoint":6613,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e3a0ac30dcb59102a25d4dccd4376d92aa17cbd01ab4a90a0b15680c71aedb3e":{"entryPoint":7535,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619":{"entryPoint":7739,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f4e3a9b3b1fc30422312f1ccef7102bacc3a67e9bc871186eb199255d0acd3b0":{"entryPoint":6889,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":5665,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":6800,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":5526,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint8":{"entryPoint":5914,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:19729:6","statements":[{"body":{"nodeType":"YulBlock","src":"52:32:6","statements":[{"nodeType":"YulAssignment","src":"62:16:6","value":{"name":"value","nodeType":"YulIdentifier","src":"73:5:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:6"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:6","type":""}],"src":"7:77:6"},{"body":{"nodeType":"YulBlock","src":"155:53:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"172:3:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"195:5:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"177:17:6"},"nodeType":"YulFunctionCall","src":"177:24:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"165:6:6"},"nodeType":"YulFunctionCall","src":"165:37:6"},"nodeType":"YulExpressionStatement","src":"165:37:6"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"143:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"150:3:6","type":""}],"src":"90:118:6"},{"body":{"nodeType":"YulBlock","src":"312:124:6","statements":[{"nodeType":"YulAssignment","src":"322:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"334:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"345:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"330:3:6"},"nodeType":"YulFunctionCall","src":"330:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"322:4:6"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"402:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"415:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"426:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"411:3:6"},"nodeType":"YulFunctionCall","src":"411:17:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"358:43:6"},"nodeType":"YulFunctionCall","src":"358:71:6"},"nodeType":"YulExpressionStatement","src":"358:71:6"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"284:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"296:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"307:4:6","type":""}],"src":"214:222:6"},{"body":{"nodeType":"YulBlock","src":"482:35:6","statements":[{"nodeType":"YulAssignment","src":"492:19:6","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"508:2:6","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"502:5:6"},"nodeType":"YulFunctionCall","src":"502:9:6"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"492:6:6"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"475:6:6","type":""}],"src":"442:75:6"},{"body":{"nodeType":"YulBlock","src":"612:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"629:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"632:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"622:6:6"},"nodeType":"YulFunctionCall","src":"622:12:6"},"nodeType":"YulExpressionStatement","src":"622:12:6"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"523:117:6"},{"body":{"nodeType":"YulBlock","src":"735:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"752:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"755:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"745:6:6"},"nodeType":"YulFunctionCall","src":"745:12:6"},"nodeType":"YulExpressionStatement","src":"745:12:6"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"646:117:6"},{"body":{"nodeType":"YulBlock","src":"812:79:6","statements":[{"body":{"nodeType":"YulBlock","src":"869:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"878:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"881:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"871:6:6"},"nodeType":"YulFunctionCall","src":"871:12:6"},"nodeType":"YulExpressionStatement","src":"871:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"835:5:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"860:5:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"842:17:6"},"nodeType":"YulFunctionCall","src":"842:24:6"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"832:2:6"},"nodeType":"YulFunctionCall","src":"832:35:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"825:6:6"},"nodeType":"YulFunctionCall","src":"825:43:6"},"nodeType":"YulIf","src":"822:63:6"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"805:5:6","type":""}],"src":"769:122:6"},{"body":{"nodeType":"YulBlock","src":"949:87:6","statements":[{"nodeType":"YulAssignment","src":"959:29:6","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"981:6:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"968:12:6"},"nodeType":"YulFunctionCall","src":"968:20:6"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"959:5:6"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1024:5:6"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"997:26:6"},"nodeType":"YulFunctionCall","src":"997:33:6"},"nodeType":"YulExpressionStatement","src":"997:33:6"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"927:6:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"935:3:6","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"943:5:6","type":""}],"src":"897:139:6"},{"body":{"nodeType":"YulBlock","src":"1108:263:6","statements":[{"body":{"nodeType":"YulBlock","src":"1154:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1156:77:6"},"nodeType":"YulFunctionCall","src":"1156:79:6"},"nodeType":"YulExpressionStatement","src":"1156:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1129:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"1138:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1125:3:6"},"nodeType":"YulFunctionCall","src":"1125:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"1150:2:6","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1121:3:6"},"nodeType":"YulFunctionCall","src":"1121:32:6"},"nodeType":"YulIf","src":"1118:119:6"},{"nodeType":"YulBlock","src":"1247:117:6","statements":[{"nodeType":"YulVariableDeclaration","src":"1262:15:6","value":{"kind":"number","nodeType":"YulLiteral","src":"1276:1:6","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1266:6:6","type":""}]},{"nodeType":"YulAssignment","src":"1291:63:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1326:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"1337:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1322:3:6"},"nodeType":"YulFunctionCall","src":"1322:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1346:7:6"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1301:20:6"},"nodeType":"YulFunctionCall","src":"1301:53:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1291:6:6"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1078:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1089:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1101:6:6","type":""}],"src":"1042:329:6"},{"body":{"nodeType":"YulBlock","src":"1422:81:6","statements":[{"nodeType":"YulAssignment","src":"1432:65:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1447:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"1454:42:6","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1443:3:6"},"nodeType":"YulFunctionCall","src":"1443:54:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1432:7:6"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1404:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1414:7:6","type":""}],"src":"1377:126:6"},{"body":{"nodeType":"YulBlock","src":"1554:51:6","statements":[{"nodeType":"YulAssignment","src":"1564:35:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1593:5:6"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1575:17:6"},"nodeType":"YulFunctionCall","src":"1575:24:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1564:7:6"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1536:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1546:7:6","type":""}],"src":"1509:96:6"},{"body":{"nodeType":"YulBlock","src":"1654:79:6","statements":[{"body":{"nodeType":"YulBlock","src":"1711:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1720:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1723:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1713:6:6"},"nodeType":"YulFunctionCall","src":"1713:12:6"},"nodeType":"YulExpressionStatement","src":"1713:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1677:5:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1702:5:6"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1684:17:6"},"nodeType":"YulFunctionCall","src":"1684:24:6"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1674:2:6"},"nodeType":"YulFunctionCall","src":"1674:35:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1667:6:6"},"nodeType":"YulFunctionCall","src":"1667:43:6"},"nodeType":"YulIf","src":"1664:63:6"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1647:5:6","type":""}],"src":"1611:122:6"},{"body":{"nodeType":"YulBlock","src":"1791:87:6","statements":[{"nodeType":"YulAssignment","src":"1801:29:6","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1823:6:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1810:12:6"},"nodeType":"YulFunctionCall","src":"1810:20:6"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1801:5:6"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1866:5:6"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1839:26:6"},"nodeType":"YulFunctionCall","src":"1839:33:6"},"nodeType":"YulExpressionStatement","src":"1839:33:6"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1769:6:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"1777:3:6","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1785:5:6","type":""}],"src":"1739:139:6"},{"body":{"nodeType":"YulBlock","src":"1967:391:6","statements":[{"body":{"nodeType":"YulBlock","src":"2013:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2015:77:6"},"nodeType":"YulFunctionCall","src":"2015:79:6"},"nodeType":"YulExpressionStatement","src":"2015:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1988:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"1997:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1984:3:6"},"nodeType":"YulFunctionCall","src":"1984:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"2009:2:6","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1980:3:6"},"nodeType":"YulFunctionCall","src":"1980:32:6"},"nodeType":"YulIf","src":"1977:119:6"},{"nodeType":"YulBlock","src":"2106:117:6","statements":[{"nodeType":"YulVariableDeclaration","src":"2121:15:6","value":{"kind":"number","nodeType":"YulLiteral","src":"2135:1:6","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2125:6:6","type":""}]},{"nodeType":"YulAssignment","src":"2150:63:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2185:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"2196:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2181:3:6"},"nodeType":"YulFunctionCall","src":"2181:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2205:7:6"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2160:20:6"},"nodeType":"YulFunctionCall","src":"2160:53:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2150:6:6"}]}]},{"nodeType":"YulBlock","src":"2233:118:6","statements":[{"nodeType":"YulVariableDeclaration","src":"2248:16:6","value":{"kind":"number","nodeType":"YulLiteral","src":"2262:2:6","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2252:6:6","type":""}]},{"nodeType":"YulAssignment","src":"2278:63:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2313:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"2324:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2309:3:6"},"nodeType":"YulFunctionCall","src":"2309:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2333:7:6"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2288:20:6"},"nodeType":"YulFunctionCall","src":"2288:53:6"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2278:6:6"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1929:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1940:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1952:6:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1960:6:6","type":""}],"src":"1884:474:6"},{"body":{"nodeType":"YulBlock","src":"2430:263:6","statements":[{"body":{"nodeType":"YulBlock","src":"2476:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2478:77:6"},"nodeType":"YulFunctionCall","src":"2478:79:6"},"nodeType":"YulExpressionStatement","src":"2478:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2451:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"2460:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2447:3:6"},"nodeType":"YulFunctionCall","src":"2447:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"2472:2:6","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2443:3:6"},"nodeType":"YulFunctionCall","src":"2443:32:6"},"nodeType":"YulIf","src":"2440:119:6"},{"nodeType":"YulBlock","src":"2569:117:6","statements":[{"nodeType":"YulVariableDeclaration","src":"2584:15:6","value":{"kind":"number","nodeType":"YulLiteral","src":"2598:1:6","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2588:6:6","type":""}]},{"nodeType":"YulAssignment","src":"2613:63:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2648:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"2659:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2644:3:6"},"nodeType":"YulFunctionCall","src":"2644:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2668:7:6"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2623:20:6"},"nodeType":"YulFunctionCall","src":"2623:53:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2613:6:6"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2400:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2411:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2423:6:6","type":""}],"src":"2364:329:6"},{"body":{"nodeType":"YulBlock","src":"2764:53:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2781:3:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2804:5:6"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2786:17:6"},"nodeType":"YulFunctionCall","src":"2786:24:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2774:6:6"},"nodeType":"YulFunctionCall","src":"2774:37:6"},"nodeType":"YulExpressionStatement","src":"2774:37:6"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2752:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2759:3:6","type":""}],"src":"2699:118:6"},{"body":{"nodeType":"YulBlock","src":"2921:124:6","statements":[{"nodeType":"YulAssignment","src":"2931:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2943:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2954:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2939:3:6"},"nodeType":"YulFunctionCall","src":"2939:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2931:4:6"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3011:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3024:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"3035:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3020:3:6"},"nodeType":"YulFunctionCall","src":"3020:17:6"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"2967:43:6"},"nodeType":"YulFunctionCall","src":"2967:71:6"},"nodeType":"YulExpressionStatement","src":"2967:71:6"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2893:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2905:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2916:4:6","type":""}],"src":"2823:222:6"},{"body":{"nodeType":"YulBlock","src":"3177:206:6","statements":[{"nodeType":"YulAssignment","src":"3187:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3199:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"3210:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3195:3:6"},"nodeType":"YulFunctionCall","src":"3195:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3187:4:6"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3267:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3280:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"3291:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3276:3:6"},"nodeType":"YulFunctionCall","src":"3276:17:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3223:43:6"},"nodeType":"YulFunctionCall","src":"3223:71:6"},"nodeType":"YulExpressionStatement","src":"3223:71:6"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"3348:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3361:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"3372:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3357:3:6"},"nodeType":"YulFunctionCall","src":"3357:18:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3304:43:6"},"nodeType":"YulFunctionCall","src":"3304:72:6"},"nodeType":"YulExpressionStatement","src":"3304:72:6"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3141:9:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3153:6:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3161:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3172:4:6","type":""}],"src":"3051:332:6"},{"body":{"nodeType":"YulBlock","src":"3432:43:6","statements":[{"nodeType":"YulAssignment","src":"3442:27:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3457:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"3464:4:6","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3453:3:6"},"nodeType":"YulFunctionCall","src":"3453:16:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3442:7:6"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3414:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3424:7:6","type":""}],"src":"3389:86:6"},{"body":{"nodeType":"YulBlock","src":"3522:77:6","statements":[{"body":{"nodeType":"YulBlock","src":"3577:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3586:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3589:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3579:6:6"},"nodeType":"YulFunctionCall","src":"3579:12:6"},"nodeType":"YulExpressionStatement","src":"3579:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3545:5:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3568:5:6"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"3552:15:6"},"nodeType":"YulFunctionCall","src":"3552:22:6"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3542:2:6"},"nodeType":"YulFunctionCall","src":"3542:33:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3535:6:6"},"nodeType":"YulFunctionCall","src":"3535:41:6"},"nodeType":"YulIf","src":"3532:61:6"}]},"name":"validator_revert_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3515:5:6","type":""}],"src":"3481:118:6"},{"body":{"nodeType":"YulBlock","src":"3655:85:6","statements":[{"nodeType":"YulAssignment","src":"3665:29:6","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3687:6:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3674:12:6"},"nodeType":"YulFunctionCall","src":"3674:20:6"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3665:5:6"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3728:5:6"}],"functionName":{"name":"validator_revert_t_uint8","nodeType":"YulIdentifier","src":"3703:24:6"},"nodeType":"YulFunctionCall","src":"3703:31:6"},"nodeType":"YulExpressionStatement","src":"3703:31:6"}]},"name":"abi_decode_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3633:6:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"3641:3:6","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3649:5:6","type":""}],"src":"3605:135:6"},{"body":{"nodeType":"YulBlock","src":"3810:261:6","statements":[{"body":{"nodeType":"YulBlock","src":"3856:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3858:77:6"},"nodeType":"YulFunctionCall","src":"3858:79:6"},"nodeType":"YulExpressionStatement","src":"3858:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3831:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"3840:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3827:3:6"},"nodeType":"YulFunctionCall","src":"3827:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"3852:2:6","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3823:3:6"},"nodeType":"YulFunctionCall","src":"3823:32:6"},"nodeType":"YulIf","src":"3820:119:6"},{"nodeType":"YulBlock","src":"3949:115:6","statements":[{"nodeType":"YulVariableDeclaration","src":"3964:15:6","value":{"kind":"number","nodeType":"YulLiteral","src":"3978:1:6","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3968:6:6","type":""}]},{"nodeType":"YulAssignment","src":"3993:61:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4026:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"4037:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4022:3:6"},"nodeType":"YulFunctionCall","src":"4022:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4046:7:6"}],"functionName":{"name":"abi_decode_t_uint8","nodeType":"YulIdentifier","src":"4003:18:6"},"nodeType":"YulFunctionCall","src":"4003:51:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3993:6:6"}]}]}]},"name":"abi_decode_tuple_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3780:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3791:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3803:6:6","type":""}],"src":"3746:325:6"},{"body":{"nodeType":"YulBlock","src":"4138:51:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4155:3:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4176:5:6"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"4160:15:6"},"nodeType":"YulFunctionCall","src":"4160:22:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4148:6:6"},"nodeType":"YulFunctionCall","src":"4148:35:6"},"nodeType":"YulExpressionStatement","src":"4148:35:6"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4126:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4133:3:6","type":""}],"src":"4077:112:6"},{"body":{"nodeType":"YulBlock","src":"4237:48:6","statements":[{"nodeType":"YulAssignment","src":"4247:32:6","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4272:5:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4265:6:6"},"nodeType":"YulFunctionCall","src":"4265:13:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4258:6:6"},"nodeType":"YulFunctionCall","src":"4258:21:6"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4247:7:6"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4219:5:6","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4229:7:6","type":""}],"src":"4195:90:6"},{"body":{"nodeType":"YulBlock","src":"4350:50:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4367:3:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4387:5:6"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"4372:14:6"},"nodeType":"YulFunctionCall","src":"4372:21:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4360:6:6"},"nodeType":"YulFunctionCall","src":"4360:34:6"},"nodeType":"YulExpressionStatement","src":"4360:34:6"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4338:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4345:3:6","type":""}],"src":"4291:109:6"},{"body":{"nodeType":"YulBlock","src":"4634:527:6","statements":[{"nodeType":"YulAssignment","src":"4644:27:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4656:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"4667:3:6","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4652:3:6"},"nodeType":"YulFunctionCall","src":"4652:19:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4644:4:6"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4721:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4734:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"4745:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4730:3:6"},"nodeType":"YulFunctionCall","src":"4730:17:6"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"4681:39:6"},"nodeType":"YulFunctionCall","src":"4681:67:6"},"nodeType":"YulExpressionStatement","src":"4681:67:6"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4802:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4815:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"4826:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4811:3:6"},"nodeType":"YulFunctionCall","src":"4811:18:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"4758:43:6"},"nodeType":"YulFunctionCall","src":"4758:72:6"},"nodeType":"YulExpressionStatement","src":"4758:72:6"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"4884:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4897:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"4908:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4893:3:6"},"nodeType":"YulFunctionCall","src":"4893:18:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"4840:43:6"},"nodeType":"YulFunctionCall","src":"4840:72:6"},"nodeType":"YulExpressionStatement","src":"4840:72:6"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"4966:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4979:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"4990:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4975:3:6"},"nodeType":"YulFunctionCall","src":"4975:18:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"4922:43:6"},"nodeType":"YulFunctionCall","src":"4922:72:6"},"nodeType":"YulExpressionStatement","src":"4922:72:6"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"5048:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5061:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"5072:3:6","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5057:3:6"},"nodeType":"YulFunctionCall","src":"5057:19:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5004:43:6"},"nodeType":"YulFunctionCall","src":"5004:73:6"},"nodeType":"YulExpressionStatement","src":"5004:73:6"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"5125:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5138:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"5149:3:6","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5134:3:6"},"nodeType":"YulFunctionCall","src":"5134:19:6"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"5087:37:6"},"nodeType":"YulFunctionCall","src":"5087:67:6"},"nodeType":"YulExpressionStatement","src":"5087:67:6"}]},"name":"abi_encode_tuple_t_uint8_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint8_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4566:9:6","type":""},{"name":"value5","nodeType":"YulTypedName","src":"4578:6:6","type":""},{"name":"value4","nodeType":"YulTypedName","src":"4586:6:6","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4594:6:6","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4602:6:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4610:6:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4618:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4629:4:6","type":""}],"src":"4406:755:6"},{"body":{"nodeType":"YulBlock","src":"5248:389:6","statements":[{"body":{"nodeType":"YulBlock","src":"5294:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5296:77:6"},"nodeType":"YulFunctionCall","src":"5296:79:6"},"nodeType":"YulExpressionStatement","src":"5296:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5269:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"5278:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5265:3:6"},"nodeType":"YulFunctionCall","src":"5265:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"5290:2:6","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5261:3:6"},"nodeType":"YulFunctionCall","src":"5261:32:6"},"nodeType":"YulIf","src":"5258:119:6"},{"nodeType":"YulBlock","src":"5387:115:6","statements":[{"nodeType":"YulVariableDeclaration","src":"5402:15:6","value":{"kind":"number","nodeType":"YulLiteral","src":"5416:1:6","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5406:6:6","type":""}]},{"nodeType":"YulAssignment","src":"5431:61:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5464:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"5475:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5460:3:6"},"nodeType":"YulFunctionCall","src":"5460:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5484:7:6"}],"functionName":{"name":"abi_decode_t_uint8","nodeType":"YulIdentifier","src":"5441:18:6"},"nodeType":"YulFunctionCall","src":"5441:51:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5431:6:6"}]}]},{"nodeType":"YulBlock","src":"5512:118:6","statements":[{"nodeType":"YulVariableDeclaration","src":"5527:16:6","value":{"kind":"number","nodeType":"YulLiteral","src":"5541:2:6","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5531:6:6","type":""}]},{"nodeType":"YulAssignment","src":"5557:63:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5592:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"5603:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5588:3:6"},"nodeType":"YulFunctionCall","src":"5588:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5612:7:6"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5567:20:6"},"nodeType":"YulFunctionCall","src":"5567:53:6"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5557:6:6"}]}]}]},"name":"abi_decode_tuple_t_uint8t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5210:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5221:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5233:6:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5241:6:6","type":""}],"src":"5167:470:6"},{"body":{"nodeType":"YulBlock","src":"5675:28:6","statements":[{"nodeType":"YulAssignment","src":"5685:12:6","value":{"name":"value","nodeType":"YulIdentifier","src":"5692:5:6"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5685:3:6"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5661:5:6","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5671:3:6","type":""}],"src":"5643:60:6"},{"body":{"nodeType":"YulBlock","src":"5769:82:6","statements":[{"nodeType":"YulAssignment","src":"5779:66:6","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5837:5:6"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"5819:17:6"},"nodeType":"YulFunctionCall","src":"5819:24:6"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"5810:8:6"},"nodeType":"YulFunctionCall","src":"5810:34:6"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"5792:17:6"},"nodeType":"YulFunctionCall","src":"5792:53:6"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5779:9:6"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5749:5:6","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5759:9:6","type":""}],"src":"5709:142:6"},{"body":{"nodeType":"YulBlock","src":"5917:66:6","statements":[{"nodeType":"YulAssignment","src":"5927:50:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5971:5:6"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"5940:30:6"},"nodeType":"YulFunctionCall","src":"5940:37:6"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5927:9:6"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5897:5:6","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5907:9:6","type":""}],"src":"5857:126:6"},{"body":{"nodeType":"YulBlock","src":"6063:66:6","statements":[{"nodeType":"YulAssignment","src":"6073:50:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6117:5:6"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"6086:30:6"},"nodeType":"YulFunctionCall","src":"6086:37:6"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"6073:9:6"}]}]},"name":"convert_t_contract$_IERC20_$255_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6043:5:6","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"6053:9:6","type":""}],"src":"5989:140:6"},{"body":{"nodeType":"YulBlock","src":"6214:80:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6231:3:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6281:5:6"}],"functionName":{"name":"convert_t_contract$_IERC20_$255_to_t_address","nodeType":"YulIdentifier","src":"6236:44:6"},"nodeType":"YulFunctionCall","src":"6236:51:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6224:6:6"},"nodeType":"YulFunctionCall","src":"6224:64:6"},"nodeType":"YulExpressionStatement","src":"6224:64:6"}]},"name":"abi_encode_t_contract$_IERC20_$255_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6202:5:6","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6209:3:6","type":""}],"src":"6135:159:6"},{"body":{"nodeType":"YulBlock","src":"6412:138:6","statements":[{"nodeType":"YulAssignment","src":"6422:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6434:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"6445:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6430:3:6"},"nodeType":"YulFunctionCall","src":"6430:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6422:4:6"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6516:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6529:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"6540:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6525:3:6"},"nodeType":"YulFunctionCall","src":"6525:17:6"}],"functionName":{"name":"abi_encode_t_contract$_IERC20_$255_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6458:57:6"},"nodeType":"YulFunctionCall","src":"6458:85:6"},"nodeType":"YulExpressionStatement","src":"6458:85:6"}]},"name":"abi_encode_tuple_t_contract$_IERC20_$255__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6384:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6396:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6407:4:6","type":""}],"src":"6300:250:6"},{"body":{"nodeType":"YulBlock","src":"6584:152:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6601:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6604:77:6","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6594:6:6"},"nodeType":"YulFunctionCall","src":"6594:88:6"},"nodeType":"YulExpressionStatement","src":"6594:88:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6698:1:6","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6701:4:6","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6691:6:6"},"nodeType":"YulFunctionCall","src":"6691:15:6"},"nodeType":"YulExpressionStatement","src":"6691:15:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6722:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6725:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6715:6:6"},"nodeType":"YulFunctionCall","src":"6715:15:6"},"nodeType":"YulExpressionStatement","src":"6715:15:6"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"6556:180:6"},{"body":{"nodeType":"YulBlock","src":"6790:362:6","statements":[{"nodeType":"YulAssignment","src":"6800:25:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6823:1:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6805:17:6"},"nodeType":"YulFunctionCall","src":"6805:20:6"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"6800:1:6"}]},{"nodeType":"YulAssignment","src":"6834:25:6","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6857:1:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6839:17:6"},"nodeType":"YulFunctionCall","src":"6839:20:6"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6834:1:6"}]},{"nodeType":"YulVariableDeclaration","src":"6868:28:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6891:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"6894:1:6"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6887:3:6"},"nodeType":"YulFunctionCall","src":"6887:9:6"},"variables":[{"name":"product_raw","nodeType":"YulTypedName","src":"6872:11:6","type":""}]},{"nodeType":"YulAssignment","src":"6905:41:6","value":{"arguments":[{"name":"product_raw","nodeType":"YulIdentifier","src":"6934:11:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6916:17:6"},"nodeType":"YulFunctionCall","src":"6916:30:6"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"6905:7:6"}]},{"body":{"nodeType":"YulBlock","src":"7123:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7125:16:6"},"nodeType":"YulFunctionCall","src":"7125:18:6"},"nodeType":"YulExpressionStatement","src":"7125:18:6"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7056:1:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7049:6:6"},"nodeType":"YulFunctionCall","src":"7049:9:6"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"7079:1:6"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"7086:7:6"},{"name":"x","nodeType":"YulIdentifier","src":"7095:1:6"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7082:3:6"},"nodeType":"YulFunctionCall","src":"7082:15:6"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7076:2:6"},"nodeType":"YulFunctionCall","src":"7076:22:6"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7029:2:6"},"nodeType":"YulFunctionCall","src":"7029:83:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7009:6:6"},"nodeType":"YulFunctionCall","src":"7009:113:6"},"nodeType":"YulIf","src":"7006:139:6"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6773:1:6","type":""},{"name":"y","nodeType":"YulTypedName","src":"6776:1:6","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"6782:7:6","type":""}],"src":"6742:410:6"},{"body":{"nodeType":"YulBlock","src":"7186:152:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7203:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7206:77:6","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7196:6:6"},"nodeType":"YulFunctionCall","src":"7196:88:6"},"nodeType":"YulExpressionStatement","src":"7196:88:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7300:1:6","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7303:4:6","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7293:6:6"},"nodeType":"YulFunctionCall","src":"7293:15:6"},"nodeType":"YulExpressionStatement","src":"7293:15:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7324:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7327:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7317:6:6"},"nodeType":"YulFunctionCall","src":"7317:15:6"},"nodeType":"YulExpressionStatement","src":"7317:15:6"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"7158:180:6"},{"body":{"nodeType":"YulBlock","src":"7440:73:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7457:3:6"},{"name":"length","nodeType":"YulIdentifier","src":"7462:6:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7450:6:6"},"nodeType":"YulFunctionCall","src":"7450:19:6"},"nodeType":"YulExpressionStatement","src":"7450:19:6"},{"nodeType":"YulAssignment","src":"7478:29:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7497:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"7502:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7493:3:6"},"nodeType":"YulFunctionCall","src":"7493:14:6"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"7478:11:6"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7412:3:6","type":""},{"name":"length","nodeType":"YulTypedName","src":"7417:6:6","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"7428:11:6","type":""}],"src":"7344:169:6"},{"body":{"nodeType":"YulBlock","src":"7625:68:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7647:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"7655:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7643:3:6"},"nodeType":"YulFunctionCall","src":"7643:14:6"},{"hexValue":"6465706f73697420697320616c72656164792074616b656e","kind":"string","nodeType":"YulLiteral","src":"7659:26:6","type":"","value":"deposit is already taken"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7636:6:6"},"nodeType":"YulFunctionCall","src":"7636:50:6"},"nodeType":"YulExpressionStatement","src":"7636:50:6"}]},"name":"store_literal_in_memory_5d8e25932fad878d23188e7db9dad713b9765dca1f9eff1d41ceed07dbf63ef0","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7617:6:6","type":""}],"src":"7519:174:6"},{"body":{"nodeType":"YulBlock","src":"7845:220:6","statements":[{"nodeType":"YulAssignment","src":"7855:74:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7921:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"7926:2:6","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7862:58:6"},"nodeType":"YulFunctionCall","src":"7862:67:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7855:3:6"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8027:3:6"}],"functionName":{"name":"store_literal_in_memory_5d8e25932fad878d23188e7db9dad713b9765dca1f9eff1d41ceed07dbf63ef0","nodeType":"YulIdentifier","src":"7938:88:6"},"nodeType":"YulFunctionCall","src":"7938:93:6"},"nodeType":"YulExpressionStatement","src":"7938:93:6"},{"nodeType":"YulAssignment","src":"8040:19:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8051:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"8056:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8047:3:6"},"nodeType":"YulFunctionCall","src":"8047:12:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8040:3:6"}]}]},"name":"abi_encode_t_stringliteral_5d8e25932fad878d23188e7db9dad713b9765dca1f9eff1d41ceed07dbf63ef0_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7833:3:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7841:3:6","type":""}],"src":"7699:366:6"},{"body":{"nodeType":"YulBlock","src":"8242:248:6","statements":[{"nodeType":"YulAssignment","src":"8252:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8264:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"8275:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8260:3:6"},"nodeType":"YulFunctionCall","src":"8260:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8252:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8299:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"8310:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8295:3:6"},"nodeType":"YulFunctionCall","src":"8295:17:6"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8318:4:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"8324:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8314:3:6"},"nodeType":"YulFunctionCall","src":"8314:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8288:6:6"},"nodeType":"YulFunctionCall","src":"8288:47:6"},"nodeType":"YulExpressionStatement","src":"8288:47:6"},{"nodeType":"YulAssignment","src":"8344:139:6","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8478:4:6"}],"functionName":{"name":"abi_encode_t_stringliteral_5d8e25932fad878d23188e7db9dad713b9765dca1f9eff1d41ceed07dbf63ef0_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8352:124:6"},"nodeType":"YulFunctionCall","src":"8352:131:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8344:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_5d8e25932fad878d23188e7db9dad713b9765dca1f9eff1d41ceed07dbf63ef0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8222:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8237:4:6","type":""}],"src":"8071:419:6"},{"body":{"nodeType":"YulBlock","src":"8602:127:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8624:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"8632:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8620:3:6"},"nodeType":"YulFunctionCall","src":"8620:14:6"},{"hexValue":"546f6b656e7320617265206e6f7420617661696c61626c652c20706c65617365","kind":"string","nodeType":"YulLiteral","src":"8636:34:6","type":"","value":"Tokens are not available, please"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8613:6:6"},"nodeType":"YulFunctionCall","src":"8613:58:6"},"nodeType":"YulExpressionStatement","src":"8613:58:6"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8692:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"8700:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8688:3:6"},"nodeType":"YulFunctionCall","src":"8688:15:6"},{"hexValue":"20636f6e746163742061646d696e","kind":"string","nodeType":"YulLiteral","src":"8705:16:6","type":"","value":" contact admin"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8681:6:6"},"nodeType":"YulFunctionCall","src":"8681:41:6"},"nodeType":"YulExpressionStatement","src":"8681:41:6"}]},"name":"store_literal_in_memory_bbb72649a92b2cfd28eceb736c457db5c7c27cf9b21564f749da66d117c3b026","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8594:6:6","type":""}],"src":"8496:233:6"},{"body":{"nodeType":"YulBlock","src":"8881:220:6","statements":[{"nodeType":"YulAssignment","src":"8891:74:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8957:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"8962:2:6","type":"","value":"46"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8898:58:6"},"nodeType":"YulFunctionCall","src":"8898:67:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8891:3:6"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9063:3:6"}],"functionName":{"name":"store_literal_in_memory_bbb72649a92b2cfd28eceb736c457db5c7c27cf9b21564f749da66d117c3b026","nodeType":"YulIdentifier","src":"8974:88:6"},"nodeType":"YulFunctionCall","src":"8974:93:6"},"nodeType":"YulExpressionStatement","src":"8974:93:6"},{"nodeType":"YulAssignment","src":"9076:19:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9087:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"9092:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9083:3:6"},"nodeType":"YulFunctionCall","src":"9083:12:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9076:3:6"}]}]},"name":"abi_encode_t_stringliteral_bbb72649a92b2cfd28eceb736c457db5c7c27cf9b21564f749da66d117c3b026_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8869:3:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8877:3:6","type":""}],"src":"8735:366:6"},{"body":{"nodeType":"YulBlock","src":"9278:248:6","statements":[{"nodeType":"YulAssignment","src":"9288:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9300:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"9311:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9296:3:6"},"nodeType":"YulFunctionCall","src":"9296:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9288:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9335:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"9346:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9331:3:6"},"nodeType":"YulFunctionCall","src":"9331:17:6"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9354:4:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"9360:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9350:3:6"},"nodeType":"YulFunctionCall","src":"9350:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9324:6:6"},"nodeType":"YulFunctionCall","src":"9324:47:6"},"nodeType":"YulExpressionStatement","src":"9324:47:6"},{"nodeType":"YulAssignment","src":"9380:139:6","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9514:4:6"}],"functionName":{"name":"abi_encode_t_stringliteral_bbb72649a92b2cfd28eceb736c457db5c7c27cf9b21564f749da66d117c3b026_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9388:124:6"},"nodeType":"YulFunctionCall","src":"9388:131:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9380:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_bbb72649a92b2cfd28eceb736c457db5c7c27cf9b21564f749da66d117c3b026__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9258:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9273:4:6","type":""}],"src":"9107:419:6"},{"body":{"nodeType":"YulBlock","src":"9658:206:6","statements":[{"nodeType":"YulAssignment","src":"9668:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9680:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"9691:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9676:3:6"},"nodeType":"YulFunctionCall","src":"9676:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9668:4:6"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9748:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9761:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"9772:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9757:3:6"},"nodeType":"YulFunctionCall","src":"9757:17:6"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"9704:43:6"},"nodeType":"YulFunctionCall","src":"9704:71:6"},"nodeType":"YulExpressionStatement","src":"9704:71:6"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9829:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9842:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"9853:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9838:3:6"},"nodeType":"YulFunctionCall","src":"9838:18:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9785:43:6"},"nodeType":"YulFunctionCall","src":"9785:72:6"},"nodeType":"YulExpressionStatement","src":"9785:72:6"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9622:9:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9634:6:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9642:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9653:4:6","type":""}],"src":"9532:332:6"},{"body":{"nodeType":"YulBlock","src":"9910:76:6","statements":[{"body":{"nodeType":"YulBlock","src":"9964:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9973:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9976:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9966:6:6"},"nodeType":"YulFunctionCall","src":"9966:12:6"},"nodeType":"YulExpressionStatement","src":"9966:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9933:5:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9955:5:6"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"9940:14:6"},"nodeType":"YulFunctionCall","src":"9940:21:6"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9930:2:6"},"nodeType":"YulFunctionCall","src":"9930:32:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9923:6:6"},"nodeType":"YulFunctionCall","src":"9923:40:6"},"nodeType":"YulIf","src":"9920:60:6"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9903:5:6","type":""}],"src":"9870:116:6"},{"body":{"nodeType":"YulBlock","src":"10052:77:6","statements":[{"nodeType":"YulAssignment","src":"10062:22:6","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10077:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10071:5:6"},"nodeType":"YulFunctionCall","src":"10071:13:6"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"10062:5:6"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10117:5:6"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"10093:23:6"},"nodeType":"YulFunctionCall","src":"10093:30:6"},"nodeType":"YulExpressionStatement","src":"10093:30:6"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"10030:6:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"10038:3:6","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"10046:5:6","type":""}],"src":"9992:137:6"},{"body":{"nodeType":"YulBlock","src":"10209:271:6","statements":[{"body":{"nodeType":"YulBlock","src":"10255:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10257:77:6"},"nodeType":"YulFunctionCall","src":"10257:79:6"},"nodeType":"YulExpressionStatement","src":"10257:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10230:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"10239:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10226:3:6"},"nodeType":"YulFunctionCall","src":"10226:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"10251:2:6","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10222:3:6"},"nodeType":"YulFunctionCall","src":"10222:32:6"},"nodeType":"YulIf","src":"10219:119:6"},{"nodeType":"YulBlock","src":"10348:125:6","statements":[{"nodeType":"YulVariableDeclaration","src":"10363:15:6","value":{"kind":"number","nodeType":"YulLiteral","src":"10377:1:6","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10367:6:6","type":""}]},{"nodeType":"YulAssignment","src":"10392:71:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10435:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"10446:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10431:3:6"},"nodeType":"YulFunctionCall","src":"10431:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10455:7:6"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"10402:28:6"},"nodeType":"YulFunctionCall","src":"10402:61:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10392:6:6"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10179:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10190:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10202:6:6","type":""}],"src":"10135:345:6"},{"body":{"nodeType":"YulBlock","src":"10592:128:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10614:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"10622:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10610:3:6"},"nodeType":"YulFunctionCall","src":"10610:14:6"},{"hexValue":"41646d696e2063616e207769746864726177206c657373207468616e2061646d","kind":"string","nodeType":"YulLiteral","src":"10626:34:6","type":"","value":"Admin can withdraw less than adm"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10603:6:6"},"nodeType":"YulFunctionCall","src":"10603:58:6"},"nodeType":"YulExpressionStatement","src":"10603:58:6"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10682:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"10690:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10678:3:6"},"nodeType":"YulFunctionCall","src":"10678:15:6"},{"hexValue":"696e546f6b656e7320616d6f756e74","kind":"string","nodeType":"YulLiteral","src":"10695:17:6","type":"","value":"inTokens amount"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10671:6:6"},"nodeType":"YulFunctionCall","src":"10671:42:6"},"nodeType":"YulExpressionStatement","src":"10671:42:6"}]},"name":"store_literal_in_memory_f4e3a9b3b1fc30422312f1ccef7102bacc3a67e9bc871186eb199255d0acd3b0","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10584:6:6","type":""}],"src":"10486:234:6"},{"body":{"nodeType":"YulBlock","src":"10872:220:6","statements":[{"nodeType":"YulAssignment","src":"10882:74:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10948:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"10953:2:6","type":"","value":"47"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10889:58:6"},"nodeType":"YulFunctionCall","src":"10889:67:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10882:3:6"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11054:3:6"}],"functionName":{"name":"store_literal_in_memory_f4e3a9b3b1fc30422312f1ccef7102bacc3a67e9bc871186eb199255d0acd3b0","nodeType":"YulIdentifier","src":"10965:88:6"},"nodeType":"YulFunctionCall","src":"10965:93:6"},"nodeType":"YulExpressionStatement","src":"10965:93:6"},{"nodeType":"YulAssignment","src":"11067:19:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11078:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"11083:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11074:3:6"},"nodeType":"YulFunctionCall","src":"11074:12:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11067:3:6"}]}]},"name":"abi_encode_t_stringliteral_f4e3a9b3b1fc30422312f1ccef7102bacc3a67e9bc871186eb199255d0acd3b0_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10860:3:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10868:3:6","type":""}],"src":"10726:366:6"},{"body":{"nodeType":"YulBlock","src":"11269:248:6","statements":[{"nodeType":"YulAssignment","src":"11279:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11291:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"11302:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11287:3:6"},"nodeType":"YulFunctionCall","src":"11287:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11279:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11326:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"11337:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11322:3:6"},"nodeType":"YulFunctionCall","src":"11322:17:6"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11345:4:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"11351:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11341:3:6"},"nodeType":"YulFunctionCall","src":"11341:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11315:6:6"},"nodeType":"YulFunctionCall","src":"11315:47:6"},"nodeType":"YulExpressionStatement","src":"11315:47:6"},{"nodeType":"YulAssignment","src":"11371:139:6","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11505:4:6"}],"functionName":{"name":"abi_encode_t_stringliteral_f4e3a9b3b1fc30422312f1ccef7102bacc3a67e9bc871186eb199255d0acd3b0_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11379:124:6"},"nodeType":"YulFunctionCall","src":"11379:131:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11371:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_f4e3a9b3b1fc30422312f1ccef7102bacc3a67e9bc871186eb199255d0acd3b0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11249:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11264:4:6","type":""}],"src":"11098:419:6"},{"body":{"nodeType":"YulBlock","src":"11629:61:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11651:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"11659:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11647:3:6"},"nodeType":"YulFunctionCall","src":"11647:14:6"},{"hexValue":"496e76616c6964206465706f7369744964","kind":"string","nodeType":"YulLiteral","src":"11663:19:6","type":"","value":"Invalid depositId"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11640:6:6"},"nodeType":"YulFunctionCall","src":"11640:43:6"},"nodeType":"YulExpressionStatement","src":"11640:43:6"}]},"name":"store_literal_in_memory_b0d4b076e801a43306847486ec53423625901d5e41e754cee65ff10ec7efb530","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11621:6:6","type":""}],"src":"11523:167:6"},{"body":{"nodeType":"YulBlock","src":"11842:220:6","statements":[{"nodeType":"YulAssignment","src":"11852:74:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11918:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"11923:2:6","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11859:58:6"},"nodeType":"YulFunctionCall","src":"11859:67:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11852:3:6"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12024:3:6"}],"functionName":{"name":"store_literal_in_memory_b0d4b076e801a43306847486ec53423625901d5e41e754cee65ff10ec7efb530","nodeType":"YulIdentifier","src":"11935:88:6"},"nodeType":"YulFunctionCall","src":"11935:93:6"},"nodeType":"YulExpressionStatement","src":"11935:93:6"},{"nodeType":"YulAssignment","src":"12037:19:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12048:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"12053:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12044:3:6"},"nodeType":"YulFunctionCall","src":"12044:12:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12037:3:6"}]}]},"name":"abi_encode_t_stringliteral_b0d4b076e801a43306847486ec53423625901d5e41e754cee65ff10ec7efb530_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11830:3:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11838:3:6","type":""}],"src":"11696:366:6"},{"body":{"nodeType":"YulBlock","src":"12239:248:6","statements":[{"nodeType":"YulAssignment","src":"12249:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12261:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"12272:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12257:3:6"},"nodeType":"YulFunctionCall","src":"12257:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12249:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12296:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"12307:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12292:3:6"},"nodeType":"YulFunctionCall","src":"12292:17:6"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12315:4:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"12321:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12311:3:6"},"nodeType":"YulFunctionCall","src":"12311:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12285:6:6"},"nodeType":"YulFunctionCall","src":"12285:47:6"},"nodeType":"YulExpressionStatement","src":"12285:47:6"},{"nodeType":"YulAssignment","src":"12341:139:6","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12475:4:6"}],"functionName":{"name":"abi_encode_t_stringliteral_b0d4b076e801a43306847486ec53423625901d5e41e754cee65ff10ec7efb530_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12349:124:6"},"nodeType":"YulFunctionCall","src":"12349:131:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12341:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_b0d4b076e801a43306847486ec53423625901d5e41e754cee65ff10ec7efb530__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12219:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12234:4:6","type":""}],"src":"12068:419:6"},{"body":{"nodeType":"YulBlock","src":"12556:80:6","statements":[{"nodeType":"YulAssignment","src":"12566:22:6","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12581:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12575:5:6"},"nodeType":"YulFunctionCall","src":"12575:13:6"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"12566:5:6"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12624:5:6"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"12597:26:6"},"nodeType":"YulFunctionCall","src":"12597:33:6"},"nodeType":"YulExpressionStatement","src":"12597:33:6"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"12534:6:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"12542:3:6","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"12550:5:6","type":""}],"src":"12493:143:6"},{"body":{"nodeType":"YulBlock","src":"12719:274:6","statements":[{"body":{"nodeType":"YulBlock","src":"12765:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12767:77:6"},"nodeType":"YulFunctionCall","src":"12767:79:6"},"nodeType":"YulExpressionStatement","src":"12767:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12740:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"12749:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12736:3:6"},"nodeType":"YulFunctionCall","src":"12736:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"12761:2:6","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12732:3:6"},"nodeType":"YulFunctionCall","src":"12732:32:6"},"nodeType":"YulIf","src":"12729:119:6"},{"nodeType":"YulBlock","src":"12858:128:6","statements":[{"nodeType":"YulVariableDeclaration","src":"12873:15:6","value":{"kind":"number","nodeType":"YulLiteral","src":"12887:1:6","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12877:6:6","type":""}]},{"nodeType":"YulAssignment","src":"12902:74:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12948:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"12959:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12944:3:6"},"nodeType":"YulFunctionCall","src":"12944:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12968:7:6"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"12912:31:6"},"nodeType":"YulFunctionCall","src":"12912:64:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12902:6:6"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12689:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12700:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12712:6:6","type":""}],"src":"12642:351:6"},{"body":{"nodeType":"YulBlock","src":"13042:190:6","statements":[{"nodeType":"YulAssignment","src":"13052:33:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13079:5:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"13061:17:6"},"nodeType":"YulFunctionCall","src":"13061:24:6"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"13052:5:6"}]},{"body":{"nodeType":"YulBlock","src":"13175:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"13177:16:6"},"nodeType":"YulFunctionCall","src":"13177:18:6"},"nodeType":"YulExpressionStatement","src":"13177:18:6"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13100:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"13107:66:6","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"13097:2:6"},"nodeType":"YulFunctionCall","src":"13097:77:6"},"nodeType":"YulIf","src":"13094:103:6"},{"nodeType":"YulAssignment","src":"13206:20:6","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13217:5:6"},{"kind":"number","nodeType":"YulLiteral","src":"13224:1:6","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13213:3:6"},"nodeType":"YulFunctionCall","src":"13213:13:6"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"13206:3:6"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13028:5:6","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"13038:3:6","type":""}],"src":"12999:233:6"},{"body":{"nodeType":"YulBlock","src":"13344:119:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13366:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"13374:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13362:3:6"},"nodeType":"YulFunctionCall","src":"13362:14:6"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"13378:34:6","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13355:6:6"},"nodeType":"YulFunctionCall","src":"13355:58:6"},"nodeType":"YulExpressionStatement","src":"13355:58:6"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13434:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"13442:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13430:3:6"},"nodeType":"YulFunctionCall","src":"13430:15:6"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"13447:8:6","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13423:6:6"},"nodeType":"YulFunctionCall","src":"13423:33:6"},"nodeType":"YulExpressionStatement","src":"13423:33:6"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13336:6:6","type":""}],"src":"13238:225:6"},{"body":{"nodeType":"YulBlock","src":"13615:220:6","statements":[{"nodeType":"YulAssignment","src":"13625:74:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13691:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"13696:2:6","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13632:58:6"},"nodeType":"YulFunctionCall","src":"13632:67:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13625:3:6"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13797:3:6"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"13708:88:6"},"nodeType":"YulFunctionCall","src":"13708:93:6"},"nodeType":"YulExpressionStatement","src":"13708:93:6"},{"nodeType":"YulAssignment","src":"13810:19:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13821:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"13826:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13817:3:6"},"nodeType":"YulFunctionCall","src":"13817:12:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13810:3:6"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13603:3:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13611:3:6","type":""}],"src":"13469:366:6"},{"body":{"nodeType":"YulBlock","src":"14012:248:6","statements":[{"nodeType":"YulAssignment","src":"14022:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14034:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"14045:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14030:3:6"},"nodeType":"YulFunctionCall","src":"14030:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14022:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14069:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"14080:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14065:3:6"},"nodeType":"YulFunctionCall","src":"14065:17:6"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14088:4:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"14094:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14084:3:6"},"nodeType":"YulFunctionCall","src":"14084:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14058:6:6"},"nodeType":"YulFunctionCall","src":"14058:47:6"},"nodeType":"YulExpressionStatement","src":"14058:47:6"},{"nodeType":"YulAssignment","src":"14114:139:6","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14248:4:6"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14122:124:6"},"nodeType":"YulFunctionCall","src":"14122:131:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14114:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13992:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14007:4:6","type":""}],"src":"13841:419:6"},{"body":{"nodeType":"YulBlock","src":"14372:71:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14394:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"14402:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14390:3:6"},"nodeType":"YulFunctionCall","src":"14390:14:6"},{"hexValue":"6d696e206c696d697420302e303031206973207265717569726564","kind":"string","nodeType":"YulLiteral","src":"14406:29:6","type":"","value":"min limit 0.001 is required"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14383:6:6"},"nodeType":"YulFunctionCall","src":"14383:53:6"},"nodeType":"YulExpressionStatement","src":"14383:53:6"}]},"name":"store_literal_in_memory_6971b753d423ad7dfd2382591dead197ea2029a59c447576b2f2841e6bb92de2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14364:6:6","type":""}],"src":"14266:177:6"},{"body":{"nodeType":"YulBlock","src":"14595:220:6","statements":[{"nodeType":"YulAssignment","src":"14605:74:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14671:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"14676:2:6","type":"","value":"27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14612:58:6"},"nodeType":"YulFunctionCall","src":"14612:67:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14605:3:6"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14777:3:6"}],"functionName":{"name":"store_literal_in_memory_6971b753d423ad7dfd2382591dead197ea2029a59c447576b2f2841e6bb92de2","nodeType":"YulIdentifier","src":"14688:88:6"},"nodeType":"YulFunctionCall","src":"14688:93:6"},"nodeType":"YulExpressionStatement","src":"14688:93:6"},{"nodeType":"YulAssignment","src":"14790:19:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14801:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"14806:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14797:3:6"},"nodeType":"YulFunctionCall","src":"14797:12:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14790:3:6"}]}]},"name":"abi_encode_t_stringliteral_6971b753d423ad7dfd2382591dead197ea2029a59c447576b2f2841e6bb92de2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14583:3:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14591:3:6","type":""}],"src":"14449:366:6"},{"body":{"nodeType":"YulBlock","src":"14992:248:6","statements":[{"nodeType":"YulAssignment","src":"15002:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15014:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"15025:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15010:3:6"},"nodeType":"YulFunctionCall","src":"15010:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15002:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15049:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"15060:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15045:3:6"},"nodeType":"YulFunctionCall","src":"15045:17:6"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15068:4:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"15074:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15064:3:6"},"nodeType":"YulFunctionCall","src":"15064:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15038:6:6"},"nodeType":"YulFunctionCall","src":"15038:47:6"},"nodeType":"YulExpressionStatement","src":"15038:47:6"},{"nodeType":"YulAssignment","src":"15094:139:6","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15228:4:6"}],"functionName":{"name":"abi_encode_t_stringliteral_6971b753d423ad7dfd2382591dead197ea2029a59c447576b2f2841e6bb92de2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15102:124:6"},"nodeType":"YulFunctionCall","src":"15102:131:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15094:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_6971b753d423ad7dfd2382591dead197ea2029a59c447576b2f2841e6bb92de2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14972:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14987:4:6","type":""}],"src":"14821:419:6"},{"body":{"nodeType":"YulBlock","src":"15352:56:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15374:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"15382:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15370:3:6"},"nodeType":"YulFunctionCall","src":"15370:14:6"},{"hexValue":"496e76616c696420706c616e","kind":"string","nodeType":"YulLiteral","src":"15386:14:6","type":"","value":"Invalid plan"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15363:6:6"},"nodeType":"YulFunctionCall","src":"15363:38:6"},"nodeType":"YulExpressionStatement","src":"15363:38:6"}]},"name":"store_literal_in_memory_e3a0ac30dcb59102a25d4dccd4376d92aa17cbd01ab4a90a0b15680c71aedb3e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15344:6:6","type":""}],"src":"15246:162:6"},{"body":{"nodeType":"YulBlock","src":"15560:220:6","statements":[{"nodeType":"YulAssignment","src":"15570:74:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15636:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"15641:2:6","type":"","value":"12"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15577:58:6"},"nodeType":"YulFunctionCall","src":"15577:67:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15570:3:6"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15742:3:6"}],"functionName":{"name":"store_literal_in_memory_e3a0ac30dcb59102a25d4dccd4376d92aa17cbd01ab4a90a0b15680c71aedb3e","nodeType":"YulIdentifier","src":"15653:88:6"},"nodeType":"YulFunctionCall","src":"15653:93:6"},"nodeType":"YulExpressionStatement","src":"15653:93:6"},{"nodeType":"YulAssignment","src":"15755:19:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15766:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"15771:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15762:3:6"},"nodeType":"YulFunctionCall","src":"15762:12:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15755:3:6"}]}]},"name":"abi_encode_t_stringliteral_e3a0ac30dcb59102a25d4dccd4376d92aa17cbd01ab4a90a0b15680c71aedb3e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15548:3:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15556:3:6","type":""}],"src":"15414:366:6"},{"body":{"nodeType":"YulBlock","src":"15957:248:6","statements":[{"nodeType":"YulAssignment","src":"15967:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15979:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"15990:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15975:3:6"},"nodeType":"YulFunctionCall","src":"15975:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15967:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16014:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"16025:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16010:3:6"},"nodeType":"YulFunctionCall","src":"16010:17:6"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16033:4:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"16039:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16029:3:6"},"nodeType":"YulFunctionCall","src":"16029:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16003:6:6"},"nodeType":"YulFunctionCall","src":"16003:47:6"},"nodeType":"YulExpressionStatement","src":"16003:47:6"},{"nodeType":"YulAssignment","src":"16059:139:6","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16193:4:6"}],"functionName":{"name":"abi_encode_t_stringliteral_e3a0ac30dcb59102a25d4dccd4376d92aa17cbd01ab4a90a0b15680c71aedb3e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16067:124:6"},"nodeType":"YulFunctionCall","src":"16067:131:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16059:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_e3a0ac30dcb59102a25d4dccd4376d92aa17cbd01ab4a90a0b15680c71aedb3e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15937:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15952:4:6","type":""}],"src":"15786:419:6"},{"body":{"nodeType":"YulBlock","src":"16365:288:6","statements":[{"nodeType":"YulAssignment","src":"16375:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16387:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"16398:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16383:3:6"},"nodeType":"YulFunctionCall","src":"16383:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16375:4:6"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16455:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16468:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"16479:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16464:3:6"},"nodeType":"YulFunctionCall","src":"16464:17:6"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"16411:43:6"},"nodeType":"YulFunctionCall","src":"16411:71:6"},"nodeType":"YulExpressionStatement","src":"16411:71:6"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16536:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16549:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"16560:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16545:3:6"},"nodeType":"YulFunctionCall","src":"16545:18:6"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"16492:43:6"},"nodeType":"YulFunctionCall","src":"16492:72:6"},"nodeType":"YulExpressionStatement","src":"16492:72:6"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"16618:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16631:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"16642:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16627:3:6"},"nodeType":"YulFunctionCall","src":"16627:18:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"16574:43:6"},"nodeType":"YulFunctionCall","src":"16574:72:6"},"nodeType":"YulExpressionStatement","src":"16574:72:6"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16321:9:6","type":""},{"name":"value2","nodeType":"YulTypedName","src":"16333:6:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16341:6:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16349:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16360:4:6","type":""}],"src":"16211:442:6"},{"body":{"nodeType":"YulBlock","src":"16781:202:6","statements":[{"nodeType":"YulAssignment","src":"16791:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16803:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"16814:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16799:3:6"},"nodeType":"YulFunctionCall","src":"16799:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16791:4:6"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16867:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16880:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"16891:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16876:3:6"},"nodeType":"YulFunctionCall","src":"16876:17:6"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"16827:39:6"},"nodeType":"YulFunctionCall","src":"16827:67:6"},"nodeType":"YulExpressionStatement","src":"16827:67:6"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16948:6:6"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16961:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"16972:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16957:3:6"},"nodeType":"YulFunctionCall","src":"16957:18:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"16904:43:6"},"nodeType":"YulFunctionCall","src":"16904:72:6"},"nodeType":"YulExpressionStatement","src":"16904:72:6"}]},"name":"abi_encode_tuple_t_uint8_t_uint256__to_t_uint8_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16745:9:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16757:6:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16765:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16776:4:6","type":""}],"src":"16659:324:6"},{"body":{"nodeType":"YulBlock","src":"17095:75:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17117:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"17125:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17113:3:6"},"nodeType":"YulFunctionCall","src":"17113:14:6"},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","kind":"string","nodeType":"YulLiteral","src":"17129:33:6","type":"","value":"ReentrancyGuard: reentrant call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17106:6:6"},"nodeType":"YulFunctionCall","src":"17106:57:6"},"nodeType":"YulExpressionStatement","src":"17106:57:6"}]},"name":"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17087:6:6","type":""}],"src":"16989:181:6"},{"body":{"nodeType":"YulBlock","src":"17322:220:6","statements":[{"nodeType":"YulAssignment","src":"17332:74:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17398:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"17403:2:6","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17339:58:6"},"nodeType":"YulFunctionCall","src":"17339:67:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17332:3:6"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17504:3:6"}],"functionName":{"name":"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","nodeType":"YulIdentifier","src":"17415:88:6"},"nodeType":"YulFunctionCall","src":"17415:93:6"},"nodeType":"YulExpressionStatement","src":"17415:93:6"},{"nodeType":"YulAssignment","src":"17517:19:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17528:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"17533:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17524:3:6"},"nodeType":"YulFunctionCall","src":"17524:12:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17517:3:6"}]}]},"name":"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17310:3:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17318:3:6","type":""}],"src":"17176:366:6"},{"body":{"nodeType":"YulBlock","src":"17719:248:6","statements":[{"nodeType":"YulAssignment","src":"17729:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17741:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"17752:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17737:3:6"},"nodeType":"YulFunctionCall","src":"17737:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17729:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17776:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"17787:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17772:3:6"},"nodeType":"YulFunctionCall","src":"17772:17:6"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17795:4:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"17801:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17791:3:6"},"nodeType":"YulFunctionCall","src":"17791:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17765:6:6"},"nodeType":"YulFunctionCall","src":"17765:47:6"},"nodeType":"YulExpressionStatement","src":"17765:47:6"},{"nodeType":"YulAssignment","src":"17821:139:6","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17955:4:6"}],"functionName":{"name":"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17829:124:6"},"nodeType":"YulFunctionCall","src":"17829:131:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17821:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17699:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17714:4:6","type":""}],"src":"17548:419:6"},{"body":{"nodeType":"YulBlock","src":"18017:147:6","statements":[{"nodeType":"YulAssignment","src":"18027:25:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18050:1:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"18032:17:6"},"nodeType":"YulFunctionCall","src":"18032:20:6"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"18027:1:6"}]},{"nodeType":"YulAssignment","src":"18061:25:6","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"18084:1:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"18066:17:6"},"nodeType":"YulFunctionCall","src":"18066:20:6"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"18061:1:6"}]},{"nodeType":"YulAssignment","src":"18095:16:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18106:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"18109:1:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18102:3:6"},"nodeType":"YulFunctionCall","src":"18102:9:6"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"18095:3:6"}]},{"body":{"nodeType":"YulBlock","src":"18135:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"18137:16:6"},"nodeType":"YulFunctionCall","src":"18137:18:6"},"nodeType":"YulExpressionStatement","src":"18137:18:6"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18127:1:6"},{"name":"sum","nodeType":"YulIdentifier","src":"18130:3:6"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18124:2:6"},"nodeType":"YulFunctionCall","src":"18124:10:6"},"nodeType":"YulIf","src":"18121:36:6"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"18004:1:6","type":""},{"name":"y","nodeType":"YulTypedName","src":"18007:1:6","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"18013:3:6","type":""}],"src":"17973:191:6"},{"body":{"nodeType":"YulBlock","src":"18198:152:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18215:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18218:77:6","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18208:6:6"},"nodeType":"YulFunctionCall","src":"18208:88:6"},"nodeType":"YulExpressionStatement","src":"18208:88:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18312:1:6","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"18315:4:6","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18305:6:6"},"nodeType":"YulFunctionCall","src":"18305:15:6"},"nodeType":"YulExpressionStatement","src":"18305:15:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18336:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18339:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18329:6:6"},"nodeType":"YulFunctionCall","src":"18329:15:6"},"nodeType":"YulExpressionStatement","src":"18329:15:6"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"18170:180:6"},{"body":{"nodeType":"YulBlock","src":"18398:143:6","statements":[{"nodeType":"YulAssignment","src":"18408:25:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18431:1:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"18413:17:6"},"nodeType":"YulFunctionCall","src":"18413:20:6"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"18408:1:6"}]},{"nodeType":"YulAssignment","src":"18442:25:6","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"18465:1:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"18447:17:6"},"nodeType":"YulFunctionCall","src":"18447:20:6"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"18442:1:6"}]},{"body":{"nodeType":"YulBlock","src":"18489:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"18491:16:6"},"nodeType":"YulFunctionCall","src":"18491:18:6"},"nodeType":"YulExpressionStatement","src":"18491:18:6"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"18486:1:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18479:6:6"},"nodeType":"YulFunctionCall","src":"18479:9:6"},"nodeType":"YulIf","src":"18476:35:6"},{"nodeType":"YulAssignment","src":"18521:14:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18530:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"18533:1:6"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"18526:3:6"},"nodeType":"YulFunctionCall","src":"18526:9:6"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"18521:1:6"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"18387:1:6","type":""},{"name":"y","nodeType":"YulTypedName","src":"18390:1:6","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"18396:1:6","type":""}],"src":"18356:185:6"},{"body":{"nodeType":"YulBlock","src":"18592:149:6","statements":[{"nodeType":"YulAssignment","src":"18602:25:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18625:1:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"18607:17:6"},"nodeType":"YulFunctionCall","src":"18607:20:6"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"18602:1:6"}]},{"nodeType":"YulAssignment","src":"18636:25:6","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"18659:1:6"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"18641:17:6"},"nodeType":"YulFunctionCall","src":"18641:20:6"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"18636:1:6"}]},{"nodeType":"YulAssignment","src":"18670:17:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18682:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"18685:1:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18678:3:6"},"nodeType":"YulFunctionCall","src":"18678:9:6"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"18670:4:6"}]},{"body":{"nodeType":"YulBlock","src":"18712:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"18714:16:6"},"nodeType":"YulFunctionCall","src":"18714:18:6"},"nodeType":"YulExpressionStatement","src":"18714:18:6"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"18703:4:6"},{"name":"x","nodeType":"YulIdentifier","src":"18709:1:6"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18700:2:6"},"nodeType":"YulFunctionCall","src":"18700:11:6"},"nodeType":"YulIf","src":"18697:37:6"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"18578:1:6","type":""},{"name":"y","nodeType":"YulTypedName","src":"18581:1:6","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"18587:4:6","type":""}],"src":"18547:194:6"},{"body":{"nodeType":"YulBlock","src":"18853:76:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18875:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"18883:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18871:3:6"},"nodeType":"YulFunctionCall","src":"18871:14:6"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"18887:34:6","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18864:6:6"},"nodeType":"YulFunctionCall","src":"18864:58:6"},"nodeType":"YulExpressionStatement","src":"18864:58:6"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18845:6:6","type":""}],"src":"18747:182:6"},{"body":{"nodeType":"YulBlock","src":"19081:220:6","statements":[{"nodeType":"YulAssignment","src":"19091:74:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19157:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"19162:2:6","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19098:58:6"},"nodeType":"YulFunctionCall","src":"19098:67:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19091:3:6"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19263:3:6"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"19174:88:6"},"nodeType":"YulFunctionCall","src":"19174:93:6"},"nodeType":"YulExpressionStatement","src":"19174:93:6"},{"nodeType":"YulAssignment","src":"19276:19:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19287:3:6"},{"kind":"number","nodeType":"YulLiteral","src":"19292:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19283:3:6"},"nodeType":"YulFunctionCall","src":"19283:12:6"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19276:3:6"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19069:3:6","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19077:3:6","type":""}],"src":"18935:366:6"},{"body":{"nodeType":"YulBlock","src":"19478:248:6","statements":[{"nodeType":"YulAssignment","src":"19488:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19500:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"19511:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19496:3:6"},"nodeType":"YulFunctionCall","src":"19496:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19488:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19535:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"19546:1:6","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19531:3:6"},"nodeType":"YulFunctionCall","src":"19531:17:6"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19554:4:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"19560:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19550:3:6"},"nodeType":"YulFunctionCall","src":"19550:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19524:6:6"},"nodeType":"YulFunctionCall","src":"19524:47:6"},"nodeType":"YulExpressionStatement","src":"19524:47:6"},{"nodeType":"YulAssignment","src":"19580:139:6","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19714:4:6"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19588:124:6"},"nodeType":"YulFunctionCall","src":"19588:131:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19580:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19458:9:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19473:4:6","type":""}],"src":"19307:419:6"}]},"contents":"{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_uint8(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_uint8_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint8_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_decode_tuple_t_uint8t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$255_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$255_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$255_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$255__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$255_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_5d8e25932fad878d23188e7db9dad713b9765dca1f9eff1d41ceed07dbf63ef0(memPtr) {\n\n        mstore(add(memPtr, 0), \"deposit is already taken\")\n\n    }\n\n    function abi_encode_t_stringliteral_5d8e25932fad878d23188e7db9dad713b9765dca1f9eff1d41ceed07dbf63ef0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_5d8e25932fad878d23188e7db9dad713b9765dca1f9eff1d41ceed07dbf63ef0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5d8e25932fad878d23188e7db9dad713b9765dca1f9eff1d41ceed07dbf63ef0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5d8e25932fad878d23188e7db9dad713b9765dca1f9eff1d41ceed07dbf63ef0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_bbb72649a92b2cfd28eceb736c457db5c7c27cf9b21564f749da66d117c3b026(memPtr) {\n\n        mstore(add(memPtr, 0), \"Tokens are not available, please\")\n\n        mstore(add(memPtr, 32), \" contact admin\")\n\n    }\n\n    function abi_encode_t_stringliteral_bbb72649a92b2cfd28eceb736c457db5c7c27cf9b21564f749da66d117c3b026_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_bbb72649a92b2cfd28eceb736c457db5c7c27cf9b21564f749da66d117c3b026(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bbb72649a92b2cfd28eceb736c457db5c7c27cf9b21564f749da66d117c3b026__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bbb72649a92b2cfd28eceb736c457db5c7c27cf9b21564f749da66d117c3b026_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_f4e3a9b3b1fc30422312f1ccef7102bacc3a67e9bc871186eb199255d0acd3b0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Admin can withdraw less than adm\")\n\n        mstore(add(memPtr, 32), \"inTokens amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_f4e3a9b3b1fc30422312f1ccef7102bacc3a67e9bc871186eb199255d0acd3b0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_f4e3a9b3b1fc30422312f1ccef7102bacc3a67e9bc871186eb199255d0acd3b0(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f4e3a9b3b1fc30422312f1ccef7102bacc3a67e9bc871186eb199255d0acd3b0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f4e3a9b3b1fc30422312f1ccef7102bacc3a67e9bc871186eb199255d0acd3b0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b0d4b076e801a43306847486ec53423625901d5e41e754cee65ff10ec7efb530(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid depositId\")\n\n    }\n\n    function abi_encode_t_stringliteral_b0d4b076e801a43306847486ec53423625901d5e41e754cee65ff10ec7efb530_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_b0d4b076e801a43306847486ec53423625901d5e41e754cee65ff10ec7efb530(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b0d4b076e801a43306847486ec53423625901d5e41e754cee65ff10ec7efb530__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b0d4b076e801a43306847486ec53423625901d5e41e754cee65ff10ec7efb530_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6971b753d423ad7dfd2382591dead197ea2029a59c447576b2f2841e6bb92de2(memPtr) {\n\n        mstore(add(memPtr, 0), \"min limit 0.001 is required\")\n\n    }\n\n    function abi_encode_t_stringliteral_6971b753d423ad7dfd2382591dead197ea2029a59c447576b2f2841e6bb92de2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_6971b753d423ad7dfd2382591dead197ea2029a59c447576b2f2841e6bb92de2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6971b753d423ad7dfd2382591dead197ea2029a59c447576b2f2841e6bb92de2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6971b753d423ad7dfd2382591dead197ea2029a59c447576b2f2841e6bb92de2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e3a0ac30dcb59102a25d4dccd4376d92aa17cbd01ab4a90a0b15680c71aedb3e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid plan\")\n\n    }\n\n    function abi_encode_t_stringliteral_e3a0ac30dcb59102a25d4dccd4376d92aa17cbd01ab4a90a0b15680c71aedb3e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_e3a0ac30dcb59102a25d4dccd4376d92aa17cbd01ab4a90a0b15680c71aedb3e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e3a0ac30dcb59102a25d4dccd4376d92aa17cbd01ab4a90a0b15680c71aedb3e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e3a0ac30dcb59102a25d4dccd4376d92aa17cbd01ab4a90a0b15680c71aedb3e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint8_t_uint256__to_t_uint8_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":6,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061014d5760003560e01c80638da5cb5b116100c3578063c0806b031161007c578063c0806b03146103b9578063ddbcb5fa146103ee578063f02bde541461040c578063f2fde38b1461042a578063f4d4c9d714610446578063fc0c546a146104625761014d565b80638da5cb5b146102ba5780638fa04016146102d8578063a87430ba146102f6578063a8aeb6c214610327578063aecaa63414610357578063b1620616146103885761014d565b806332bc298c1161011557806332bc298c146101e4578063468cd2db146102025780636f9fb98a14610232578063715018a6146102505780637e3abeea1461025a57806389f98fe21461028a5761014d565b806316d3bfbb1461015257806329eae70d1461017057806329fc7bd81461018e5780632e1a7d4d146101ac578063315a095d146101c8575b600080fd5b61015a610480565b6040516101679190611576565b60405180910390f35b610178610494565b6040516101859190611576565b60405180910390f35b61019661049a565b6040516101a39190611576565b60405180910390f35b6101c660048036038101906101c191906115c2565b6104a0565b005b6101e260048036038101906101dd91906115c2565b610824565b005b6101ec610940565b6040516101f99190611576565b60405180910390f35b61021c6004803603810190610217919061164d565b610947565b6040516102299190611576565b60405180910390f35b61023a610b40565b6040516102479190611576565b60405180910390f35b610258610be3565b005b610274600480360381019061026f919061168d565b610bf7565b6040516102819190611576565b60405180910390f35b6102a4600480360381019061029f91906115c2565b610cdf565b6040516102b19190611576565b60405180910390f35b6102c2610d03565b6040516102cf91906116c9565b60405180910390f35b6102e0610d2c565b6040516102ed9190611576565b60405180910390f35b610310600480360381019061030b919061168d565b610d32565b60405161031e9291906116e4565b60405180910390f35b610341600480360381019061033c919061168d565b610d56565b60405161034e9190611576565b60405180910390f35b610371600480360381019061036c9190611746565b610da5565b60405161037f9291906116e4565b60405180910390f35b6103a2600480360381019061039d91906115c2565b610e03565b6040516103b09291906116e4565b60405180910390f35b6103d360048036038101906103ce919061164d565b610e37565b6040516103e59695949392919061179d565b60405180910390f35b6103f6610f7f565b6040516104039190611576565b60405180910390f35b610414610f8a565b6040516104219190611576565b60405180910390f35b610444600480360381019061043f919061168d565b610f90565b005b610460600480360381019061045b91906117fe565b611013565b005b61046a61133d565b604051610477919061189d565b60405180910390f35b6201518061016d61049191906118e7565b81565b60055481565b61271081565b6104a8611363565b60006104b43383610947565b90506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600081600001848154811061051157610510611929565b5b90600052602060002090600402019050600015158160030160009054906101000a900460ff16151514610579576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610570906119b5565b60405180910390fd5b6000806105e16105ce6201518060038660000160009054906101000a900460ff1660ff16815481106105ae576105ad611929565b5b9060005260206000209060020201600001546113b290919063ffffffff16565b84600201546113c890919063ffffffff16565b9050428111156106665761062e61061b61271061060d611a0487600101546113b290919063ffffffff16565b6113de90919063ffffffff16565b84600101546113f490919063ffffffff16565b915061065b61064a8385600101546113f490919063ffffffff16565b6006546113c890919063ffffffff16565b60068190555061069f565b61067d8584600101546113f490919063ffffffff16565b91506106968585600101546113c890919063ffffffff16565b84600101819055505b816106a8610b40565b10156106e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e090611a47565b60405180910390fd5b6107008285600201546113c890919063ffffffff16565b8460020181905550600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610765929190611a67565b6020604051808303816000875af1158015610784573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a89190611abc565b5060018360030160006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d58360405161080c9190611576565b60405180910390a2505050505061082161140a565b50565b61082c611413565b610834611363565b806006541015610879576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087090611b5b565b60405180910390fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016108d6929190611a67565b6020604051808303816000875af11580156108f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109199190611abc565b5061092f816006546113f490919063ffffffff16565b60068190555061093d61140a565b50565b6201518081565b600061095283610d56565b8210610993576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098a90611bc7565b60405180910390fd5b6000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008160000184815481106109ee576109ed611929565b5b906000526020600020906004020190506000610a65610a526201518060038560000160009054906101000a900460ff1660ff1681548110610a3257610a31611929565b5b9060005260206000209060020201600001546113b290919063ffffffff16565b83600201546113c890919063ffffffff16565b90506000610acd612710610abf60038660000160009054906101000a900460ff1660ff1681548110610a9a57610a99611929565b5b90600052602060002090600202016001015486600101546113b290919063ffffffff16565b6113de90919063ffffffff16565b90506000824211610ade5742610ae0565b825b9050600084600201549050610b326201518061016d610aff91906118e7565b610b24610b1584866113f490919063ffffffff16565b866113b290919063ffffffff16565b6113de90919063ffffffff16565b965050505050505092915050565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610b9d91906116c9565b602060405180830381865afa158015610bba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bde9190611bfc565b905090565b610beb611413565b610bf56000611491565b565b600080600090505b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000180549050811015610cd957610cc4600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018281548110610ca357610ca2611929565b5b906000526020600020906004020160010154836113c890919063ffffffff16565b91508080610cd190611c29565b915050610bff565b50919050565b60078181548110610cef57600080fd5b906000526020600020016000915090505481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611a0481565b60026020528060005260406000206000915090508060010154908060020154905082565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001805490509050919050565b60008060038360ff1681548110610dbf57610dbe611929565b5b906000526020600020906002020160000154915060038360ff1681548110610dea57610de9611929565b5b9060005260206000209060020201600101549050915091565b60038181548110610e1357600080fd5b90600052602060002090600202016000915090508060000154908060010154905082565b6000806000806000806000600260008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000816000018981548110610e9b57610e9a611929565b5b906000526020600020906004020190508060000160009054906101000a900460ff16975060038860ff1681548110610ed657610ed5611929565b5b90600052602060002090600202016001015496508060010154955080600201549450610f5d610f4a6201518060038460000160009054906101000a900460ff1660ff1681548110610f2a57610f29611929565b5b9060005260206000209060020201600001546113b290919063ffffffff16565b82600201546113c890919063ffffffff16565b93508060030160009054906101000a900460ff16925050509295509295509295565b66038d7ea4c6800081565b60065481565b610f98611413565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611007576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ffe90611ce3565b60405180910390fd5b61101081611491565b50565b61101b611363565b66038d7ea4c68000811015611065576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161105c90611d4f565b60405180910390fd5b6003805490508260ff16106110af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110a690611dbb565b60405180910390fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161110e93929190611ddb565b6020604051808303816000875af115801561112d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111519190611abc565b506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008160000180549050036111dc577f9fd565cd14c3c391679eb0cad12a14dcf7534e9d3462bcb9b67a098a9bbbc24a336040516111d391906116c9565b60405180910390a15b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160405180608001604052808560ff16815260200184815260200142815260200160001515815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548160ff021916908360ff160217905550602082015181600101556040820151816002015560608201518160030160006101000a81548160ff02191690831515021790555050506112da826005546113c890919063ffffffff16565b6005819055503373ffffffffffffffffffffffffffffffffffffffff167f3a89eb89956dcf6537585a2372d4e629e18622cce06c2b4fee6301ae0840e2418484604051611328929190611e12565b60405180910390a25061133961140a565b5050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6002600154036113a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161139f90611e87565b60405180910390fd5b6002600181905550565b600081836113c091906118e7565b905092915050565b600081836113d69190611ea7565b905092915050565b600081836113ec9190611f0a565b905092915050565b600081836114029190611f3b565b905092915050565b60018081905550565b61141b611555565b73ffffffffffffffffffffffffffffffffffffffff16611439610d03565b73ffffffffffffffffffffffffffffffffffffffff161461148f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161148690611fbb565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000819050919050565b6115708161155d565b82525050565b600060208201905061158b6000830184611567565b92915050565b600080fd5b61159f8161155d565b81146115aa57600080fd5b50565b6000813590506115bc81611596565b92915050565b6000602082840312156115d8576115d7611591565b5b60006115e6848285016115ad565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061161a826115ef565b9050919050565b61162a8161160f565b811461163557600080fd5b50565b60008135905061164781611621565b92915050565b6000806040838503121561166457611663611591565b5b600061167285828601611638565b9250506020611683858286016115ad565b9150509250929050565b6000602082840312156116a3576116a2611591565b5b60006116b184828501611638565b91505092915050565b6116c38161160f565b82525050565b60006020820190506116de60008301846116ba565b92915050565b60006040820190506116f96000830185611567565b6117066020830184611567565b9392505050565b600060ff82169050919050565b6117238161170d565b811461172e57600080fd5b50565b6000813590506117408161171a565b92915050565b60006020828403121561175c5761175b611591565b5b600061176a84828501611731565b91505092915050565b61177c8161170d565b82525050565b60008115159050919050565b61179781611782565b82525050565b600060c0820190506117b26000830189611773565b6117bf6020830188611567565b6117cc6040830187611567565b6117d96060830186611567565b6117e66080830185611567565b6117f360a083018461178e565b979650505050505050565b6000806040838503121561181557611814611591565b5b600061182385828601611731565b9250506020611834858286016115ad565b9150509250929050565b6000819050919050565b600061186361185e611859846115ef565b61183e565b6115ef565b9050919050565b600061187582611848565b9050919050565b60006118878261186a565b9050919050565b6118978161187c565b82525050565b60006020820190506118b2600083018461188e565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006118f28261155d565b91506118fd8361155d565b925082820261190b8161155d565b91508282048414831517611922576119216118b8565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082825260208201905092915050565b7f6465706f73697420697320616c72656164792074616b656e0000000000000000600082015250565b600061199f601883611958565b91506119aa82611969565b602082019050919050565b600060208201905081810360008301526119ce81611992565b9050919050565b7f546f6b656e7320617265206e6f7420617661696c61626c652c20706c6561736560008201527f20636f6e746163742061646d696e000000000000000000000000000000000000602082015250565b6000611a31602e83611958565b9150611a3c826119d5565b604082019050919050565b60006020820190508181036000830152611a6081611a24565b9050919050565b6000604082019050611a7c60008301856116ba565b611a896020830184611567565b9392505050565b611a9981611782565b8114611aa457600080fd5b50565b600081519050611ab681611a90565b92915050565b600060208284031215611ad257611ad1611591565b5b6000611ae084828501611aa7565b91505092915050565b7f41646d696e2063616e207769746864726177206c657373207468616e2061646d60008201527f696e546f6b656e7320616d6f756e740000000000000000000000000000000000602082015250565b6000611b45602f83611958565b9150611b5082611ae9565b604082019050919050565b60006020820190508181036000830152611b7481611b38565b9050919050565b7f496e76616c6964206465706f7369744964000000000000000000000000000000600082015250565b6000611bb1601183611958565b9150611bbc82611b7b565b602082019050919050565b60006020820190508181036000830152611be081611ba4565b9050919050565b600081519050611bf681611596565b92915050565b600060208284031215611c1257611c11611591565b5b6000611c2084828501611be7565b91505092915050565b6000611c348261155d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611c6657611c656118b8565b5b600182019050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611ccd602683611958565b9150611cd882611c71565b604082019050919050565b60006020820190508181036000830152611cfc81611cc0565b9050919050565b7f6d696e206c696d697420302e3030312069732072657175697265640000000000600082015250565b6000611d39601b83611958565b9150611d4482611d03565b602082019050919050565b60006020820190508181036000830152611d6881611d2c565b9050919050565b7f496e76616c696420706c616e0000000000000000000000000000000000000000600082015250565b6000611da5600c83611958565b9150611db082611d6f565b602082019050919050565b60006020820190508181036000830152611dd481611d98565b9050919050565b6000606082019050611df060008301866116ba565b611dfd60208301856116ba565b611e0a6040830184611567565b949350505050565b6000604082019050611e276000830185611773565b611e346020830184611567565b9392505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000611e71601f83611958565b9150611e7c82611e3b565b602082019050919050565b60006020820190508181036000830152611ea081611e64565b9050919050565b6000611eb28261155d565b9150611ebd8361155d565b9250828201905080821115611ed557611ed46118b8565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611f158261155d565b9150611f208361155d565b925082611f3057611f2f611edb565b5b828204905092915050565b6000611f468261155d565b9150611f518361155d565b9250828203905081811115611f6957611f686118b8565b5b92915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611fa5602083611958565b9150611fb082611f6f565b602082019050919050565b60006020820190508181036000830152611fd481611f98565b905091905056fea26469706673582212208d9748073e6993033f4e94f28906ae7c2d17e8a2822014f3c85efda4c0a1b1c664736f6c63430008120033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xC0806B03 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xC0806B03 EQ PUSH2 0x3B9 JUMPI DUP1 PUSH4 0xDDBCB5FA EQ PUSH2 0x3EE JUMPI DUP1 PUSH4 0xF02BDE54 EQ PUSH2 0x40C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x42A JUMPI DUP1 PUSH4 0xF4D4C9D7 EQ PUSH2 0x446 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x462 JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x8FA04016 EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0xA87430BA EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0xA8AEB6C2 EQ PUSH2 0x327 JUMPI DUP1 PUSH4 0xAECAA634 EQ PUSH2 0x357 JUMPI DUP1 PUSH4 0xB1620616 EQ PUSH2 0x388 JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x32BC298C GT PUSH2 0x115 JUMPI DUP1 PUSH4 0x32BC298C EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x468CD2DB EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0x6F9FB98A EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x7E3ABEEA EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x89F98FE2 EQ PUSH2 0x28A JUMPI PUSH2 0x14D JUMP JUMPDEST DUP1 PUSH4 0x16D3BFBB EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x29EAE70D EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x29FC7BD8 EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x315A095D EQ PUSH2 0x1C8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15A PUSH2 0x480 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x1576 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH2 0x494 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x1576 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x196 PUSH2 0x49A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x1576 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C1 SWAP2 SWAP1 PUSH2 0x15C2 JUMP JUMPDEST PUSH2 0x4A0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0x15C2 JUMP JUMPDEST PUSH2 0x824 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EC PUSH2 0x940 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x1576 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x217 SWAP2 SWAP1 PUSH2 0x164D JUMP JUMPDEST PUSH2 0x947 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x1576 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23A PUSH2 0xB40 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x247 SWAP2 SWAP1 PUSH2 0x1576 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x258 PUSH2 0xBE3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x274 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x168D JUMP JUMPDEST PUSH2 0xBF7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x281 SWAP2 SWAP1 PUSH2 0x1576 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29F SWAP2 SWAP1 PUSH2 0x15C2 JUMP JUMPDEST PUSH2 0xCDF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B1 SWAP2 SWAP1 PUSH2 0x1576 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C2 PUSH2 0xD03 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CF SWAP2 SWAP1 PUSH2 0x16C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E0 PUSH2 0xD2C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2ED SWAP2 SWAP1 PUSH2 0x1576 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x310 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30B SWAP2 SWAP1 PUSH2 0x168D JUMP JUMPDEST PUSH2 0xD32 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31E SWAP3 SWAP2 SWAP1 PUSH2 0x16E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x341 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33C SWAP2 SWAP1 PUSH2 0x168D JUMP JUMPDEST PUSH2 0xD56 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34E SWAP2 SWAP1 PUSH2 0x1576 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x371 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36C SWAP2 SWAP1 PUSH2 0x1746 JUMP JUMPDEST PUSH2 0xDA5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37F SWAP3 SWAP2 SWAP1 PUSH2 0x16E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39D SWAP2 SWAP1 PUSH2 0x15C2 JUMP JUMPDEST PUSH2 0xE03 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B0 SWAP3 SWAP2 SWAP1 PUSH2 0x16E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CE SWAP2 SWAP1 PUSH2 0x164D JUMP JUMPDEST PUSH2 0xE37 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E5 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x179D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F6 PUSH2 0xF7F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x403 SWAP2 SWAP1 PUSH2 0x1576 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x414 PUSH2 0xF8A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x421 SWAP2 SWAP1 PUSH2 0x1576 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x444 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43F SWAP2 SWAP1 PUSH2 0x168D JUMP JUMPDEST PUSH2 0xF90 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x460 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45B SWAP2 SWAP1 PUSH2 0x17FE JUMP JUMPDEST PUSH2 0x1013 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x46A PUSH2 0x133D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x477 SWAP2 SWAP1 PUSH2 0x189D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x15180 PUSH2 0x16D PUSH2 0x491 SWAP2 SWAP1 PUSH2 0x18E7 JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH2 0x4A8 PUSH2 0x1363 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B4 CALLER DUP4 PUSH2 0x947 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x511 JUMPI PUSH2 0x510 PUSH2 0x1929 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 ISZERO ISZERO DUP2 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x579 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x570 SWAP1 PUSH2 0x19B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5E1 PUSH2 0x5CE PUSH3 0x15180 PUSH1 0x3 DUP7 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x5AE JUMPI PUSH2 0x5AD PUSH2 0x1929 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD PUSH2 0x13B2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x2 ADD SLOAD PUSH2 0x13C8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP TIMESTAMP DUP2 GT ISZERO PUSH2 0x666 JUMPI PUSH2 0x62E PUSH2 0x61B PUSH2 0x2710 PUSH2 0x60D PUSH2 0x1A04 DUP8 PUSH1 0x1 ADD SLOAD PUSH2 0x13B2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x13DE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0x13F4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH2 0x65B PUSH2 0x64A DUP4 DUP6 PUSH1 0x1 ADD SLOAD PUSH2 0x13F4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x13C8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH2 0x69F JUMP JUMPDEST PUSH2 0x67D DUP6 DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0x13F4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH2 0x696 DUP6 DUP6 PUSH1 0x1 ADD SLOAD PUSH2 0x13C8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH2 0x6A8 PUSH2 0xB40 JUMP JUMPDEST LT ISZERO PUSH2 0x6E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E0 SWAP1 PUSH2 0x1A47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x700 DUP3 DUP6 PUSH1 0x2 ADD SLOAD PUSH2 0x13C8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x765 SWAP3 SWAP2 SWAP1 PUSH2 0x1A67 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x784 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7A8 SWAP2 SWAP1 PUSH2 0x1ABC JUMP JUMPDEST POP PUSH1 0x1 DUP4 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x80C SWAP2 SWAP1 PUSH2 0x1576 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP PUSH2 0x821 PUSH2 0x140A JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x82C PUSH2 0x1413 JUMP JUMPDEST PUSH2 0x834 PUSH2 0x1363 JUMP JUMPDEST DUP1 PUSH1 0x6 SLOAD LT ISZERO PUSH2 0x879 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x870 SWAP1 PUSH2 0x1B5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D6 SWAP3 SWAP2 SWAP1 PUSH2 0x1A67 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8F5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x919 SWAP2 SWAP1 PUSH2 0x1ABC JUMP JUMPDEST POP PUSH2 0x92F DUP2 PUSH1 0x6 SLOAD PUSH2 0x13F4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH2 0x93D PUSH2 0x140A JUMP JUMPDEST POP JUMP JUMPDEST PUSH3 0x15180 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x952 DUP4 PUSH2 0xD56 JUMP JUMPDEST DUP3 LT PUSH2 0x993 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x98A SWAP1 PUSH2 0x1BC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x9EE JUMPI PUSH2 0x9ED PUSH2 0x1929 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP PUSH1 0x0 PUSH2 0xA65 PUSH2 0xA52 PUSH3 0x15180 PUSH1 0x3 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0xA32 JUMPI PUSH2 0xA31 PUSH2 0x1929 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD PUSH2 0x13B2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x2 ADD SLOAD PUSH2 0x13C8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xACD PUSH2 0x2710 PUSH2 0xABF PUSH1 0x3 DUP7 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0xA9A JUMPI PUSH2 0xA99 PUSH2 0x1929 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD DUP7 PUSH1 0x1 ADD SLOAD PUSH2 0x13B2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x13DE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 TIMESTAMP GT PUSH2 0xADE JUMPI TIMESTAMP PUSH2 0xAE0 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH1 0x2 ADD SLOAD SWAP1 POP PUSH2 0xB32 PUSH3 0x15180 PUSH2 0x16D PUSH2 0xAFF SWAP2 SWAP1 PUSH2 0x18E7 JUMP JUMPDEST PUSH2 0xB24 PUSH2 0xB15 DUP5 DUP7 PUSH2 0x13F4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP7 PUSH2 0x13B2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x13DE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP7 POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB9D SWAP2 SWAP1 PUSH2 0x16C9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBBA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBDE SWAP2 SWAP1 PUSH2 0x1BFC JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xBEB PUSH2 0x1413 JUMP JUMPDEST PUSH2 0xBF5 PUSH1 0x0 PUSH2 0x1491 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xCD9 JUMPI PUSH2 0xCC4 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xCA3 JUMPI PUSH2 0xCA2 PUSH2 0x1929 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD SLOAD DUP4 PUSH2 0x13C8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH2 0xCD1 SWAP1 PUSH2 0x1C29 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xBFF JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xCEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1A04 DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 DUP4 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0xDBF JUMPI PUSH2 0xDBE PUSH2 0x1929 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD SWAP2 POP PUSH1 0x3 DUP4 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0xDEA JUMPI PUSH2 0xDE9 PUSH2 0x1929 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xE13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP10 DUP2 SLOAD DUP2 LT PUSH2 0xE9B JUMPI PUSH2 0xE9A PUSH2 0x1929 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP8 POP PUSH1 0x3 DUP9 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0xED6 JUMPI PUSH2 0xED5 PUSH2 0x1929 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP7 POP DUP1 PUSH1 0x1 ADD SLOAD SWAP6 POP DUP1 PUSH1 0x2 ADD SLOAD SWAP5 POP PUSH2 0xF5D PUSH2 0xF4A PUSH3 0x15180 PUSH1 0x3 DUP5 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0xF2A JUMPI PUSH2 0xF29 PUSH2 0x1929 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD PUSH2 0x13B2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x2 ADD SLOAD PUSH2 0x13C8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP3 POP POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH7 0x38D7EA4C68000 DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xF98 PUSH2 0x1413 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1007 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFFE SWAP1 PUSH2 0x1CE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1010 DUP2 PUSH2 0x1491 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x101B PUSH2 0x1363 JUMP JUMPDEST PUSH7 0x38D7EA4C68000 DUP2 LT ISZERO PUSH2 0x1065 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x105C SWAP1 PUSH2 0x1D4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD SWAP1 POP DUP3 PUSH1 0xFF AND LT PUSH2 0x10AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10A6 SWAP1 PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x110E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DDB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x112D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1151 SWAP2 SWAP1 PUSH2 0x1ABC JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SUB PUSH2 0x11DC JUMPI PUSH32 0x9FD565CD14C3C391679EB0CAD12A14DCF7534E9D3462BCB9B67A098A9BBBC24A CALLER PUSH1 0x40 MLOAD PUSH2 0x11D3 SWAP2 SWAP1 PUSH2 0x16C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x12DA DUP3 PUSH1 0x5 SLOAD PUSH2 0x13C8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3A89EB89956DCF6537585A2372D4E629E18622CCE06C2B4FEE6301AE0840E241 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1328 SWAP3 SWAP2 SWAP1 PUSH2 0x1E12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x1339 PUSH2 0x140A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x13A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x139F SWAP1 PUSH2 0x1E87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x13C0 SWAP2 SWAP1 PUSH2 0x18E7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x13D6 SWAP2 SWAP1 PUSH2 0x1EA7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x13EC SWAP2 SWAP1 PUSH2 0x1F0A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1402 SWAP2 SWAP1 PUSH2 0x1F3B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x141B PUSH2 0x1555 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1439 PUSH2 0xD03 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x148F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1486 SWAP1 PUSH2 0x1FBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1570 DUP2 PUSH2 0x155D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x158B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1567 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x159F DUP2 PUSH2 0x155D JUMP JUMPDEST DUP2 EQ PUSH2 0x15AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15BC DUP2 PUSH2 0x1596 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15D8 JUMPI PUSH2 0x15D7 PUSH2 0x1591 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15E6 DUP5 DUP3 DUP6 ADD PUSH2 0x15AD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x161A DUP3 PUSH2 0x15EF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x162A DUP2 PUSH2 0x160F JUMP JUMPDEST DUP2 EQ PUSH2 0x1635 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1647 DUP2 PUSH2 0x1621 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1664 JUMPI PUSH2 0x1663 PUSH2 0x1591 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1672 DUP6 DUP3 DUP7 ADD PUSH2 0x1638 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1683 DUP6 DUP3 DUP7 ADD PUSH2 0x15AD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16A3 JUMPI PUSH2 0x16A2 PUSH2 0x1591 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16B1 DUP5 DUP3 DUP6 ADD PUSH2 0x1638 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16C3 DUP2 PUSH2 0x160F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16DE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x16F9 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1567 JUMP JUMPDEST PUSH2 0x1706 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1567 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1723 DUP2 PUSH2 0x170D JUMP JUMPDEST DUP2 EQ PUSH2 0x172E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1740 DUP2 PUSH2 0x171A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x175C JUMPI PUSH2 0x175B PUSH2 0x1591 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x176A DUP5 DUP3 DUP6 ADD PUSH2 0x1731 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x177C DUP2 PUSH2 0x170D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1797 DUP2 PUSH2 0x1782 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x17B2 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x1773 JUMP JUMPDEST PUSH2 0x17BF PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x1567 JUMP JUMPDEST PUSH2 0x17CC PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x1567 JUMP JUMPDEST PUSH2 0x17D9 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x1567 JUMP JUMPDEST PUSH2 0x17E6 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1567 JUMP JUMPDEST PUSH2 0x17F3 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x178E JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1815 JUMPI PUSH2 0x1814 PUSH2 0x1591 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1823 DUP6 DUP3 DUP7 ADD PUSH2 0x1731 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1834 DUP6 DUP3 DUP7 ADD PUSH2 0x15AD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1863 PUSH2 0x185E PUSH2 0x1859 DUP5 PUSH2 0x15EF JUMP JUMPDEST PUSH2 0x183E JUMP JUMPDEST PUSH2 0x15EF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1875 DUP3 PUSH2 0x1848 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1887 DUP3 PUSH2 0x186A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1897 DUP2 PUSH2 0x187C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18B2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x188E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x18F2 DUP3 PUSH2 0x155D JUMP JUMPDEST SWAP2 POP PUSH2 0x18FD DUP4 PUSH2 0x155D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x190B DUP2 PUSH2 0x155D JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1922 JUMPI PUSH2 0x1921 PUSH2 0x18B8 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6465706F73697420697320616C72656164792074616B656E0000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x199F PUSH1 0x18 DUP4 PUSH2 0x1958 JUMP JUMPDEST SWAP2 POP PUSH2 0x19AA DUP3 PUSH2 0x1969 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19CE DUP2 PUSH2 0x1992 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E7320617265206E6F7420617661696C61626C652C20706C65617365 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20636F6E746163742061646D696E000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A31 PUSH1 0x2E DUP4 PUSH2 0x1958 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A3C DUP3 PUSH2 0x19D5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A60 DUP2 PUSH2 0x1A24 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1A7C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x16BA JUMP JUMPDEST PUSH2 0x1A89 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1567 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1A99 DUP2 PUSH2 0x1782 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1AB6 DUP2 PUSH2 0x1A90 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AD2 JUMPI PUSH2 0x1AD1 PUSH2 0x1591 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AE0 DUP5 DUP3 DUP6 ADD PUSH2 0x1AA7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x41646D696E2063616E207769746864726177206C657373207468616E2061646D PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x696E546F6B656E7320616D6F756E740000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B45 PUSH1 0x2F DUP4 PUSH2 0x1958 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B50 DUP3 PUSH2 0x1AE9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B74 DUP2 PUSH2 0x1B38 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964206465706F7369744964000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BB1 PUSH1 0x11 DUP4 PUSH2 0x1958 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BBC DUP3 PUSH2 0x1B7B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BE0 DUP2 PUSH2 0x1BA4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1BF6 DUP2 PUSH2 0x1596 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C12 JUMPI PUSH2 0x1C11 PUSH2 0x1591 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C20 DUP5 DUP3 DUP6 ADD PUSH2 0x1BE7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C34 DUP3 PUSH2 0x155D JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1C66 JUMPI PUSH2 0x1C65 PUSH2 0x18B8 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CCD PUSH1 0x26 DUP4 PUSH2 0x1958 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CD8 DUP3 PUSH2 0x1C71 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CFC DUP2 PUSH2 0x1CC0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6D696E206C696D697420302E3030312069732072657175697265640000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D39 PUSH1 0x1B DUP4 PUSH2 0x1958 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D44 DUP3 PUSH2 0x1D03 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D68 DUP2 PUSH2 0x1D2C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420706C616E0000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DA5 PUSH1 0xC DUP4 PUSH2 0x1958 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DB0 DUP3 PUSH2 0x1D6F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DD4 DUP2 PUSH2 0x1D98 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1DF0 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x16BA JUMP JUMPDEST PUSH2 0x1DFD PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x16BA JUMP JUMPDEST PUSH2 0x1E0A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1567 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1E27 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1773 JUMP JUMPDEST PUSH2 0x1E34 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1567 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E71 PUSH1 0x1F DUP4 PUSH2 0x1958 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E7C DUP3 PUSH2 0x1E3B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EA0 DUP2 PUSH2 0x1E64 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EB2 DUP3 PUSH2 0x155D JUMP JUMPDEST SWAP2 POP PUSH2 0x1EBD DUP4 PUSH2 0x155D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1ED5 JUMPI PUSH2 0x1ED4 PUSH2 0x18B8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1F15 DUP3 PUSH2 0x155D JUMP JUMPDEST SWAP2 POP PUSH2 0x1F20 DUP4 PUSH2 0x155D JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1F30 JUMPI PUSH2 0x1F2F PUSH2 0x1EDB JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F46 DUP3 PUSH2 0x155D JUMP JUMPDEST SWAP2 POP PUSH2 0x1F51 DUP4 PUSH2 0x155D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1F69 JUMPI PUSH2 0x1F68 PUSH2 0x18B8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FA5 PUSH1 0x20 DUP4 PUSH2 0x1958 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FB0 DUP3 PUSH2 0x1F6F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FD4 DUP2 PUSH2 0x1F98 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 SWAP8 BASEFEE SMOD RETURNDATACOPY PUSH10 0x93033F4E94F28906AE7C 0x2D OR 0xE8 LOG2 DUP3 KECCAK256 EQ RETURN 0xC8 0x5E REVERT LOG4 0xC0 LOG1 0xB1 0xC6 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ","sourceMap":"290:4818:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;775:50;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;967:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;678:47;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2004:1040;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3048:249;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;729:42;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3301:627;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3932:108;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1824:101:0;;;:::i;:::-;;4342:236:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1028:30;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1201:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;829:46:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;880:37;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;4202:136;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4044:154;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;921:19;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;4582:524;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;618:41;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;998:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1453:547:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;944:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;775:50;765:6;810:3;:15;;;;:::i;:::-;775:50;:::o;967:27::-;;;;:::o;678:47::-;720:5;678:47;:::o;2004:1040::-;2261:21:1;:19;:21::i;:::-;2067:24:5::1;2094:47;2119:10;2131:9;2094:24;:47::i;:::-;2067:74;;2148:17;2168:5;:17;2174:10;2168:17;;;;;;;;;;;;;;;2148:37;;2191:24;2218:4;:13;;2232:9;2218:24;;;;;;;;:::i;:::-;;;;;;;;;;;;2191:51;;2276:5;2256:25;;:8;:16;;;;;;;;;;;;:25;;;2248:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;2317:19;2342:14:::0;2359:60:::1;2378:40;765:6;2378:5;2384:8;:13;;;;;;;;;;;;2378:20;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:25;;;:29;;:40;;;;:::i;:::-;2359:8;:14;;;:18;;:60;;;;:::i;:::-;2342:77;;2438:15;2429:6;:24;2425:339;;;2477:78;2497:57;720:5;2497:36;871:4;2497:8;:15;;;:19;;:36;;;;:::i;:::-;:40;;:57;;;;:::i;:::-;2477:8;:15;;;:19;;:78;;;;:::i;:::-;2463:92;;2577:49;2593:32;2613:11;2593:8;:15;;;:19;;:32;;;;:::i;:::-;2577:11;;:15;;:49;;;;:::i;:::-;2563:11;:63;;;;2425:339;;;2661:37;2681:16;2661:8;:15;;;:19;;:37;;;;:::i;:::-;2647:51;;2722:35;2740:16;2722:4;:13;;;:17;;:35;;;;:::i;:::-;2706:4;:13;;:51;;;;2425:339;2802:11;2778:20;:18;:20::i;:::-;:35;;2770:94;;;;;;;;;;;;:::i;:::-;;;;;;;;;2888:31;2907:11;2888:4;:14;;;:18;;:31;;;;:::i;:::-;2871:4;:14;;:48;;;;2925:5;;;;;;;;;;;:14;;;2940:10;2952:11;2925:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2989:4;2970:8;:16;;;:23;;;;;;;;;;;;;;;;;;3015:10;3005:34;;;3027:11;3005:34;;;;;;:::i;:::-;;;;;;;;2061:983;;;;;2303:20:1::0;:18;:20::i;:::-;2004:1040:5;:::o;3048:249::-;1094:13:0;:11;:13::i;:::-;2261:21:1::1;:19;:21::i;:::-;3148:7:5::2;3133:11;;:22;;3125:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;3213:5;;;;;;;;;;;:14;;;3228:10;3240:7;3213:35;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3268:24;3284:7;3268:11;;:15;;:24;;;;:::i;:::-;3254:11;:38;;;;2303:20:1::1;:18;:20::i;:::-;3048:249:5::0;:::o;729:42::-;765:6;729:42;:::o;3301:627::-;3396:7;3431:36;3455:11;3431:23;:36::i;:::-;3419:9;:48;3411:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;3496:17;3516:5;:18;3522:11;3516:18;;;;;;;;;;;;;;;3496:38;;3540:24;3567:4;:13;;3581:9;3567:24;;;;;;;;:::i;:::-;;;;;;;;;;;;3540:51;;3598:14;3615:60;3634:40;765:6;3634:5;3640:8;:13;;;;;;;;;;;;3634:20;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:25;;;:29;;:40;;;;:::i;:::-;3615:8;:14;;;:18;;:60;;;;:::i;:::-;3598:77;;3681:13;3697:70;720:5;3697:49;3717:5;3723:8;:13;;;;;;;;;;;;3717:20;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:28;;;3697:8;:15;;;:19;;:49;;;;:::i;:::-;:53;;:70;;;;:::i;:::-;3681:86;;3773:10;3804:6;3786:15;:24;:51;;3822:15;3786:51;;;3813:6;3786:51;3773:64;;3843:12;3858:8;:14;;;3843:29;;3886:37;765:6;810:3;:15;;;;:::i;:::-;3886:23;3896:12;3903:4;3896:2;:6;;:12;;;;:::i;:::-;3886:5;:9;;:23;;;;:::i;:::-;:27;;:37;;;;:::i;:::-;3879:44;;;;;;;;3301:627;;;;:::o;3932:108::-;3983:7;4005:5;;;;;;;;;;;:15;;;4029:4;4005:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3998:37;;3932:108;:::o;1824:101:0:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;4342:236:5:-;4414:14;4441:9;4453:1;4441:13;;4436:138;4460:5;:18;4466:11;4460:18;;;;;;;;;;;;;;;:27;;:34;;;;4456:1;:38;4436:138;;;4518:49;4529:5;:18;4535:11;4529:18;;;;;;;;;;;;;;;:27;;4557:1;4529:30;;;;;;;;:::i;:::-;;;;;;;;;;;;:37;;;4518:6;:10;;:49;;;;:::i;:::-;4509:58;;4496:3;;;;;:::i;:::-;;;;4436:138;;;;4342:236;;;:::o;1028:30::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1201:85:0:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;829:46:5:-;871:4;829:46;:::o;880:37::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4202:136::-;4277:7;4299:5;:18;4305:11;4299:18;;;;;;;;;;;;;;;:27;;:34;;;;4292:41;;4202:136;;;:::o;4044:154::-;4098:12;4112:15;4142:5;4148:4;4142:11;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:16;;;4135:23;;4174:5;4180:4;4174:11;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:19;;;4164:29;;4044:154;;;:::o;921:19::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4582:524::-;4683:10;4695:15;4712:14;4728:13;4743:14;4759:12;4779:17;4799:5;:18;4805:11;4799:18;;;;;;;;;;;;;;;4779:38;;4823:24;4850:4;:13;;4864:9;4850:24;;;;;;;;:::i;:::-;;;;;;;;;;;;4823:51;;4888:8;:13;;;;;;;;;;;;4881:20;;4917:5;4923:4;4917:11;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:19;;;4907:29;;4951:8;:15;;;4942:24;;4980:8;:14;;;4972:22;;5009:60;5028:40;765:6;5028:5;5034:8;:13;;;;;;;;;;;;5028:20;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:25;;;:29;;:40;;;;:::i;:::-;5009:8;:14;;;:18;;:60;;;;:::i;:::-;5000:69;;5085:8;:16;;;;;;;;;;;;5075:26;;4773:333;;4582:524;;;;;;;;:::o;618:41::-;655:4;618:41;:::o;998:26::-;;;;:::o;2074:198:0:-;1094:13;:11;:13::i;:::-;2182:1:::1;2162:22;;:8;:22;;::::0;2154:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;1453:547:5:-;2261:21:1;:19;:21::i;:::-;655:4:5::1;1533:7;:21;;1525:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;1607:5;:12;;;;1600:4;:19;;;1592:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;1642:5;;;;;;;;;;;:18;;;1661:10;1681:4;1688:7;1642:54;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1703:17;1723:5;:17;1729:10;1723:17;;;;;;;;;;;;;;;1703:37;;1775:1;1751:4;:13;;:20;;;;:25:::0;1747:69:::1;;1791:18;1798:10;1791:18;;;;;;:::i;:::-;;;;;;;;1747:69;1822:5;:17;1828:10;1822:17;;;;;;;;;;;;;;;:26;;1854:46;;;;;;;;1862:4;1854:46;;;;;;1868:7;1854:46;;;;1877:15;1854:46;;;;1894:5;1854:46;;;;::::0;1822:79:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1922:25;1939:7;1922:12;;:16;;:25;;;;:::i;:::-;1907:12;:40;;;;1969:10;1958:37;;;1981:4;1987:7;1958:37;;;;;;;:::i;:::-;;;;;;;;1519:481;2303:20:1::0;:18;:20::i;:::-;1453:547:5;;:::o;944:19::-;;;;;;;;;;;;;:::o;2336:287:1:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;3465:96:4:-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;2755:::-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;3850:::-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;3122:::-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;2629:209:1:-;1716:1;2809:7;:22;;;;2629:209::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2426:187::-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;640:96:3:-;693:7;719:10;712:17;;640:96;:::o;7:77:6:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:122;842:24;860:5;842:24;:::i;:::-;835:5;832:35;822:63;;881:1;878;871:12;822:63;769:122;:::o;897:139::-;943:5;981:6;968:20;959:29;;997:33;1024:5;997:33;:::i;:::-;897:139;;;;:::o;1042:329::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:53;1346:7;1337:6;1326:9;1322:22;1301:53;:::i;:::-;1291:63;;1247:117;1042:329;;;;:::o;1377:126::-;1414:7;1454:42;1447:5;1443:54;1432:65;;1377:126;;;:::o;1509:96::-;1546:7;1575:24;1593:5;1575:24;:::i;:::-;1564:35;;1509:96;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:474::-;1952:6;1960;2009:2;1997:9;1988:7;1984:23;1980:32;1977:119;;;2015:79;;:::i;:::-;1977:119;2135:1;2160:53;2205:7;2196:6;2185:9;2181:22;2160:53;:::i;:::-;2150:63;;2106:117;2262:2;2288:53;2333:7;2324:6;2313:9;2309:22;2288:53;:::i;:::-;2278:63;;2233:118;1884:474;;;;;:::o;2364:329::-;2423:6;2472:2;2460:9;2451:7;2447:23;2443:32;2440:119;;;2478:79;;:::i;:::-;2440:119;2598:1;2623:53;2668:7;2659:6;2648:9;2644:22;2623:53;:::i;:::-;2613:63;;2569:117;2364:329;;;;:::o;2699:118::-;2786:24;2804:5;2786:24;:::i;:::-;2781:3;2774:37;2699:118;;:::o;2823:222::-;2916:4;2954:2;2943:9;2939:18;2931:26;;2967:71;3035:1;3024:9;3020:17;3011:6;2967:71;:::i;:::-;2823:222;;;;:::o;3051:332::-;3172:4;3210:2;3199:9;3195:18;3187:26;;3223:71;3291:1;3280:9;3276:17;3267:6;3223:71;:::i;:::-;3304:72;3372:2;3361:9;3357:18;3348:6;3304:72;:::i;:::-;3051:332;;;;;:::o;3389:86::-;3424:7;3464:4;3457:5;3453:16;3442:27;;3389:86;;;:::o;3481:118::-;3552:22;3568:5;3552:22;:::i;:::-;3545:5;3542:33;3532:61;;3589:1;3586;3579:12;3532:61;3481:118;:::o;3605:135::-;3649:5;3687:6;3674:20;3665:29;;3703:31;3728:5;3703:31;:::i;:::-;3605:135;;;;:::o;3746:325::-;3803:6;3852:2;3840:9;3831:7;3827:23;3823:32;3820:119;;;3858:79;;:::i;:::-;3820:119;3978:1;4003:51;4046:7;4037:6;4026:9;4022:22;4003:51;:::i;:::-;3993:61;;3949:115;3746:325;;;;:::o;4077:112::-;4160:22;4176:5;4160:22;:::i;:::-;4155:3;4148:35;4077:112;;:::o;4195:90::-;4229:7;4272:5;4265:13;4258:21;4247:32;;4195:90;;;:::o;4291:109::-;4372:21;4387:5;4372:21;:::i;:::-;4367:3;4360:34;4291:109;;:::o;4406:755::-;4629:4;4667:3;4656:9;4652:19;4644:27;;4681:67;4745:1;4734:9;4730:17;4721:6;4681:67;:::i;:::-;4758:72;4826:2;4815:9;4811:18;4802:6;4758:72;:::i;:::-;4840;4908:2;4897:9;4893:18;4884:6;4840:72;:::i;:::-;4922;4990:2;4979:9;4975:18;4966:6;4922:72;:::i;:::-;5004:73;5072:3;5061:9;5057:19;5048:6;5004:73;:::i;:::-;5087:67;5149:3;5138:9;5134:19;5125:6;5087:67;:::i;:::-;4406:755;;;;;;;;;:::o;5167:470::-;5233:6;5241;5290:2;5278:9;5269:7;5265:23;5261:32;5258:119;;;5296:79;;:::i;:::-;5258:119;5416:1;5441:51;5484:7;5475:6;5464:9;5460:22;5441:51;:::i;:::-;5431:61;;5387:115;5541:2;5567:53;5612:7;5603:6;5592:9;5588:22;5567:53;:::i;:::-;5557:63;;5512:118;5167:470;;;;;:::o;5643:60::-;5671:3;5692:5;5685:12;;5643:60;;;:::o;5709:142::-;5759:9;5792:53;5810:34;5819:24;5837:5;5819:24;:::i;:::-;5810:34;:::i;:::-;5792:53;:::i;:::-;5779:66;;5709:142;;;:::o;5857:126::-;5907:9;5940:37;5971:5;5940:37;:::i;:::-;5927:50;;5857:126;;;:::o;5989:140::-;6053:9;6086:37;6117:5;6086:37;:::i;:::-;6073:50;;5989:140;;;:::o;6135:159::-;6236:51;6281:5;6236:51;:::i;:::-;6231:3;6224:64;6135:159;;:::o;6300:250::-;6407:4;6445:2;6434:9;6430:18;6422:26;;6458:85;6540:1;6529:9;6525:17;6516:6;6458:85;:::i;:::-;6300:250;;;;:::o;6556:180::-;6604:77;6601:1;6594:88;6701:4;6698:1;6691:15;6725:4;6722:1;6715:15;6742:410;6782:7;6805:20;6823:1;6805:20;:::i;:::-;6800:25;;6839:20;6857:1;6839:20;:::i;:::-;6834:25;;6894:1;6891;6887:9;6916:30;6934:11;6916:30;:::i;:::-;6905:41;;7095:1;7086:7;7082:15;7079:1;7076:22;7056:1;7049:9;7029:83;7006:139;;7125:18;;:::i;:::-;7006:139;6790:362;6742:410;;;;:::o;7158:180::-;7206:77;7203:1;7196:88;7303:4;7300:1;7293:15;7327:4;7324:1;7317:15;7344:169;7428:11;7462:6;7457:3;7450:19;7502:4;7497:3;7493:14;7478:29;;7344:169;;;;:::o;7519:174::-;7659:26;7655:1;7647:6;7643:14;7636:50;7519:174;:::o;7699:366::-;7841:3;7862:67;7926:2;7921:3;7862:67;:::i;:::-;7855:74;;7938:93;8027:3;7938:93;:::i;:::-;8056:2;8051:3;8047:12;8040:19;;7699:366;;;:::o;8071:419::-;8237:4;8275:2;8264:9;8260:18;8252:26;;8324:9;8318:4;8314:20;8310:1;8299:9;8295:17;8288:47;8352:131;8478:4;8352:131;:::i;:::-;8344:139;;8071:419;;;:::o;8496:233::-;8636:34;8632:1;8624:6;8620:14;8613:58;8705:16;8700:2;8692:6;8688:15;8681:41;8496:233;:::o;8735:366::-;8877:3;8898:67;8962:2;8957:3;8898:67;:::i;:::-;8891:74;;8974:93;9063:3;8974:93;:::i;:::-;9092:2;9087:3;9083:12;9076:19;;8735:366;;;:::o;9107:419::-;9273:4;9311:2;9300:9;9296:18;9288:26;;9360:9;9354:4;9350:20;9346:1;9335:9;9331:17;9324:47;9388:131;9514:4;9388:131;:::i;:::-;9380:139;;9107:419;;;:::o;9532:332::-;9653:4;9691:2;9680:9;9676:18;9668:26;;9704:71;9772:1;9761:9;9757:17;9748:6;9704:71;:::i;:::-;9785:72;9853:2;9842:9;9838:18;9829:6;9785:72;:::i;:::-;9532:332;;;;;:::o;9870:116::-;9940:21;9955:5;9940:21;:::i;:::-;9933:5;9930:32;9920:60;;9976:1;9973;9966:12;9920:60;9870:116;:::o;9992:137::-;10046:5;10077:6;10071:13;10062:22;;10093:30;10117:5;10093:30;:::i;:::-;9992:137;;;;:::o;10135:345::-;10202:6;10251:2;10239:9;10230:7;10226:23;10222:32;10219:119;;;10257:79;;:::i;:::-;10219:119;10377:1;10402:61;10455:7;10446:6;10435:9;10431:22;10402:61;:::i;:::-;10392:71;;10348:125;10135:345;;;;:::o;10486:234::-;10626:34;10622:1;10614:6;10610:14;10603:58;10695:17;10690:2;10682:6;10678:15;10671:42;10486:234;:::o;10726:366::-;10868:3;10889:67;10953:2;10948:3;10889:67;:::i;:::-;10882:74;;10965:93;11054:3;10965:93;:::i;:::-;11083:2;11078:3;11074:12;11067:19;;10726:366;;;:::o;11098:419::-;11264:4;11302:2;11291:9;11287:18;11279:26;;11351:9;11345:4;11341:20;11337:1;11326:9;11322:17;11315:47;11379:131;11505:4;11379:131;:::i;:::-;11371:139;;11098:419;;;:::o;11523:167::-;11663:19;11659:1;11651:6;11647:14;11640:43;11523:167;:::o;11696:366::-;11838:3;11859:67;11923:2;11918:3;11859:67;:::i;:::-;11852:74;;11935:93;12024:3;11935:93;:::i;:::-;12053:2;12048:3;12044:12;12037:19;;11696:366;;;:::o;12068:419::-;12234:4;12272:2;12261:9;12257:18;12249:26;;12321:9;12315:4;12311:20;12307:1;12296:9;12292:17;12285:47;12349:131;12475:4;12349:131;:::i;:::-;12341:139;;12068:419;;;:::o;12493:143::-;12550:5;12581:6;12575:13;12566:22;;12597:33;12624:5;12597:33;:::i;:::-;12493:143;;;;:::o;12642:351::-;12712:6;12761:2;12749:9;12740:7;12736:23;12732:32;12729:119;;;12767:79;;:::i;:::-;12729:119;12887:1;12912:64;12968:7;12959:6;12948:9;12944:22;12912:64;:::i;:::-;12902:74;;12858:128;12642:351;;;;:::o;12999:233::-;13038:3;13061:24;13079:5;13061:24;:::i;:::-;13052:33;;13107:66;13100:5;13097:77;13094:103;;13177:18;;:::i;:::-;13094:103;13224:1;13217:5;13213:13;13206:20;;12999:233;;;:::o;13238:225::-;13378:34;13374:1;13366:6;13362:14;13355:58;13447:8;13442:2;13434:6;13430:15;13423:33;13238:225;:::o;13469:366::-;13611:3;13632:67;13696:2;13691:3;13632:67;:::i;:::-;13625:74;;13708:93;13797:3;13708:93;:::i;:::-;13826:2;13821:3;13817:12;13810:19;;13469:366;;;:::o;13841:419::-;14007:4;14045:2;14034:9;14030:18;14022:26;;14094:9;14088:4;14084:20;14080:1;14069:9;14065:17;14058:47;14122:131;14248:4;14122:131;:::i;:::-;14114:139;;13841:419;;;:::o;14266:177::-;14406:29;14402:1;14394:6;14390:14;14383:53;14266:177;:::o;14449:366::-;14591:3;14612:67;14676:2;14671:3;14612:67;:::i;:::-;14605:74;;14688:93;14777:3;14688:93;:::i;:::-;14806:2;14801:3;14797:12;14790:19;;14449:366;;;:::o;14821:419::-;14987:4;15025:2;15014:9;15010:18;15002:26;;15074:9;15068:4;15064:20;15060:1;15049:9;15045:17;15038:47;15102:131;15228:4;15102:131;:::i;:::-;15094:139;;14821:419;;;:::o;15246:162::-;15386:14;15382:1;15374:6;15370:14;15363:38;15246:162;:::o;15414:366::-;15556:3;15577:67;15641:2;15636:3;15577:67;:::i;:::-;15570:74;;15653:93;15742:3;15653:93;:::i;:::-;15771:2;15766:3;15762:12;15755:19;;15414:366;;;:::o;15786:419::-;15952:4;15990:2;15979:9;15975:18;15967:26;;16039:9;16033:4;16029:20;16025:1;16014:9;16010:17;16003:47;16067:131;16193:4;16067:131;:::i;:::-;16059:139;;15786:419;;;:::o;16211:442::-;16360:4;16398:2;16387:9;16383:18;16375:26;;16411:71;16479:1;16468:9;16464:17;16455:6;16411:71;:::i;:::-;16492:72;16560:2;16549:9;16545:18;16536:6;16492:72;:::i;:::-;16574;16642:2;16631:9;16627:18;16618:6;16574:72;:::i;:::-;16211:442;;;;;;:::o;16659:324::-;16776:4;16814:2;16803:9;16799:18;16791:26;;16827:67;16891:1;16880:9;16876:17;16867:6;16827:67;:::i;:::-;16904:72;16972:2;16961:9;16957:18;16948:6;16904:72;:::i;:::-;16659:324;;;;;:::o;16989:181::-;17129:33;17125:1;17117:6;17113:14;17106:57;16989:181;:::o;17176:366::-;17318:3;17339:67;17403:2;17398:3;17339:67;:::i;:::-;17332:74;;17415:93;17504:3;17415:93;:::i;:::-;17533:2;17528:3;17524:12;17517:19;;17176:366;;;:::o;17548:419::-;17714:4;17752:2;17741:9;17737:18;17729:26;;17801:9;17795:4;17791:20;17787:1;17776:9;17772:17;17765:47;17829:131;17955:4;17829:131;:::i;:::-;17821:139;;17548:419;;;:::o;17973:191::-;18013:3;18032:20;18050:1;18032:20;:::i;:::-;18027:25;;18066:20;18084:1;18066:20;:::i;:::-;18061:25;;18109:1;18106;18102:9;18095:16;;18130:3;18127:1;18124:10;18121:36;;;18137:18;;:::i;:::-;18121:36;17973:191;;;;:::o;18170:180::-;18218:77;18215:1;18208:88;18315:4;18312:1;18305:15;18339:4;18336:1;18329:15;18356:185;18396:1;18413:20;18431:1;18413:20;:::i;:::-;18408:25;;18447:20;18465:1;18447:20;:::i;:::-;18442:25;;18486:1;18476:35;;18491:18;;:::i;:::-;18476:35;18533:1;18530;18526:9;18521:14;;18356:185;;;;:::o;18547:194::-;18587:4;18607:20;18625:1;18607:20;:::i;:::-;18602:25;;18641:20;18659:1;18641:20;:::i;:::-;18636:25;;18685:1;18682;18678:9;18670:17;;18709:1;18703:4;18700:11;18697:37;;;18714:18;;:::i;:::-;18697:37;18547:194;;;;:::o;18747:182::-;18887:34;18883:1;18875:6;18871:14;18864:58;18747:182;:::o;18935:366::-;19077:3;19098:67;19162:2;19157:3;19098:67;:::i;:::-;19091:74;;19174:93;19263:3;19174:93;:::i;:::-;19292:2;19287:3;19283:12;19276:19;;18935:366;;;:::o;19307:419::-;19473:4;19511:2;19500:9;19496:18;19488:26;;19560:9;19554:4;19550:20;19546:1;19535:9;19531:17;19524:47;19588:131;19714:4;19588:131;:::i;:::-;19580:139;;19307:419;;;:::o"},"methodIdentifiers":{"MIN_AMOUNT()":"ddbcb5fa","ONE_YEAR()":"16d3bfbb","PENALTY_PERCENT()":"8fa04016","PERCENT_DIVIDER()":"29fc7bd8","TIME_STEP()":"32bc298c","adminTokens()":"f02bde54","deposit(uint8,uint256)":"f4d4c9d7","getContractBalance()":"6f9fb98a","getPlanInfo(uint8)":"aecaa634","getUserAmountOfDeposits(address)":"a8aeb6c2","getUserDepositInfo(address,uint256)":"c0806b03","getUserNegativeDividends(address,uint256)":"468cd2db","getUserTotalDeposits(address)":"7e3abeea","owner()":"8da5cb5b","plans(uint256)":"b1620616","renounceOwnership()":"715018a6","token()":"fc0c546a","totalStacked()":"29eae70d","transferOwnership(address)":"f2fde38b","users(address)":"a87430ba","usersDeposits(uint256)":"89f98fe2","withdraw(uint256)":"2e1a7d4d","withdrawTokens(uint256)":"315a095d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"plan\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"NewDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"Newbie\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MIN_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ONE_YEAR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PENALTY_PERCENT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERCENT_DIVIDER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TIME_STEP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"adminTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"plan\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amounts\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"plan\",\"type\":\"uint8\"}],\"name\":\"getPlanInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"percent\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserAmountOfDeposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"depositId\",\"type\":\"uint256\"}],\"name\":\"getUserDepositInfo\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"plan\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"percent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"finish\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isTaken\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"depositId\",\"type\":\"uint256\"}],\"name\":\"getUserNegativeDividends\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserTotalDeposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"plans\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"percent\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStacked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"seedLoss\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawn\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"usersDeposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"depositId\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amounts\",\"type\":\"uint256\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Stacking.sol\":\"Stacking\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"contracts/Stacking.sol\":{\"keccak256\":\"0x1a5a92b1c421b7fad3dded63e77caf322e76a65972a48cabbc7007fb7c60846e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d098680c777a955a650d58fdf71c3b2fc607af1338a9b7a77b23139c62a1e9c\",\"dweb:/ipfs/QmTehR1ri8dGBh5LB5mSfS8UpFEvChF5BSgNUj6zcPGugP\"]}},\"version\":1}"}}}}}